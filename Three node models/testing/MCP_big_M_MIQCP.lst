GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows - 12/31/21 20:25:09 Page 1
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
C o m p i l a t i o n


   1  Sets
   2  all_t       all hours               /1*48/
   3  t(all_t)    hours                   /1*5/
   4  tec         generators              /base, peak, wind, solar/
   5  con(tec)    conventional generation /base, peak/
   6  all_n       all buses               /north, south/
   7  n(all_n)    selected buses          /north, south/
   8  ;
   9   
  10  alias (n,nn);
  11  alias (n,m);
  12  alias (all_n,all_m);
  13   
  14  * parameters for supply and demand functions
  15  Parameter elasticity / -0.25 /;
  16  Parameter p_ref / 65 /;
  17  Parameter specific_network_costs /0/;
  18  Parameter capacity_slope / 0.5 /;
  19  *Source for network costs: EMMA (3400 EUR/MW/km discontiert mit i = 0.07 ueber 40 Jahre)
  20   
  21  Table B(all_n,all_m)        Susceptance of transmission lines
  22           north  south
  23  north        1     700
  24  south      700       1
  25  ;
  26   
  27  Parameters
  28  * Input Parameters
  29  i_cost(*,*)                 cost data to be loaded from sheet "cost"
  30  i_load(all_t,all_n)         load data to be loaded from sheet "time series" in MWh
  31  i_avail(all_t,tec,all_n)    availability data
  32   
  33  * Model Parameters
  34  load_ref(t,n)                   hourly load in GWh
  35  avail(t,tec,n)              availability of wind and solar generation (1)
  36  c_var(tec,n)                variable costs (EUR per MWh)
  37  c_fix(tec,n)                annualized fixed costs (EUR per MW p.a.)
  38  cap_lim(tec,n)              capacity limit of generation in each node
  39  grid_cost(n,m)
  40  sc                          scaling factor
  41  a_nodal(t,n)                intercept of inverse nodal demand function
  42  s_nodal(t,n)                slope of inverse nodal demand function
  43   
  44  A_zonal(t)                  intercept of inverse zonal demand function
  45  S_zonal(t)                  slope of inverse zonal demand function
  46   
  47  * Output Parameters
  48  consumer_surplus
  49  generation_costs
  50  total_network_cost
  51  load_deviation(t)
  52  res_share
  53  marginal_fixed_costs(tec,n)
  54  fixed_linear_costs(tec,n)
  55  max_marginal_price_adder(tec,n)
  56  variable_costs(tec,n)
  57  o_WF
  58  o_CS
  59  o_GC
  60  o_NC
  61  o_RES_share
  62  o_load(t,n)
  63  o_cap(tec,n)
  64  o_gen(t,tec,n)
  65  price(t)
  66  o_cap_instr(tec,n)
  67  o_instrument(tec,n)
  68  sum_instrument
  69  network_cost
  70  INSTRUMENT(tec,n)
  71   
  72  maximum
  73  threshold
  74   
  75  i_WF
  76  i_instrument(tec,n)
  77  i_cap(tec,n)
  78  i_lambda(t)
  79  i_load_real(t,n)
  80  i_gen(t,tec,n)
  81  i_grid_cap(n,m)
  82  i_flow(t,n,m)
  83  i_up(t,tec,n)
  84  i_down(t,tec,n)
  85  i_mu_G_min(t,tec,n)
  86  i_mu_G_max(t,tec,n)
  87  i_mu_C_min(tec,n)
  88  i_mu_C_max(tec,n)
  89  i_mu_D_min(t,n)
  90  ;
  91   
  92  * Load data
GDXIN   C:\Users\a.eicke\Documents\Locational-investment-signals\Three node models\testing\in.gdx
--- LOAD  i_cost = 1:i_cost
--- LOAD  i_load = 2:i_load
--- LOAD  i_avail = 3:i_avail
  95   
  96  * Data assignment
  97  sc = card(t) / 8760;
  98  load_ref(t,n)               = i_load(t,n) / 1000;
  99  avail(t,tec,n)              = i_avail(t,tec,n);
 100  avail(t,con,n)              = 1;
 101  c_var(tec, n)               = i_cost(tec,"cost_var");
 102  c_fix(tec, n)               = round(i_cost(tec,"cost_fix") * 1000 * sc);
 103  cap_lim(tec,n)              = 100;
 104  grid_cost(n,m)              = round(B(n,m) * specific_network_costs * sc);
 105   
 106  *Inverse demand function at each node
 107  a_nodal(t,n)                = p_ref *(1-1/elasticity);
 108  s_nodal(t,n)                = p_ref *(1/(elasticity*load_ref(t,n)));
 109   
 110  * Inverse demand function of the zonal market (only holds if P(t) < a_nodal(t,n) for all t,n)
 111  A_zonal(t)                  = sum(n, a_nodal(t,n) / s_nodal(t,n)) / sum(n, 1/ s_nodal(t,n));
 112  S_zonal(t)                  = 1 / sum(n, 1/ s_nodal(t,n));
 113   
 114  INSTRUMENT(tec,n)           = 0;
 115   
 116  display c_var, load_ref, avail, c_fix, a_nodal, s_nodal, A_zonal, S_zonal;
 117   
 118  Parameters
 119  consumer_surplus
 120  generation_costs
 121  total_network_cost
 122  res_share
 123   
 124  o_WF
 125  o_CS
 126  o_GC
 127  o_NC
 128  o_RES_share
 129   
 130  o_cap(tec,n)
 131   
 132  ;
 133   
 134  Parameter M1 / 10000/;
 135  Parameter M2 / 10000/;
 136  Parameter M3 / 10000/;
 137  Parameter M4 / 10000/;
 138  Parameter M5 / 10000/;
 139  Parameter M6 / 10000/;
 140   
 141  Binary variables y1(t,tec,n),y2(t,tec,n),y3(tec,n),y4(tec,n),y5(t),y6(t);
 142   
 143   
 144   
 145  Variables
 146  GEN(t,tec,n)
 147  CAP(tec,n)
 148  LOAD_spot(t)
 149  LAMBDA(t)
 150  RHO(t,tec,n)
 151  WF
 152  ;
 153   
 154  Positive variables
 155  mu_G_min(t,tec,n)
 156  mu_G_max(t,tec,n)
 157  mu_C_min(tec,n)
 158  mu_C_max(tec,n)
 159  mu_D_min(t)
 160   
 161  UP(t,tec,n)
 162  DOWN(t,tec,n)
 163  SHARE(t,tec)
 164  ;
 165   
 166  Equations
 167  objective
 168   
 169  gen_min, gen_max,
 170  cap_min, cap_max, demand_min,
 171  energy_balance,
 172  KKT_GEN, KKT_CAP, KKT_load
 173   
 174  complementarity1a,
 175  complementarity1b,
 176  complementarity2a,
 177  complementarity2b,
 178  complementarity3a,
 179  complementarity3b,
 180  complementarity4a,
 181  complementarity4b,
 182  complementarity5a,
 183  complementarity5b,
 184  complementarity6a,
 185  complementarity6b
 186  ;
 187   
 188  objective..                     WF =e= 1;
 189   
 190  ** Inner problem
 191  *Primal constraints
 192  gen_min(t,tec,n)..          0 =g= -GEN(t,tec,n);
 193  gen_max(t,tec,n)..          0 =g= GEN(t,tec,n) - CAP(tec,n) * avail(t,tec,n);
 194   
 195  cap_min(tec,n)..            0 =g= -CAP(tec,n);
 196  cap_max(tec,n)..            0 =g= CAP(tec,n) - cap_lim(tec,n);
 197   
 198  demand_min(t)..             0 =g= -LOAD_spot(t);
 199   
 200  energy_balance(t)..         0 =e= sum((tec,n),GEN(t,tec,n)) - LOAD_spot(t);
 201   
 202  *KKT conditions
 203  KKT_GEN(t,tec,n)..          c_var(tec,n) + mu_G_max(t,tec,n) - mu_G_min(t,tec,n) - LAMBDA(t) =e= 0;
 204  KKT_CAP(tec,n)..            c_fix(tec,n) + capacity_slope * CAP(tec,n) + INSTRUMENT(tec,n) - sum(t,avail(t,tec,n) * mu_G_max(t,tec,n)) + mu_C_max(tec,n) - mu_C_min(tec,n) =e= 0;
 205  KKT_load(t)..               -(A_zonal(t) + S_zonal(t) * LOAD_spot(t)) - mu_D_min(t) + LAMBDA(t) =e= 0;
 206   
 207  complementarity1a(t,tec,n)..    GEN(t,tec,n)        =L= y1(t,tec,n) * M1;
 208  complementarity1b(t,tec,n)..    mu_G_min(t,tec,n)   =L= (1-y1(t,tec,n)) * M1;
 209  complementarity2a(t,tec,n)..    CAP(tec,n) * avail(t,tec,n) - GEN(t,tec,n) =L= y2(t,tec,n) * M2;
 210  complementarity2b(t,tec,n)..    mu_G_max(t,tec,n)   =L= (1-y2(t,tec,n)) * M2;
 211  complementarity3a(tec,n)..      CAP(tec,n)          =L= y3(tec,n) * M3;
 212  complementarity3b(tec,n)..      mu_C_min(tec,n)     =L= (1-y3(tec,n)) * M3;
 213  complementarity4a(tec,n)..      cap_lim(tec,n) - CAP(tec,n) =L= y4(tec,n) * M4;
 214  complementarity4b(tec,n)..      mu_C_max(tec,n)     =L= (1-y4(tec,n)) * M4;
 215  complementarity5a(t)..          LOAD_spot(t)        =L= y5(t) * M5;
 216  complementarity5b(t)..          mu_D_min(t)         =L= (1-y5(t)) * M5;
 217  complementarity6a(t)..          LOAD_spot(t) - sum((tec,n),GEN(t,tec,n)) =L= y6(t) * M6;
 218  complementarity6b(t)..          LAMBDA(t)           =L= (1-y6(t)) * M6;
 219   
 220   
 221  Model LOCI /
 222   
 223  objective
 224   
 225  gen_min
 226  gen_max
 227  cap_min
 228  cap_max
 229   
 230  demand_min
 231  energy_balance
 232   
 233  KKT_GEN
 234  KKT_CAP
 235  KKT_load
 236   
 237  complementarity1a,
 238  complementarity1b,
 239  complementarity2a,
 240  complementarity2b,
 241  complementarity3a,
 242  complementarity3b,
 243  complementarity4a,
 244  complementarity4b,
 245  complementarity5a,
 246  complementarity5b,
 247  complementarity6a,
 248  complementarity6b
 249   
 250  /;
 251   
 252  * Set starting values
 253  LOAD_spot.L(t) =sum(n,load_ref(t,n));
 254  CAP.L(tec,n) = 50;
 255  GEN.up(t,tec,n) = 100;
 256  GEN.lo(t,tec,n) = 0;
 257   
 258  DOWN.up(t,tec,n) = 100;
 259  DOWN.lo(t,tec,n) = 0;
 260   
 261  UP.up(t,tec,n) = 100;
 262  UP.lo(t,tec,n) = 0;
 263   
 264  *Option optcr = 0.5;
 265   
 266  LOCI.nodlim = 25000000;
 267  LOCI.resLim = 40000;
 268   
 269  Solve LOCI maximizing WF using MIQCP;
 270   
 271  price(t) = A_zonal(t) + S_zonal(t) * LOAD_spot.L(t);
 272   
 273  maximum = smax(t,price(t));
 274  threshold = smin((t,n),a_nodal(t,n));
 275   
 276  display maximum, threshold;
 277   
 278   
 279  load_deviation(t) = LOAD_spot.L(t) / sum(n,load_ref(t,n));
 280   
 281  Display GEN.L, CAP.L, LOAD_spot.L, LAMBDA.L, price, load_deviation;
 282  *,WF.L,  GRID.L, LAMBDA.L, LOAD_real.L, CAP_INSTR.L, UP.L, DOWN.L, RESERVE_CAP.L, FLOW.L;
GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows - 12/31/21 20:25:09 Page 2
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Include File Summary


   SEQ   GLOBAL TYPE      PARENT   LOCAL  FILENAME

     1        1 INPUT          0       0  C:\Users\a.eicke\Documents\Locational-investment-signals\Three node models\testing\MCP_big_M_MIQCP.gms
     2       93 GDXIN          1      93  C:\Users\a.eicke\Documents\Locational-investment-signals\Three node models\testing\in.gdx


COMPILATION TIME     =        0.016 SECONDS      3 MB  30.3.0 rc5da09e WEX-WEI
GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows - 12/31/21 20:25:09 Page 3
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
E x e c u t i o n


----    116 PARAMETER c_var  variable costs (EUR per MWh)

           north       south

base      58.000      58.000
peak      73.000      73.000


----    116 PARAMETER load_ref  hourly load in GWh

        north       south

1      15.533      36.243
2      17.065      34.647
3      15.186      41.060
4      21.224      49.522
5      21.433      52.474


----    116 PARAMETER avail  availability of wind and solar generation (1)

              north       south

1.base        1.000       1.000
1.peak        1.000       1.000
1.wind        0.580       0.510
2.base        1.000       1.000
2.peak        1.000       1.000
2.wind        0.510       0.420
3.base        1.000       1.000
3.peak        1.000       1.000
3.wind        0.400       0.330
3.solar       0.030
4.base        1.000       1.000
4.peak        1.000       1.000
4.wind        0.330       0.180
4.solar       0.120       0.020
5.base        1.000       1.000
5.peak        1.000       1.000
5.wind        0.240       0.150
5.solar       0.250       0.130


----    116 PARAMETER c_fix  annualized fixed costs (EUR per MW p.a.)

            north       south

base       54.000      54.000
peak       23.000      23.000
wind       46.000      46.000
solar      26.000      26.000


----    116 PARAMETER a_nodal  intercept of inverse nodal demand function

        north       south

1     325.000     325.000
2     325.000     325.000
3     325.000     325.000
4     325.000     325.000
5     325.000     325.000


----    116 PARAMETER s_nodal  slope of inverse nodal demand function

        north       south

1     -16.739      -7.174
2     -15.236      -7.504
3     -17.121      -6.332
4     -12.251      -5.250
5     -12.131      -4.955


----    116 PARAMETER A_zonal  intercept of inverse zonal demand function

1 325.000,    2 325.000,    3 325.000,    4 325.000,    5 325.000


----    116 PARAMETER S_zonal  slope of inverse zonal demand function

1 -5.022,    2 -5.028,    3 -4.623,    4 -3.675,    5 -3.518

GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows - 12/31/21 20:25:09 Page 4
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE LOCI Using MIQCP From line 269


---- objective  =E=  

objective..  WF =E= 1 ; (LHS = 0, INFES = 1 ****)
     

---- gen_min  =G=  

gen_min(1,base,north)..  GEN(1,base,north) =G= 0 ; (LHS = 0)
     
gen_min(1,base,south)..  GEN(1,base,south) =G= 0 ; (LHS = 0)
     
gen_min(1,peak,north)..  GEN(1,peak,north) =G= 0 ; (LHS = 0)
     
REMAINING 37 ENTRIES SKIPPED


---- gen_max  =G=  

gen_max(1,base,north)..  - GEN(1,base,north) + CAP(base,north) =G= 0 ; (LHS = 50)
     
gen_max(1,base,south)..  - GEN(1,base,south) + CAP(base,south) =G= 0 ; (LHS = 50)
     
gen_max(1,peak,north)..  - GEN(1,peak,north) + CAP(peak,north) =G= 0 ; (LHS = 50)
     
REMAINING 37 ENTRIES SKIPPED


---- cap_min  =G=  

cap_min(base,north)..  CAP(base,north) =G= 0 ; (LHS = 50)
     
cap_min(base,south)..  CAP(base,south) =G= 0 ; (LHS = 50)
     
cap_min(peak,north)..  CAP(peak,north) =G= 0 ; (LHS = 50)
     
REMAINING 5 ENTRIES SKIPPED


---- cap_max  =G=  

cap_max(base,north)..  - CAP(base,north) =G= -100 ; (LHS = -50)
     
cap_max(base,south)..  - CAP(base,south) =G= -100 ; (LHS = -50)
     
cap_max(peak,north)..  - CAP(peak,north) =G= -100 ; (LHS = -50)
     
REMAINING 5 ENTRIES SKIPPED


---- demand_min  =G=  

demand_min(1)..  LOAD_spot(1) =G= 0 ; (LHS = 51.776)
     
demand_min(2)..  LOAD_spot(2) =G= 0 ; (LHS = 51.712)
     
demand_min(3)..  LOAD_spot(3) =G= 0 ; (LHS = 56.246)
     
REMAINING 2 ENTRIES SKIPPED


---- energy_balance  =E=  

energy_balance(1)..  - GEN(1,base,north) - GEN(1,base,south) - GEN(1,peak,north) - GEN(1,peak,south) - GEN(1,wind,north) - GEN(1,wind,south) - GEN(1,solar,north) - GEN(1,solar,south) + LOAD_spot(1) =E= 0 ; (LHS = 51.776, INFES = 51.776 ****)
     
energy_balance(2)..  - GEN(2,base,north) - GEN(2,base,south) - GEN(2,peak,north) - GEN(2,peak,south) - GEN(2,wind,north) - GEN(2,wind,south) - GEN(2,solar,north) - GEN(2,solar,south) + LOAD_spot(2) =E= 0 ; (LHS = 51.712, INFES = 51.712 ****)
     
energy_balance(3)..  - GEN(3,base,north) - GEN(3,base,south) - GEN(3,peak,north) - GEN(3,peak,south) - GEN(3,wind,north) - GEN(3,wind,south) - GEN(3,solar,north) - GEN(3,solar,south) + LOAD_spot(3) =E= 0 ; (LHS = 56.246, INFES = 56.246 ****)
     
REMAINING 2 ENTRIES SKIPPED


---- KKT_GEN  =E=  

KKT_GEN(1,base,north)..  - LAMBDA(1) - mu_G_min(1,base,north) + mu_G_max(1,base,north) =E= -58 ; (LHS = 0, INFES = 58 ****)
     
KKT_GEN(1,base,south)..  - LAMBDA(1) - mu_G_min(1,base,south) + mu_G_max(1,base,south) =E= -58 ; (LHS = 0, INFES = 58 ****)
     
KKT_GEN(1,peak,north)..  - LAMBDA(1) - mu_G_min(1,peak,north) + mu_G_max(1,peak,north) =E= -73 ; (LHS = 0, INFES = 73 ****)
     
REMAINING 37 ENTRIES SKIPPED


---- KKT_CAP  =E=  

KKT_CAP(base,north)..  0.5*CAP(base,north) - mu_G_max(1,base,north) - mu_G_max(2,base,north) - mu_G_max(3,base,north) - mu_G_max(4,base,north) - mu_G_max(5,base,north) - mu_C_min(base,north) + mu_C_max(base,north) =E= -54 ; (LHS = 25, INFES = 79 ****)
     
KKT_CAP(base,south)..  0.5*CAP(base,south) - mu_G_max(1,base,south) - mu_G_max(2,base,south) - mu_G_max(3,base,south) - mu_G_max(4,base,south) - mu_G_max(5,base,south) - mu_C_min(base,south) + mu_C_max(base,south) =E= -54 ; (LHS = 25, INFES = 79 ****)
     
KKT_CAP(peak,north)..  0.5*CAP(peak,north) - mu_G_max(1,peak,north) - mu_G_max(2,peak,north) - mu_G_max(3,peak,north) - mu_G_max(4,peak,north) - mu_G_max(5,peak,north) - mu_C_min(peak,north) + mu_C_max(peak,north) =E= -23 ; (LHS = 25, INFES = 48 ****)
     
REMAINING 5 ENTRIES SKIPPED


---- KKT_load  =E=  

KKT_load(1)..  5.02163164400494*LOAD_spot(1) + LAMBDA(1) - mu_D_min(1) =E= 325 ; (LHS = 260, INFES = 65.0000000000001 ****)
     
KKT_load(2)..  5.02784653465346*LOAD_spot(2) + LAMBDA(2) - mu_D_min(2) =E= 325 ; (LHS = 260, INFES = 65 ****)
     
KKT_load(3)..  4.62255093695552*LOAD_spot(3) + LAMBDA(3) - mu_D_min(3) =E= 325 ; (LHS = 260, INFES = 64.9999999999999 ****)
     
REMAINING 2 ENTRIES SKIPPED


---- complementarity1a  =L=  

complementarity1a(1,base,north)..  - 10000*y1(1,base,north) + GEN(1,base,north) =L= 0 ; (LHS = 0)
     
complementarity1a(1,base,south)..  - 10000*y1(1,base,south) + GEN(1,base,south) =L= 0 ; (LHS = 0)
     
complementarity1a(1,peak,north)..  - 10000*y1(1,peak,north) + GEN(1,peak,north) =L= 0 ; (LHS = 0)
     
REMAINING 37 ENTRIES SKIPPED


---- complementarity1b  =L=  

complementarity1b(1,base,north)..  10000*y1(1,base,north) + mu_G_min(1,base,north) =L= 10000 ; (LHS = 0)
     
complementarity1b(1,base,south)..  10000*y1(1,base,south) + mu_G_min(1,base,south) =L= 10000 ; (LHS = 0)
     
complementarity1b(1,peak,north)..  10000*y1(1,peak,north) + mu_G_min(1,peak,north) =L= 10000 ; (LHS = 0)
     
REMAINING 37 ENTRIES SKIPPED


---- complementarity2a  =L=  

complementarity2a(1,base,north)..  - 10000*y2(1,base,north) - GEN(1,base,north) + CAP(base,north) =L= 0 ; (LHS = 50, INFES = 50 ****)
     
complementarity2a(1,base,south)..  - 10000*y2(1,base,south) - GEN(1,base,south) + CAP(base,south) =L= 0 ; (LHS = 50, INFES = 50 ****)
     
complementarity2a(1,peak,north)..  - 10000*y2(1,peak,north) - GEN(1,peak,north) + CAP(peak,north) =L= 0 ; (LHS = 50, INFES = 50 ****)
     
REMAINING 37 ENTRIES SKIPPED


---- complementarity2b  =L=  

complementarity2b(1,base,north)..  10000*y2(1,base,north) + mu_G_max(1,base,north) =L= 10000 ; (LHS = 0)
     
complementarity2b(1,base,south)..  10000*y2(1,base,south) + mu_G_max(1,base,south) =L= 10000 ; (LHS = 0)
     
complementarity2b(1,peak,north)..  10000*y2(1,peak,north) + mu_G_max(1,peak,north) =L= 10000 ; (LHS = 0)
     
REMAINING 37 ENTRIES SKIPPED


---- complementarity3a  =L=  

complementarity3a(base,north)..  - 10000*y3(base,north) + CAP(base,north) =L= 0 ; (LHS = 50, INFES = 50 ****)
     
complementarity3a(base,south)..  - 10000*y3(base,south) + CAP(base,south) =L= 0 ; (LHS = 50, INFES = 50 ****)
     
complementarity3a(peak,north)..  - 10000*y3(peak,north) + CAP(peak,north) =L= 0 ; (LHS = 50, INFES = 50 ****)
     
REMAINING 5 ENTRIES SKIPPED


---- complementarity3b  =L=  

complementarity3b(base,north)..  10000*y3(base,north) + mu_C_min(base,north) =L= 10000 ; (LHS = 0)
     
complementarity3b(base,south)..  10000*y3(base,south) + mu_C_min(base,south) =L= 10000 ; (LHS = 0)
     
complementarity3b(peak,north)..  10000*y3(peak,north) + mu_C_min(peak,north) =L= 10000 ; (LHS = 0)
     
REMAINING 5 ENTRIES SKIPPED


---- complementarity4a  =L=  

complementarity4a(base,north)..  - 10000*y4(base,north) - CAP(base,north) =L= -100 ; (LHS = -50, INFES = 50 ****)
     
complementarity4a(base,south)..  - 10000*y4(base,south) - CAP(base,south) =L= -100 ; (LHS = -50, INFES = 50 ****)
     
complementarity4a(peak,north)..  - 10000*y4(peak,north) - CAP(peak,north) =L= -100 ; (LHS = -50, INFES = 50 ****)
     
REMAINING 5 ENTRIES SKIPPED


---- complementarity4b  =L=  

complementarity4b(base,north)..  10000*y4(base,north) + mu_C_max(base,north) =L= 10000 ; (LHS = 0)
     
complementarity4b(base,south)..  10000*y4(base,south) + mu_C_max(base,south) =L= 10000 ; (LHS = 0)
     
complementarity4b(peak,north)..  10000*y4(peak,north) + mu_C_max(peak,north) =L= 10000 ; (LHS = 0)
     
REMAINING 5 ENTRIES SKIPPED


---- complementarity5a  =L=  

complementarity5a(1)..  - 10000*y5(1) + LOAD_spot(1) =L= 0 ; (LHS = 51.776, INFES = 51.776 ****)
     
complementarity5a(2)..  - 10000*y5(2) + LOAD_spot(2) =L= 0 ; (LHS = 51.712, INFES = 51.712 ****)
     
complementarity5a(3)..  - 10000*y5(3) + LOAD_spot(3) =L= 0 ; (LHS = 56.246, INFES = 56.246 ****)
     
REMAINING 2 ENTRIES SKIPPED


---- complementarity5b  =L=  

complementarity5b(1)..  10000*y5(1) + mu_D_min(1) =L= 10000 ; (LHS = 0)
     
complementarity5b(2)..  10000*y5(2) + mu_D_min(2) =L= 10000 ; (LHS = 0)
     
complementarity5b(3)..  10000*y5(3) + mu_D_min(3) =L= 10000 ; (LHS = 0)
     
REMAINING 2 ENTRIES SKIPPED


---- complementarity6a  =L=  

complementarity6a(1)..  - 10000*y6(1) - GEN(1,base,north) - GEN(1,base,south) - GEN(1,peak,north) - GEN(1,peak,south) - GEN(1,wind,north) - GEN(1,wind,south) - GEN(1,solar,north) - GEN(1,solar,south) + LOAD_spot(1) =L= 0 ;
     
      (LHS = 51.776, INFES = 51.776 ****)
     
complementarity6a(2)..  - 10000*y6(2) - GEN(2,base,north) - GEN(2,base,south) - GEN(2,peak,north) - GEN(2,peak,south) - GEN(2,wind,north) - GEN(2,wind,south) - GEN(2,solar,north) - GEN(2,solar,south) + LOAD_spot(2) =L= 0 ;
     
      (LHS = 51.712, INFES = 51.712 ****)
     
complementarity6a(3)..  - 10000*y6(3) - GEN(3,base,north) - GEN(3,base,south) - GEN(3,peak,north) - GEN(3,peak,south) - GEN(3,wind,north) - GEN(3,wind,south) - GEN(3,solar,north) - GEN(3,solar,south) + LOAD_spot(3) =L= 0 ;
     
      (LHS = 56.246, INFES = 56.246 ****)
     
REMAINING 2 ENTRIES SKIPPED


---- complementarity6b  =L=  

complementarity6b(1)..  10000*y6(1) + LAMBDA(1) =L= 10000 ; (LHS = 0)
     
complementarity6b(2)..  10000*y6(2) + LAMBDA(2) =L= 10000 ; (LHS = 0)
     
complementarity6b(3)..  10000*y6(3) + LAMBDA(3) =L= 10000 ; (LHS = 0)
     
REMAINING 2 ENTRIES SKIPPED

GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows - 12/31/21 20:25:09 Page 5
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE LOCI Using MIQCP From line 269


---- y1  

y1(1,base,north)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
   -10000       complementarity1a(1,base,north)
    10000       complementarity1b(1,base,north)

y1(1,base,south)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
   -10000       complementarity1a(1,base,south)
    10000       complementarity1b(1,base,south)

y1(1,peak,north)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
   -10000       complementarity1a(1,peak,north)
    10000       complementarity1b(1,peak,north)

REMAINING 37 ENTRIES SKIPPED

---- y2  

y2(1,base,north)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
   -10000       complementarity2a(1,base,north)
    10000       complementarity2b(1,base,north)

y2(1,base,south)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
   -10000       complementarity2a(1,base,south)
    10000       complementarity2b(1,base,south)

y2(1,peak,north)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
   -10000       complementarity2a(1,peak,north)
    10000       complementarity2b(1,peak,north)

REMAINING 37 ENTRIES SKIPPED

---- y3  

y3(base,north)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
   -10000       complementarity3a(base,north)
    10000       complementarity3b(base,north)

y3(base,south)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
   -10000       complementarity3a(base,south)
    10000       complementarity3b(base,south)

y3(peak,north)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
   -10000       complementarity3a(peak,north)
    10000       complementarity3b(peak,north)

REMAINING 5 ENTRIES SKIPPED

---- y4  

y4(base,north)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
   -10000       complementarity4a(base,north)
    10000       complementarity4b(base,north)

y4(base,south)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
   -10000       complementarity4a(base,south)
    10000       complementarity4b(base,south)

y4(peak,north)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
   -10000       complementarity4a(peak,north)
    10000       complementarity4b(peak,north)

REMAINING 5 ENTRIES SKIPPED

---- y5  

y5(1)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
   -10000       complementarity5a(1)
    10000       complementarity5b(1)

y5(2)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
   -10000       complementarity5a(2)
    10000       complementarity5b(2)

y5(3)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
   -10000       complementarity5a(3)
    10000       complementarity5b(3)

REMAINING 2 ENTRIES SKIPPED

---- y6  

y6(1)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
   -10000       complementarity6a(1)
    10000       complementarity6b(1)

y6(2)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
   -10000       complementarity6a(2)
    10000       complementarity6b(2)

y6(3)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
   -10000       complementarity6a(3)
    10000       complementarity6b(3)

REMAINING 2 ENTRIES SKIPPED

---- GEN  

GEN(1,base,north)
                (.LO, .L, .UP, .M = 0, 0, 100, 0)
        1       gen_min(1,base,north)
       -1       gen_max(1,base,north)
       -1       energy_balance(1)
        1       complementarity1a(1,base,north)
       -1       complementarity2a(1,base,north)
       -1       complementarity6a(1)

GEN(1,base,south)
                (.LO, .L, .UP, .M = 0, 0, 100, 0)
        1       gen_min(1,base,south)
       -1       gen_max(1,base,south)
       -1       energy_balance(1)
        1       complementarity1a(1,base,south)
       -1       complementarity2a(1,base,south)
       -1       complementarity6a(1)

GEN(1,peak,north)
                (.LO, .L, .UP, .M = 0, 0, 100, 0)
        1       gen_min(1,peak,north)
       -1       gen_max(1,peak,north)
       -1       energy_balance(1)
        1       complementarity1a(1,peak,north)
       -1       complementarity2a(1,peak,north)
       -1       complementarity6a(1)

REMAINING 37 ENTRIES SKIPPED

---- CAP  

CAP(base,north)
                (.LO, .L, .UP, .M = -INF, 50, +INF, 0)
        1       gen_max(1,base,north)
        1       gen_max(2,base,north)
        1       gen_max(3,base,north)
        1       gen_max(4,base,north)
        1       gen_max(5,base,north)
        1       cap_min(base,north)
       -1       cap_max(base,north)
        0.5     KKT_CAP(base,north)
        1       complementarity2a(1,base,north)
        1       complementarity2a(2,base,north)
        1       complementarity2a(3,base,north)
        1       complementarity2a(4,base,north)
        1       complementarity2a(5,base,north)
        1       complementarity3a(base,north)
       -1       complementarity4a(base,north)

CAP(base,south)
                (.LO, .L, .UP, .M = -INF, 50, +INF, 0)
        1       gen_max(1,base,south)
        1       gen_max(2,base,south)
        1       gen_max(3,base,south)
        1       gen_max(4,base,south)
        1       gen_max(5,base,south)
        1       cap_min(base,south)
       -1       cap_max(base,south)
        0.5     KKT_CAP(base,south)
        1       complementarity2a(1,base,south)
        1       complementarity2a(2,base,south)
        1       complementarity2a(3,base,south)
        1       complementarity2a(4,base,south)
        1       complementarity2a(5,base,south)
        1       complementarity3a(base,south)
       -1       complementarity4a(base,south)

CAP(peak,north)
                (.LO, .L, .UP, .M = -INF, 50, +INF, 0)
        1       gen_max(1,peak,north)
        1       gen_max(2,peak,north)
        1       gen_max(3,peak,north)
        1       gen_max(4,peak,north)
        1       gen_max(5,peak,north)
        1       cap_min(peak,north)
       -1       cap_max(peak,north)
        0.5     KKT_CAP(peak,north)
        1       complementarity2a(1,peak,north)
        1       complementarity2a(2,peak,north)
        1       complementarity2a(3,peak,north)
        1       complementarity2a(4,peak,north)
        1       complementarity2a(5,peak,north)
        1       complementarity3a(peak,north)
       -1       complementarity4a(peak,north)

REMAINING 5 ENTRIES SKIPPED

---- LOAD_spot  

LOAD_spot(1)
                (.LO, .L, .UP, .M = -INF, 51.776, +INF, 0)
        1       demand_min(1)
        1       energy_balance(1)
        5.0216  KKT_load(1)
        1       complementarity5a(1)
        1       complementarity6a(1)

LOAD_spot(2)
                (.LO, .L, .UP, .M = -INF, 51.712, +INF, 0)
        1       demand_min(2)
        1       energy_balance(2)
        5.0278  KKT_load(2)
        1       complementarity5a(2)
        1       complementarity6a(2)

LOAD_spot(3)
                (.LO, .L, .UP, .M = -INF, 56.246, +INF, 0)
        1       demand_min(3)
        1       energy_balance(3)
        4.6226  KKT_load(3)
        1       complementarity5a(3)
        1       complementarity6a(3)

REMAINING 2 ENTRIES SKIPPED

---- LAMBDA  

LAMBDA(1)
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
       -1       KKT_GEN(1,base,north)
       -1       KKT_GEN(1,base,south)
       -1       KKT_GEN(1,peak,north)
       -1       KKT_GEN(1,peak,south)
       -1       KKT_GEN(1,wind,north)
       -1       KKT_GEN(1,wind,south)
       -1       KKT_GEN(1,solar,north)
       -1       KKT_GEN(1,solar,south)
        1       KKT_load(1)
        1       complementarity6b(1)

LAMBDA(2)
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
       -1       KKT_GEN(2,base,north)
       -1       KKT_GEN(2,base,south)
       -1       KKT_GEN(2,peak,north)
       -1       KKT_GEN(2,peak,south)
       -1       KKT_GEN(2,wind,north)
       -1       KKT_GEN(2,wind,south)
       -1       KKT_GEN(2,solar,north)
       -1       KKT_GEN(2,solar,south)
        1       KKT_load(2)
        1       complementarity6b(2)

LAMBDA(3)
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
       -1       KKT_GEN(3,base,north)
       -1       KKT_GEN(3,base,south)
       -1       KKT_GEN(3,peak,north)
       -1       KKT_GEN(3,peak,south)
       -1       KKT_GEN(3,wind,north)
       -1       KKT_GEN(3,wind,south)
       -1       KKT_GEN(3,solar,north)
       -1       KKT_GEN(3,solar,south)
        1       KKT_load(3)
        1       complementarity6b(3)

REMAINING 2 ENTRIES SKIPPED

---- WF  

WF
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
        1       objective


---- mu_G_min  

mu_G_min(1,base,north)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
       -1       KKT_GEN(1,base,north)
        1       complementarity1b(1,base,north)

mu_G_min(1,base,south)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
       -1       KKT_GEN(1,base,south)
        1       complementarity1b(1,base,south)

mu_G_min(1,peak,north)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
       -1       KKT_GEN(1,peak,north)
        1       complementarity1b(1,peak,north)

REMAINING 37 ENTRIES SKIPPED

---- mu_G_max  

mu_G_max(1,base,north)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
        1       KKT_GEN(1,base,north)
       -1       KKT_CAP(base,north)
        1       complementarity2b(1,base,north)

mu_G_max(1,base,south)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
        1       KKT_GEN(1,base,south)
       -1       KKT_CAP(base,south)
        1       complementarity2b(1,base,south)

mu_G_max(1,peak,north)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
        1       KKT_GEN(1,peak,north)
       -1       KKT_CAP(peak,north)
        1       complementarity2b(1,peak,north)

REMAINING 37 ENTRIES SKIPPED

---- mu_C_min  

mu_C_min(base,north)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
       -1       KKT_CAP(base,north)
        1       complementarity3b(base,north)

mu_C_min(base,south)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
       -1       KKT_CAP(base,south)
        1       complementarity3b(base,south)

mu_C_min(peak,north)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
       -1       KKT_CAP(peak,north)
        1       complementarity3b(peak,north)

REMAINING 5 ENTRIES SKIPPED

---- mu_C_max  

mu_C_max(base,north)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
        1       KKT_CAP(base,north)
        1       complementarity4b(base,north)

mu_C_max(base,south)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
        1       KKT_CAP(base,south)
        1       complementarity4b(base,south)

mu_C_max(peak,north)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
        1       KKT_CAP(peak,north)
        1       complementarity4b(peak,north)

REMAINING 5 ENTRIES SKIPPED

---- mu_D_min  

mu_D_min(1)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
       -1       KKT_load(1)
        1       complementarity5b(1)

mu_D_min(2)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
       -1       KKT_load(2)
        1       complementarity5b(2)

mu_D_min(3)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
       -1       KKT_load(3)
        1       complementarity5b(3)

REMAINING 2 ENTRIES SKIPPED
GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows - 12/31/21 20:25:09 Page 6
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Model Statistics    SOLVE LOCI Using MIQCP From line 269


MODEL STATISTICS

BLOCKS OF EQUATIONS          22     SINGLE EQUATIONS          372
BLOCKS OF VARIABLES          16     SINGLE VARIABLES          266
NON ZERO ELEMENTS           875     NON LINEAR N-Z              0
DERIVATIVE POOL              20     CONSTANT POOL              16
CODE LENGTH                   0     DISCRETE VARIABLES        106


GENERATION TIME      =        0.000 SECONDS      4 MB  30.3.0 rc5da09e WEX-WEI


EXECUTION TIME       =        0.000 SECONDS      4 MB  30.3.0 rc5da09e WEX-WEI
GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows - 12/31/21 20:25:09 Page 7
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE LOCI Using MIQCP From line 269


               S O L V E      S U M M A R Y

     MODEL   LOCI                OBJECTIVE  WF
     TYPE    MIQCP               DIRECTION  MAXIMIZE
     SOLVER  SBB                 FROM LINE  269

**** SOLVER STATUS     3 Resource Interrupt        
**** MODEL STATUS      14 No Solution Returned     
**** OBJECTIVE VALUE                0.0000

 RESOURCE USAGE, LIMIT      56501.344     40000.000
 ITERATION COUNT, LIMIT  22041902    2000000000
 EVALUATION ERRORS              0             0
*** This solver runs with a community license.
CONOPT 3         30.3.0 rc5da09e Released Mar 06, 2020 WEI x86 64bit/MS Window
*** This solver runs with a community license.
 
 
    C O N O P T 3   version 3.17K
    Copyright (C)   ARKI Consulting and Development A/S
                    Bagsvaerdvej 246 A
                    DK-2880 Bagsvaerd, Denmark
 
 
 ** Warning **  The variance of the derivatives in the initial
                point is large (= 4.6 ). A better initial
                point, a better scaling, or better bounds on the
                variables will probably help the optimization.
 
 
                   Pre-triangular equations:   1
                   Post-triangular equations:  45
                   Definitional equations:     13
 
 
 ** Optimal solution. Reduced gradient less than tolerance.
 
 
 CONOPT time Total                            0.016 seconds
   of which: Function evaluations             0.000 =  0.0%
             1st Derivative evaluations       0.000 =  0.0%
 

 ^^^ Detailed root node information above.

 Resource limit exceeded
 Statistics:
    B&B nodes     :           2396628
    MIP solution  :                 -
    Best possible :          1.000000
    Absolute gap  :                 -     optca :  0.000000
    Relative gap  :          1.000000     optcr :  0.100000
    Model Status  :                14
    Solver Status :                 3

No solution returned
GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows - 12/31/21 20:25:09 Page 8
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
E x e c u t i o n


----    276 PARAMETER maximum              =       65.000  
            PARAMETER threshold            =      325.000  

----    281 VARIABLE GEN.L  

                      ( ALL       0.000 )


----    281 VARIABLE CAP.L  

            north       south

base       50.000      50.000
peak       50.000      50.000
wind       50.000      50.000
solar      50.000      50.000


----    281 VARIABLE LOAD_spot.L  

1 51.776,    2 51.712,    3 56.246,    4 70.745,    5 73.907


----    281 VARIABLE LAMBDA.L  

                      ( ALL       0.000 )


----    281 PARAMETER price  

1 65.000,    2 65.000,    3 65.000,    4 65.000,    5 65.000


----    281 PARAMETER load_deviation  

1 1.000,    2 1.000,    3 1.000,    4 1.000,    5 1.000



EXECUTION TIME       =       40.390 SECONDS      3 MB  30.3.0 rc5da09e WEX-WEI


USER: Small MUD - 5 User License                     S190305:0326AO-WIN
      Hertie School of Governance GmbH, Governance of DigitalizaDC14808
      License for teaching and research at degree granting institutions


**** FILE SUMMARY

Input      C:\Users\a.eicke\Documents\Locational-investment-signals\Three node models\testing\MCP_big_M_MIQCP.gms
Output     C:\Users\a.eicke\Documents\Locational-investment-signals\Three node models\testing\MCP_big_M_MIQCP.lst
