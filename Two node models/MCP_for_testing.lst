GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows - 03/14/22 16:11:19 Page 1
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
C o m p i l a t i o n


   1  Sets
   2  all_t       all hours               /1*10/
   3  t(all_t)    hours                   /1*10/
   4  tec         generators              /base, peak, wind, solar/
   5  con(tec)    conventional generation /base, peak/
   6  all_n       all buses               /north, south/
   7  n(all_n)    selected buses          /north, south/
   8  ;
   9   
  10   
  11  alias (n,m);
  12  alias (all_n,all_m);
  13   
  14  * parameters for supply and demand functions
  15  Parameter elasticity / -0.05 /;
  16  Parameter p_ref / 55 /;
  17  Parameter specific_network_costs /200/;
  18  Parameter capacity_slope / 333 /;
  19  *Source for network costs: EMMA (3400 EUR/MW/km discontiert mit i = 0.07 ueber 40 Jahre)
  20   
  21  Table B(all_n,all_m)        Susceptance of transmission lines
  22           north  south
  23  north        1     700
  24  south      700       1
  25  ;
  26   
  27  Parameters
  28  o_instrument;
  29   
GDXIN   C:\Users\a.eicke\Documents\Locational-investment-signals\Two node models\Output/without_instrument.gdx
--- LOAD  o_instrument = 6:o_instrument
  32   
  33  Parameters
  34  INSTRUMENT(tec,n)
  35  sc          scaling factor
  36  ;
  37   
  38  sc = card(t) / 8760;
  39  *load instrument
  40  INSTRUMENT(tec,n)           = o_instrument * sc * 1000;
  41   
  42   
  43  Parameters
  44  * Input Parameters
  45  i_cost(*,*)                 cost data to be loaded from sheet "cost"
  46  i_load(all_t,all_n)         load data to be loaded from sheet "time series" in MWh
  47  i_avail(all_t,tec,all_n)    availability data
  48   
  49  * Model Parameters
  50  load_ref(t,n)                   hourly load in GWh
  51  avail(t,tec,n)              availability of wind and solar generation (1)
  52  c_var(tec,n)                variable costs (EUR per MWh)
  53  c_fix(tec,n)                annualized fixed costs (EUR per MW p.a.)
  54  cap_lim(tec,n)              capacity limit of generation in each node
  55  grid_cost(n,m)
  56  a_nodal(t,n)                intercept of inverse nodal demand function
  57  s_nodal(t,n)                slope of inverse nodal demand function
  58   
  59  A_zonal(t)                  intercept of inverse zonal demand function
  60  S_zonal(t)                  slope of inverse zonal demand function
  61   
  62  * Output Parameters
  63  consumer_surplus
  64  generation_costs
  65  total_network_cost
  66  load_deviation(t)
  67  res_share
  68  marginal_fixed_costs(tec,n)
  69  fixed_linear_costs(tec,n)
  70  max_marginal_price_adder(tec,n)
  71  variable_costs(tec,n)
  72  o_WF
  73  o_CS
  74  o_GC
  75  o_NC
  76  o_RES_share
  77  o_load(t,n)
  78  o_cap(tec,n)
  79  o_gen(t,tec,n)
  80  price(t)
  81  o_cap_instr(tec,n)
  82  sum_instrument
  83  network_cost
  84  network_cost_1
  85  network_cost_2
  86  network_cost_3
  87   
  88   
  89  maximum
  90  threshold
  91   
  92  ;
  93   
  94  * Load data
GDXIN   C:\Users\a.eicke\Documents\Locational-investment-signals\Two node models\in.gdx
--- LOAD  i_cost = 1:i_cost
  97   
GDXIN   C:\Users\a.eicke\Documents\Locational-investment-signals\Two node models\load.gdx
--- LOAD  i_load = 1:i_load
 100   
GDXIN   C:\Users\a.eicke\Documents\Locational-investment-signals\Two node models\avail.gdx
--- LOAD  i_avail = 1:i_avail
 103   
 104   
 105   
 106  * Data assignment
 107  load_ref(t,n)               = i_load(t,n) / 1000;
 108  avail(t,tec,n)              = i_avail(t,tec,n);
 109  avail(t,con,n)              = 1;
 110  c_var(tec, n)               = i_cost(tec,"cost_var");
 111  c_fix(tec, n)               = round(i_cost(tec,"cost_fix") * 1000 * sc);
 112  cap_lim(tec,n)              = 100;
 113  grid_cost(n,m)              = round(B(n,m) * specific_network_costs * sc);
 114   
 115  *Inverse demand function at each node
 116  a_nodal(t,n)                = p_ref *(1-1/elasticity);
 117  s_nodal(t,n)                = p_ref *(1/(elasticity*load_ref(t,n)));
 118   
 119  * Inverse demand function of the zonal market (only holds if P(t) < a_nodal(t,n) for all t,n)
 120  A_zonal(t)                  = sum(n, a_nodal(t,n) / s_nodal(t,n)) / sum(n, 1/ s_nodal(t,n));
 121  S_zonal(t)                  = 1 / sum(n, 1/ s_nodal(t,n));
 122   
 123   
 124   
 125  display INSTRUMENT;
 126   
 127  display c_var, load_ref, avail, c_fix, a_nodal, s_nodal, A_zonal, S_zonal;
 128   
 129  Parameters
 130  consumer_surplus
 131  generation_costs
 132  total_network_cost
 133  res_share
 134   
 135  o_WF
 136  o_CS
 137  o_GC
 138  o_NC
 139  o_RES_share
 140   
 141  o_cap(tec,n)
 142  o_price(t)
 143  o_cap_instr(tec,n)
 144   
 145  ;
 146   
 147   
 148  Variables
 149  GEN(t,tec,n)
 150  CAP(tec,n)
 151  LOAD_zonal(t)
 152  LAMBDA(t)
 153  RHO(t,tec,n)
 154  WF
 155  ;
 156   
 157  Positive variables
 158  mu_G_min(t,tec,n)
 159  mu_G_max(t,tec,n)
 160  mu_C_min(tec,n)
 161  mu_C_max(tec,n)
 162  mu_D_min(t)
 163   
 164  UP(t,tec,n)
 165  DOWN(t,tec,n)
 166  SHARE(t,tec)
 167  ;
 168   
 169  Equations
 170  gen_min, gen_max,
 171  cap_min, cap_max, demand_min,
 172  energy_balance,
 173  KKT_GEN, KKT_CAP, KKT_load;
 174   
 175   
 176  ** Inner problem
 177  *Primal constraints
 178  gen_min(t,tec,n)..          0 =g= -GEN(t,tec,n);
 179  gen_max(t,tec,n)..          0 =g= GEN(t,tec,n) - CAP(tec,n) * avail(t,tec,n);
 180   
 181  cap_min(tec,n)..            0 =g= -CAP(tec,n);
 182  cap_max(tec,n)..            0 =g= CAP(tec,n) - cap_lim(tec,n);
 183   
 184  demand_min(t)..             0 =g= -LOAD_zonal(t);
 185   
 186  energy_balance(t)..         0 =e= sum((tec,n),GEN(t,tec,n)) - LOAD_zonal(t);
 187   
 188  *KKT conditions
 189  KKT_GEN(t,tec,n)..          c_var(tec,n) + mu_G_max(t,tec,n) - mu_G_min(t,tec,n) - LAMBDA(t) =e= 0;
 190  KKT_CAP(tec,n)..            c_fix(tec,n) + capacity_slope * CAP(tec,n) + INSTRUMENT(tec,n) - sum(t,avail(t,tec,n) * mu_G_max(t,tec,n)) + mu_C_max(tec,n) - mu_C_min(tec,n) =e= 0;
 191  KKT_load(t)..               -(A_zonal(t) + S_zonal(t) * LOAD_zonal(t)) - mu_D_min(t) + LAMBDA(t) =e= 0;
 192   
 193  Model LOCI /
 194   
 195  gen_min.mu_G_min
 196  gen_max.mu_G_max
 197  cap_min.mu_C_min
 198  cap_max.mu_C_max
 199  demand_min.mu_D_min
 200  energy_balance.LAMBDA
 201  KKT_GEN
 202  KKT_CAP
 203  KKT_load
 204   
 205  /;
 206   
 207  * Set starting values
 208  *LOAD_real.L(t,n) =load(t,n);
 209   
 210  Option optcr = 0.0005;
 211   
 212  Solve LOCI using MCP;
 213   
 214  price(t) = A_zonal(t) + S_zonal(t) * LOAD_zonal.L(t);
 215   
 216  maximum = smax(t,price(t));
 217  threshold = smin((t,n),a_nodal(t,n));
 218   
 219  network_cost_1 = sum((n,m),(GRID_CAP.L(n,m) / 2 * grid_cost(n,m)));
****                                       $140
**** 140  Unknown symbol
 220  network_cost_2 = sum((t,tec,n), (UP.L(t,tec,n) - DOWN.L(t,tec,n)) * c_var(tec,n));
****                                      $141              $141
**** 141  Symbol declared but no values have been assigned. Check for missing
****         data definition, assignment, data loading or implicit assignment
****         via a solve statement.
****         A wild shot: You may have spurious commas in the explanatory
****         text of a declaration. Check symbol reference list.
 221  network_cost_3 = sum((t), A_zonal(t) * LOAD_spot.L(t) + 1/2 * S_zonal(t) * LOAD_spot.L(t) * LOAD_spot.L(t))
****                                                   $140
**** 140  Unknown symbol
 222                  - sum((t,n), a_nodal(t,n) * LOAD_redi.L(t,n) + 1/2 * s_nodal(t,n) * LOAD_redi.L(t,n) * LOAD_redi.L(t,n))
****                                                        $140
**** 140  Unknown symbol
 223                  ;
 224   
 225  network_cost = network_cost_1 + network_cost_2 + network_cost_3;
 226   
 227  consumer_surplus = sum((t), A_zonal(t) * LOAD_spot.L(t) + 1/2 * S_zonal(t) * LOAD_spot.L(t) * LOAD_spot.L(t));
 228   
 229  generation_costs = (sum((tec,n), CAP.L(tec,n) * c_fix(tec,n) + 0.5 * CAP.L(tec,n) * CAP.L(tec,n) * capacity_slope) + sum((t,tec,n), GEN.L(t,tec,n) * c_var(tec,n)));
 230   
 231  sum_instrument = sum((tec,n), INSTRUMENT.L * CAP.L(tec,n));
****                                           $142,148
**** 142  No suffix allowed here - suffix ignored
**** 148  Dimension different - The symbol is referenced with more/less
****         indices as declared
 232   
 233  load_deviation(t,n) = ((SPOT_PRICE.L(t) - a_nodal(t,n)) / s_nodal(t,n)) - load_ref(t,n);
****                    $148             $140
**** 140  Unknown symbol
**** 148  Dimension different - The symbol is referenced with more/less
****         indices as declared
 234  load_shedding(t,n) = LOAD_spot.L(t) - LOAD_redi.L(t,n);
****              $140
**** 140  Unknown symbol
 235  res_share = 1 - sum((t,con,n), GEN.L(t,con,n)) / sum((t,tec,n), GEN.L(t,tec,n));
 236  o_cap(tec,n) = CAP.L(tec,n);
 237  o_gen(t,tec,n) = GEN.L(t,tec,n);
 238  real_generation(t,tec,n) = GEN.L(t,tec,n) + UP.L(t,tec,n) - DOWN.L(t,tec,n);
****                $140
**** 140  Unknown symbol
 239  welfare = WF.L;
****        $140   $141
**** 140  Unknown symbol
**** 141  Symbol declared but no values have been assigned. Check for missing
****         data definition, assignment, data loading or implicit assignment
****         via a solve statement.
****         A wild shot: You may have spurious commas in the explanatory
****         text of a declaration. Check symbol reference list.
 240   
 241  display maximum, threshold;
 242   
 243  Display WF.L, consumer_surplus, generation_costs, network_cost, network_cost_1, network_cost_2, network_cost_3, CAP.L, GEN.L, UP.L, DOWN.L, FLOW.L, price, load_deviation, load_shedding, GRID_CAP.L, LOAD_redi.L, LOAD_spot.L, o_instrument, sum_instrum
****                                                                                                                                                   $140
      ent;
**** 140  Unknown symbol
 244   
 245  execute_UNLOAD 'Output/without_instrument_MCP.gdx' welfare, consumer_surplus, generation_costs, network_cost, res_share, o_instrument, sum_instrument, o_cap, o_gen, price, c_fix;

**** 14 ERROR(S)   0 WARNING(S)
GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows - 03/14/22 16:11:19 Page 2
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Include File Summary


   SEQ   GLOBAL TYPE      PARENT   LOCAL  FILENAME

     1        1 INPUT          0       0  C:\Users\a.eicke\Documents\Locational-investment-signals\Two node models\MCP_for_testing.gms
     2       30 GDXIN          1      30  C:\Users\a.eicke\Documents\Locational-investment-signals\Two node models\Output/without_instrument.gdx
     3       95 GDXIN          1      95  C:\Users\a.eicke\Documents\Locational-investment-signals\Two node models\in.gdx
     4       98 GDXIN          1      98  C:\Users\a.eicke\Documents\Locational-investment-signals\Two node models\load.gdx
     5      101 GDXIN          1     101  C:\Users\a.eicke\Documents\Locational-investment-signals\Two node models\avail.gdx


COMPILATION TIME     =        0.000 SECONDS      3 MB  30.3.0 rc5da09e WEX-WEI


USER: Small MUD - 5 User License                     S190305:0326AO-WIN
      Hertie School of Governance GmbH, Governance of DigitalizaDC14808
      License for teaching and research at degree granting institutions


**** FILE SUMMARY

Input      C:\Users\a.eicke\Documents\Locational-investment-signals\Two node models\MCP_for_testing.gms
Output     C:\Users\a.eicke\Documents\Locational-investment-signals\Two node models\MCP_for_testing.lst

**** USER ERROR(S) ENCOUNTERED
