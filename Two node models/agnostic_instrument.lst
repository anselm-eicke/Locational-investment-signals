GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows - 02/16/22 08:47:55 Page 1
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
C o m p i l a t i o n


   1  Sets
   2  all_t       all hours               /1*10/
   3  t(all_t)    hours                   /1*8/
   4  tec         generators              /base, peak, wind, solar/
   5  con(tec)    conventional generation /base, peak/
   6  all_n       all buses               /north, south/
   7  n(all_n)    selected buses          /north, south/
   8  ;
   9   
  10   
  11  alias (n,m);
  12  alias (all_n,all_m);
  13   
  14  * parameters for supply and demand functions
  15  Parameter elasticity / -0.03 /;
  16  Parameter p_ref / 55 /;
  17  Parameter specific_network_costs /200/;
  18  Parameter capacity_slope / 333 /;
  19  *Source for network costs: EMMA (3400 EUR/MW/km discontiert mit i = 0.07 ueber 40 Jahre)
  20   
  21  Table B(all_n,all_m)        Susceptance of transmission lines
  22           north  south
  23  north        1     700
  24  south      700       1
  25  ;
  26   
  27   
  28  Parameters
  29  * Input Parameters
  30  i_cost(*,*)                 cost data to be loaded from sheet "cost"
  31  i_load(all_t,all_n)         load data to be loaded from sheet "time series" in MWh
  32  i_avail(all_t,tec,all_n)    availability data
  33   
  34  * Model Parameters
  35  load_ref(t,n)               hourly load in GWh
  36  avail(t,tec,n)              availability of wind and solar generation (1)
  37  c_var(tec,n)                variable costs (EUR per MWh)
  38  c_fix(tec,n)                annualized fixed costs (EUR per MW p.a.)
  39  cap_lim(tec,n)              capacity limit of generation in each node
  40  grid_cost(n,m)
  41  sc                          scaling factor
  42  a_nodal(t,n)                intercept of inverse nodal demand function
  43  s_nodal(t,n)                slope of inverse nodal demand function
  44   
  45  A_zonal(t)                  intercept of inverse zonal demand function
  46  S_zonal(t)                  slope of inverse zonal demand function
  47   
  48  * Output Parameters
  49  welfare,
  50  consumer_surplus
  51  generation_costs
  52  load_deviation(t,n)
  53  load_shedding(t,n)
  54  network_cost
  55  network_cost_1
  56  network_cost_2
  57  network_cost_3
  58   
  59  res_share
  60  real_generation(t,tec,n)
  61   
  62  o_RES_share
  63  o_load(t,n)
  64  o_cap(tec,n)
  65  o_gen(t,tec,n)
  66  price(t)
  67  o_instrument(n)
  68  sum_instrument
  69  ;
  70   
  71  * Load data
GDXIN   C:\Users\a.eicke\Documents\Locational-investment-signals\Two node models\in.gdx
--- LOAD  i_cost = 1:i_cost
  74   
GDXIN   C:\Users\a.eicke\Documents\Locational-investment-signals\Two node models\load.gdx
--- LOAD  i_load = 1:i_load
  77   
GDXIN   C:\Users\a.eicke\Documents\Locational-investment-signals\Two node models\avail.gdx
--- LOAD  i_avail = 1:i_avail
  80   
  81   
  82  * Data assignment
  83  sc = card(t) / 8760;
  84  load_ref(t,n)               = i_load(t,n) / 1000;
  85  avail(t,tec,n)              = i_avail(t,tec,n);
  86  avail(t,con,n)              = 1;
  87  c_var(tec, n)               = i_cost(tec,"cost_var");
  88  c_fix(tec, n)               = round(i_cost(tec,"cost_fix") * 1000 * sc);
  89  cap_lim(tec,n)              = 100;
  90  grid_cost(n,m)              = round(B(n,m) * specific_network_costs * sc);
  91  capacity_slope              = capacity_slope * sc;
  92   
  93  *Inverse demand function at each node
  94  a_nodal(t,n)                = p_ref *(1-1/elasticity);
  95  s_nodal(t,n)                = p_ref *(1/(elasticity*load_ref(t,n)));
  96   
  97  * Inverse demand function of the zonal market (only holds if P(t) < a_nodal(t,n) for all t,n)
  98  A_zonal(t)                  = sum(n, a_nodal(t,n) / s_nodal(t,n)) / sum(n, 1/ s_nodal(t,n));
  99  S_zonal(t)                  = 1 / sum(n, 1/ s_nodal(t,n));
 100   
 101  display c_var, load_ref, avail, c_fix, a_nodal, s_nodal, A_zonal, S_zonal;
 102   
 103  Binary variables y1(t,tec,n),y2(t,tec,n),y3(tec,n),y4(tec,n),y5(t),y6(t);
 104   
 105  Parameter M1 / 100000/;
 106  Parameter M2 / 100000/;
 107  Parameter M3 / 100000/;
 108  Parameter M4 / 100000/;
 109  Parameter M5 / 100000/;
 110  Parameter M6 / 100000/;
 111   
 112  Free Variables
 113  GEN(t,tec,n)
 114  CAP(tec,n)
 115  WF
 116  FLOW(t,n,m)
 117  INSTRUMENT(n)
 118  THETA(t,n)
 119  SPOT_PRICE(t)
 120  ;
 121   
 122  Positive variables
 123  mu_G_min(t,tec,n)
 124  mu_G_max(t,tec,n)
 125  mu_C_min(tec,n)
 126  mu_C_max(tec,n)
 127  mu_D_min(t)
 128   
 129  GRID_CAP(n,m)
 130  LOAD_redi(t,n)
 131  LOAD_spot(t)
 132  UP(t,tec,n)
 133  DOWN(t,tec,n)
 134  ;
 135   
 136  Equations
 137  objective, instr_const,
 138  nodal_energy_balance,
 139  grid_eq1, grid_eq2, grid_eq3, grid_eq4,
 140  redispatch1, redispatch2,
 141   
 142  gen_min, gen_max,
 143  cap_min, cap_max,
 144  demand_min,
 145  energy_balance,
 146   
 147  KKT_GEN, KKT_CAP, KKT_load,
 148   
 149  complementarity1a,
 150  complementarity1b,
 151  complementarity2a,
 152  complementarity2b,
 153  complementarity3a,
 154  complementarity3b,
 155  complementarity4a,
 156  complementarity4b,
 157  complementarity5a,
 158  complementarity5b,
 159  complementarity6a,
 160  complementarity6b
 161  ;
 162   
 163  objective..                     WF =e= sum((t,n), a_nodal(t,n) * LOAD_redi(t,n) + 1/2 * s_nodal(t,n) * LOAD_redi(t,n) * LOAD_redi(t,n))
 164                                      - sum((tec,n), CAP(tec,n) * c_fix(tec,n) + 0.5 * CAP(tec,n) * CAP(tec,n) * capacity_slope)
 165                                      - sum((t,tec,n), GEN(t,tec,n) * c_var(tec,n))
 166                                      - sum((t,tec,n), (UP(t,tec,n) - DOWN(t,tec,n)) * (c_var(tec,n)))
 167                                      - sum((n,m),(GRID_CAP(n,m) * grid_cost(n,m)) / 2)
 168                                      ;
 169   
 170  nodal_energy_balance(t,n)..     sum(tec,GEN(t,tec,n) - DOWN(t,tec,n) + UP(t,tec,n)) - LOAD_redi(t,n) =E= sum(m,FLOW(t,n,m));
 171   
 172  *network constraints
 173  grid_eq1(t,n,m)..               FLOW(t,n,m) =l= GRID_CAP(n,m);
 174  grid_eq2(n,m)..                 GRID_CAP(n,m) =e= GRID_CAP(m,n);
 175  grid_eq3(t,n,m)..               FLOW(t,n,m) =e= B(n,m) *(THETA(t,n) - THETA(t,m));
 176  grid_eq4(t,n)..                 THETA(t,'south') =e= 0;
 177   
 178  redispatch1(t,tec,n)..          DOWN(t,tec,n) =L= GEN(t,tec,n);
 179  redispatch2(t,tec,n)..          UP(t,tec,n) =L= CAP(tec,n) * avail(t,tec,n) - GEN(t,tec,n);
 180   
 181  ** INNER PROBLEM
 182  gen_min(t,tec,n)..              0 =g= -GEN(t,tec,n);
 183  gen_max(t,tec,n)..              0 =g= GEN(t,tec,n) - CAP(tec,n) * avail(t,tec,n);
 184   
 185  cap_min(tec,n)..                0 =g= -CAP(tec,n);
 186  cap_max(tec,n)..                0 =g= CAP(tec,n) - cap_lim(tec,n);
 187   
 188  demand_min(t)..                 0 =g= -LOAD_spot(t);
 189  energy_balance(t)..             0 =e= sum((tec,n),GEN(t,tec,n)) - LOAD_spot(t);
 190   
 191  KKT_GEN(t,tec,n)..              c_var(tec,n) + mu_G_max(t,tec,n) - mu_G_min(t,tec,n) - SPOT_PRICE(t) =e= 0;
 192  KKT_CAP(tec,n)..                c_fix(tec,n) + capacity_slope * CAP(tec,n) + INSTRUMENT(n) - sum(t,avail(t,tec,n) * mu_G_max(t,tec,n)) + mu_C_max(tec,n) - mu_C_min(tec,n) =e= 0;
 193  KKT_load(t)..                   -(A_zonal(t) + S_zonal(t) * LOAD_spot(t)) - mu_D_min(t) + SPOT_PRICE(t) =e= 0;
 194   
 195  complementarity1a(t,tec,n)..    GEN(t,tec,n)        =L= y1(t,tec,n) * M1;
 196  complementarity1b(t,tec,n)..    mu_G_min(t,tec,n)   =L= (1-y1(t,tec,n)) * M1;
 197  complementarity2a(t,tec,n)..    CAP(tec,n) * avail(t,tec,n) - GEN(t,tec,n) =L= y2(t,tec,n) * M2;
 198  complementarity2b(t,tec,n)..    mu_G_max(t,tec,n)   =L= (1-y2(t,tec,n)) * M2;
 199  complementarity3a(tec,n)..      CAP(tec,n)          =L= y3(tec,n) * M3;
 200  complementarity3b(tec,n)..      mu_C_min(tec,n)     =L= (1-y3(tec,n)) * M3;
 201  complementarity4a(tec,n)..      cap_lim(tec,n) - CAP(tec,n) =L= y4(tec,n) * M4;
 202  complementarity4b(tec,n)..      mu_C_max(tec,n)     =L= (1-y4(tec,n)) * M4;
 203  complementarity5a(t)..          LOAD_spot(t)        =L= y5(t) * M5;
 204  complementarity5b(t)..          mu_D_min(t)       =L= (1-y5(t)) * M5;
 205  complementarity6a(t)..          LOAD_spot(t) - sum((tec,n),GEN(t,tec,n)) =L= y6(t) * M6;
 206  complementarity6b(t)..          SPOT_PRICE(t)           =L= (1-y6(t)) * M6;
 207   
 208   
 209  Model LOCI /
 210   
 211  objective
 212  nodal_energy_balance
 213   
 214  grid_eq1
 215  grid_eq2
 216  grid_eq3
 217  grid_eq4
 218   
 219  redispatch1
 220  redispatch2
 221   
 222  gen_min
 223  gen_max
 224  cap_min
 225  cap_max
 226   
 227  demand_min
 228  energy_balance
 229   
 230  KKT_GEN
 231  KKT_CAP
 232  KKT_load
 233   
 234  complementarity1a
 235  complementarity1b
 236  complementarity2a
 237  complementarity2b
 238  complementarity3a
 239  complementarity3b
 240  complementarity4a
 241  complementarity4b
 242  complementarity5a
 243  complementarity5b
 244  complementarity6a
 245  complementarity6b
 246  /;
 247   
 248   
 249  INSTRUMENT.lo(n) = -40;
 250  INSTRUMENT.up(n) = 40;
 251   
 252  GEN.up(t,tec,n) = 100;
 253  GEN.lo(t,tec,n) = 0;
 254   
 255  DOWN.up(t,tec,n) = 100;
 256  DOWN.lo(t,tec,n) = 0;
 257   
 258  UP.up(t,tec,n) = 100;
 259  UP.lo(t,tec,n) = 0;
 260   
 261  LOCI.nodlim = 65000000;
 262  LOCI.resLim = 150000;
 263   
 264  * default value is too large (tested by comparing results to a nodal model with network costs = 0)
 265  Option optcr = 0.00001;
 266   
 267  Option MIQCP = Cplex;
 268   
 269   
 270  Solve LOCI maximizing WF using MIQCP;
 271   
 272  price(t) = SPOT_PRICE.L(t);
 273   
 274  o_instrument(n) = INSTRUMENT.L(n) / sc / 1000;
 275   
 276  network_cost_1 = sum((n,m),(GRID_CAP.L(n,m) / 2 * grid_cost(n,m)));
 277  network_cost_2 = sum((t,tec,n), (UP.L(t,tec,n) - DOWN.L(t,tec,n)) * c_var(tec,n));
 278  network_cost_3 = sum((t), A_zonal(t) * LOAD_spot.L(t) + 1/2 * S_zonal(t) * LOAD_spot.L(t) * LOAD_spot.L(t))
 279                  - sum((t,n), a_nodal(t,n) * LOAD_redi.L(t,n) + 1/2 * s_nodal(t,n) * LOAD_redi.L(t,n) * LOAD_redi.L(t,n))
 280                  ;
 281   
 282  network_cost = network_cost_1 + network_cost_2 + network_cost_3;
 283   
 284  consumer_surplus = sum((t), A_zonal(t) * LOAD_spot.L(t) + 1/2 * S_zonal(t) * LOAD_spot.L(t) * LOAD_spot.L(t));
 285   
 286  generation_costs = (sum((tec,n), CAP.L(tec,n) * c_fix(tec,n) + 0.5 * CAP.L(tec,n) * CAP.L(tec,n) * capacity_slope) + sum((t,tec,n), GEN.L(t,tec,n) * c_var(tec,n)));
 287   
 288  sum_instrument = sum((tec,n), INSTRUMENT.L(n) * CAP.L(tec,n));
 289   
 290  load_deviation(t,n) = ((SPOT_PRICE.L(t) - a_nodal(t,n)) / s_nodal(t,n)) - load_ref(t,n);
 291  load_shedding(t,n) = LOAD_spot.L(t) - LOAD_redi.L(t,n);
 292  res_share = 1 - sum((t,con,n), GEN.L(t,con,n)) / sum((t,tec,n), GEN.L(t,tec,n));
 293  o_cap(tec,n) = CAP.L(tec,n);
 294  o_gen(t,tec,n) = GEN.L(t,tec,n);
 295  real_generation(t,tec,n) = GEN.L(t,tec,n) + UP.L(t,tec,n) - DOWN.L(t,tec,n);
 296  welfare = WF.L;
 297   
 298  Display WF.L, consumer_surplus, generation_costs, network_cost, network_cost_1, network_cost_2, network_cost_3, CAP.L, GEN.L, UP.L, DOWN.L, FLOW.L, price, load_deviation, load_shedding, GRID_CAP.L, LOAD_redi.L, LOAD_spot.L, o_instrument, sum_instrum
      ent;
 299   
 300  execute_UNLOAD 'Output/agnostic_instrument.gdx' welfare, consumer_surplus, generation_costs, network_cost, res_share, o_instrument, sum_instrument, o_cap, o_gen, price, c_fix;

**** LIST OF STRAY NAMES - CHECK DECLARATIONS FOR SPURIOUS COMMAS
**** STRAY NAME instr_const OF TYPE EQU  
GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows - 02/16/22 08:47:55 Page 2
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Include File Summary


   SEQ   GLOBAL TYPE      PARENT   LOCAL  FILENAME

     1        1 INPUT          0       0  C:\Users\a.eicke\Documents\Locational-investment-signals\Two node models\agnostic_instrument.gms
     2       72 GDXIN          1      72  C:\Users\a.eicke\Documents\Locational-investment-signals\Two node models\in.gdx
     3       75 GDXIN          1      75  C:\Users\a.eicke\Documents\Locational-investment-signals\Two node models\load.gdx
     4       78 GDXIN          1      78  C:\Users\a.eicke\Documents\Locational-investment-signals\Two node models\avail.gdx


COMPILATION TIME     =        0.000 SECONDS      3 MB  30.3.0 rc5da09e WEX-WEI
GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows - 02/16/22 08:47:55 Page 3
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
E x e c u t i o n


----    101 PARAMETER c_var  variable costs (EUR per MWh)

           north       south

base      40.000      40.000
peak      70.000      70.000


----    101 PARAMETER load_ref  hourly load in GWh

        north       south

1       5.700      38.740
2       3.060      42.080
3       2.840      51.310
4      22.260      38.900
5      16.130      46.970
6      29.240      31.410
7      28.340      31.500
8       6.170      54.070


----    101 PARAMETER avail  availability of wind and solar generation (1)

              north       south

1.base        1.000       1.000
1.peak        1.000       1.000
1.wind        0.430       0.310
2.base        1.000       1.000
2.peak        1.000       1.000
2.wind        0.240       0.160
2.solar       0.200       0.080
3.base        1.000       1.000
3.peak        1.000       1.000
3.wind        0.210       0.120
3.solar       0.330       0.240
4.base        1.000       1.000
4.peak        1.000       1.000
4.wind        0.160       0.130
4.solar       0.040       0.040
5.base        1.000       1.000
5.peak        1.000       1.000
5.wind        0.080       0.100
6.base        1.000       1.000
6.peak        1.000       1.000
6.wind        0.110       0.080
6.solar       0.020       0.020
7.base        1.000       1.000
7.peak        1.000       1.000
7.wind        0.190       0.180
7.solar       0.230       0.350
8.base        1.000       1.000
8.peak        1.000       1.000
8.wind        0.260       0.300
8.solar       0.240       0.410


----    101 PARAMETER c_fix  annualized fixed costs (EUR per MW p.a.)

            north       south

base      274.000     274.000
peak      100.000     100.000
wind       91.000      91.000
solar      55.000      55.000


----    101 PARAMETER a_nodal  intercept of inverse nodal demand function

        north       south

1    1888.333    1888.333
2    1888.333    1888.333
3    1888.333    1888.333
4    1888.333    1888.333
5    1888.333    1888.333
6    1888.333    1888.333
7    1888.333    1888.333
8    1888.333    1888.333


----    101 PARAMETER s_nodal  slope of inverse nodal demand function

        north       south

1    -321.637     -47.324
2    -599.129     -43.568
3    -645.540     -35.731
4     -82.360     -47.129
5    -113.660     -39.032
6     -62.699     -58.368
7     -64.691     -58.201
8    -297.137     -33.907


----    101 PARAMETER A_zonal  intercept of inverse zonal demand function

1 1888.333,    2 1888.333,    3 1888.333,    4 1888.333,    5 1888.333,    6 1888.333,    7 1888.333,    8 1888.333


----    101 PARAMETER S_zonal  slope of inverse zonal demand function

1 -41.254,    2 -40.614,    3 -33.857,    4 -29.976,    5 -29.054,    6 -30.228,    7 -30.637,    8 -30.434

GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows - 02/16/22 08:47:55 Page 4
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE LOCI Using MIQCP From line 270


---- objective  =E=  

objective..  40*GEN(1,base,north) + 40*GEN(1,base,south) + 70*GEN(1,peak,north) + 70*GEN(1,peak,south) + 40*GEN(2,base,north) + 40*GEN(2,base,south) + 70*GEN(2,peak,north) + 70*GEN(2,peak,south) + 40*GEN(3,base,north) + 40*GEN(3,base,south)
     
      + 70*GEN(3,peak,north) + 70*GEN(3,peak,south) + 40*GEN(4,base,north) + 40*GEN(4,base,south) + 70*GEN(4,peak,north) + 70*GEN(4,peak,south) + 40*GEN(5,base,north) + 40*GEN(5,base,south) + 70*GEN(5,peak,north) + 70*GEN(5,peak,south)
     
      + 40*GEN(6,base,north) + 40*GEN(6,base,south) + 70*GEN(6,peak,north) + 70*GEN(6,peak,south) + 40*GEN(7,base,north) + 40*GEN(7,base,south) + 70*GEN(7,peak,north) + 70*GEN(7,peak,south) + 40*GEN(8,base,north) + 40*GEN(8,base,south)
     
      + 70*GEN(8,peak,north) + 70*GEN(8,peak,south) + (274)*CAP(base,north) + (274)*CAP(base,south) + (100)*CAP(peak,north) + (100)*CAP(peak,south) + (91)*CAP(wind,north) + (91)*CAP(wind,south) + (55)*CAP(solar,north) + (55)*CAP(solar,south) + WF
     
      + 64*GRID_CAP(north,south) + 64*GRID_CAP(south,north) - (1888.33333333333)*LOAD_redi(1,north) - (1888.33333333333)*LOAD_redi(1,south) - (1888.33333333333)*LOAD_redi(2,north) - (1888.33333333333)*LOAD_redi(2,south)
     
      - (1888.33333333333)*LOAD_redi(3,north) - (1888.33333333333)*LOAD_redi(3,south) - (1888.33333333333)*LOAD_redi(4,north) - (1888.33333333333)*LOAD_redi(4,south) - (1888.33333333333)*LOAD_redi(5,north) - (1888.33333333333)*LOAD_redi(5,south)
     
      - (1888.33333333333)*LOAD_redi(6,north) - (1888.33333333333)*LOAD_redi(6,south) - (1888.33333333333)*LOAD_redi(7,north) - (1888.33333333333)*LOAD_redi(7,south) - (1888.33333333333)*LOAD_redi(8,north) - (1888.33333333333)*LOAD_redi(8,south)
     
      + 40*UP(1,base,north) + 40*UP(1,base,south) + 70*UP(1,peak,north) + 70*UP(1,peak,south) + 40*UP(2,base,north) + 40*UP(2,base,south) + 70*UP(2,peak,north) + 70*UP(2,peak,south) + 40*UP(3,base,north) + 40*UP(3,base,south) + 70*UP(3,peak,north)
     
      + 70*UP(3,peak,south) + 40*UP(4,base,north) + 40*UP(4,base,south) + 70*UP(4,peak,north) + 70*UP(4,peak,south) + 40*UP(5,base,north) + 40*UP(5,base,south) + 70*UP(5,peak,north) + 70*UP(5,peak,south) + 40*UP(6,base,north) + 40*UP(6,base,south)
     
      + 70*UP(6,peak,north) + 70*UP(6,peak,south) + 40*UP(7,base,north) + 40*UP(7,base,south) + 70*UP(7,peak,north) + 70*UP(7,peak,south) + 40*UP(8,base,north) + 40*UP(8,base,south) + 70*UP(8,peak,north) + 70*UP(8,peak,south) - 40*DOWN(1,base,north)
     
      - 40*DOWN(1,base,south) - 70*DOWN(1,peak,north) - 70*DOWN(1,peak,south) - 40*DOWN(2,base,north) - 40*DOWN(2,base,south) - 70*DOWN(2,peak,north) - 70*DOWN(2,peak,south) - 40*DOWN(3,base,north) - 40*DOWN(3,base,south) - 70*DOWN(3,peak,north)
     
      - 70*DOWN(3,peak,south) - 40*DOWN(4,base,north) - 40*DOWN(4,base,south) - 70*DOWN(4,peak,north) - 70*DOWN(4,peak,south) - 40*DOWN(5,base,north) - 40*DOWN(5,base,south) - 70*DOWN(5,peak,north) - 70*DOWN(5,peak,south) - 40*DOWN(6,base,north)
     
      - 40*DOWN(6,base,south) - 70*DOWN(6,peak,north) - 70*DOWN(6,peak,south) - 40*DOWN(7,base,north) - 40*DOWN(7,base,south) - 70*DOWN(7,peak,north) - 70*DOWN(7,peak,south) - 40*DOWN(8,base,north) - 40*DOWN(8,base,south) - 70*DOWN(8,peak,north)
     
      - 70*DOWN(8,peak,south) =E= 0 ; (LHS = 0)
     

---- nodal_energy_balance  =E=  

nodal_energy_balance(1,north)..  GEN(1,base,north) + GEN(1,peak,north) + GEN(1,wind,north) + GEN(1,solar,north) - FLOW(1,north,north) - FLOW(1,north,south) - LOAD_redi(1,north) + UP(1,base,north) + UP(1,peak,north) + UP(1,wind,north) + UP(1,solar,north)
     
      - DOWN(1,base,north) - DOWN(1,peak,north) - DOWN(1,wind,north) - DOWN(1,solar,north) =E= 0 ; (LHS = 0)
     
nodal_energy_balance(1,south)..  GEN(1,base,south) + GEN(1,peak,south) + GEN(1,wind,south) + GEN(1,solar,south) - FLOW(1,south,north) - FLOW(1,south,south) - LOAD_redi(1,south) + UP(1,base,south) + UP(1,peak,south) + UP(1,wind,south) + UP(1,solar,south)
     
      - DOWN(1,base,south) - DOWN(1,peak,south) - DOWN(1,wind,south) - DOWN(1,solar,south) =E= 0 ; (LHS = 0)
     
nodal_energy_balance(2,north)..  GEN(2,base,north) + GEN(2,peak,north) + GEN(2,wind,north) + GEN(2,solar,north) - FLOW(2,north,north) - FLOW(2,north,south) - LOAD_redi(2,north) + UP(2,base,north) + UP(2,peak,north) + UP(2,wind,north) + UP(2,solar,north)
     
      - DOWN(2,base,north) - DOWN(2,peak,north) - DOWN(2,wind,north) - DOWN(2,solar,north) =E= 0 ; (LHS = 0)
     
REMAINING 13 ENTRIES SKIPPED


---- grid_eq1  =L=  

grid_eq1(1,north,north)..  FLOW(1,north,north) - GRID_CAP(north,north) =L= 0 ; (LHS = 0)
     
grid_eq1(1,north,south)..  FLOW(1,north,south) - GRID_CAP(north,south) =L= 0 ; (LHS = 0)
     
grid_eq1(1,south,north)..  FLOW(1,south,north) - GRID_CAP(south,north) =L= 0 ; (LHS = 0)
     
REMAINING 29 ENTRIES SKIPPED


---- grid_eq2  =E=  

grid_eq2(north,south)..  GRID_CAP(north,south) - GRID_CAP(south,north) =E= 0 ; (LHS = 0)
     
grid_eq2(south,north)..  - GRID_CAP(north,south) + GRID_CAP(south,north) =E= 0 ; (LHS = 0)
     

---- grid_eq3  =E=  

grid_eq3(1,north,north)..  FLOW(1,north,north) =E= 0 ; (LHS = 0)
     
grid_eq3(1,north,south)..  FLOW(1,north,south) - 700*THETA(1,north) + 700*THETA(1,south) =E= 0 ; (LHS = 0)
     
grid_eq3(1,south,north)..  FLOW(1,south,north) + 700*THETA(1,north) - 700*THETA(1,south) =E= 0 ; (LHS = 0)
     
REMAINING 29 ENTRIES SKIPPED


---- grid_eq4  =E=  

grid_eq4(1,north)..  THETA(1,south) =E= 0 ; (LHS = 0)
     
grid_eq4(1,south)..  THETA(1,south) =E= 0 ; (LHS = 0)
     
grid_eq4(2,north)..  THETA(2,south) =E= 0 ; (LHS = 0)
     
REMAINING 13 ENTRIES SKIPPED


---- redispatch1  =L=  

redispatch1(1,base,north)..  - GEN(1,base,north) + DOWN(1,base,north) =L= 0 ; (LHS = 0)
     
redispatch1(1,base,south)..  - GEN(1,base,south) + DOWN(1,base,south) =L= 0 ; (LHS = 0)
     
redispatch1(1,peak,north)..  - GEN(1,peak,north) + DOWN(1,peak,north) =L= 0 ; (LHS = 0)
     
REMAINING 61 ENTRIES SKIPPED


---- redispatch2  =L=  

redispatch2(1,base,north)..  GEN(1,base,north) - CAP(base,north) + UP(1,base,north) =L= 0 ; (LHS = 0)
     
redispatch2(1,base,south)..  GEN(1,base,south) - CAP(base,south) + UP(1,base,south) =L= 0 ; (LHS = 0)
     
redispatch2(1,peak,north)..  GEN(1,peak,north) - CAP(peak,north) + UP(1,peak,north) =L= 0 ; (LHS = 0)
     
REMAINING 61 ENTRIES SKIPPED


---- gen_min  =G=  

gen_min(1,base,north)..  GEN(1,base,north) =G= 0 ; (LHS = 0)
     
gen_min(1,base,south)..  GEN(1,base,south) =G= 0 ; (LHS = 0)
     
gen_min(1,peak,north)..  GEN(1,peak,north) =G= 0 ; (LHS = 0)
     
REMAINING 61 ENTRIES SKIPPED


---- gen_max  =G=  

gen_max(1,base,north)..  - GEN(1,base,north) + CAP(base,north) =G= 0 ; (LHS = 0)
     
gen_max(1,base,south)..  - GEN(1,base,south) + CAP(base,south) =G= 0 ; (LHS = 0)
     
gen_max(1,peak,north)..  - GEN(1,peak,north) + CAP(peak,north) =G= 0 ; (LHS = 0)
     
REMAINING 61 ENTRIES SKIPPED


---- cap_min  =G=  

cap_min(base,north)..  CAP(base,north) =G= 0 ; (LHS = 0)
     
cap_min(base,south)..  CAP(base,south) =G= 0 ; (LHS = 0)
     
cap_min(peak,north)..  CAP(peak,north) =G= 0 ; (LHS = 0)
     
REMAINING 5 ENTRIES SKIPPED


---- cap_max  =G=  

cap_max(base,north)..  - CAP(base,north) =G= -100 ; (LHS = 0)
     
cap_max(base,south)..  - CAP(base,south) =G= -100 ; (LHS = 0)
     
cap_max(peak,north)..  - CAP(peak,north) =G= -100 ; (LHS = 0)
     
REMAINING 5 ENTRIES SKIPPED


---- demand_min  =G=  

demand_min(1)..  LOAD_spot(1) =G= 0 ; (LHS = 0)
     
demand_min(2)..  LOAD_spot(2) =G= 0 ; (LHS = 0)
     
demand_min(3)..  LOAD_spot(3) =G= 0 ; (LHS = 0)
     
REMAINING 5 ENTRIES SKIPPED


---- energy_balance  =E=  

energy_balance(1)..  - GEN(1,base,north) - GEN(1,base,south) - GEN(1,peak,north) - GEN(1,peak,south) - GEN(1,wind,north) - GEN(1,wind,south) - GEN(1,solar,north) - GEN(1,solar,south) + LOAD_spot(1) =E= 0 ; (LHS = 0)
     
energy_balance(2)..  - GEN(2,base,north) - GEN(2,base,south) - GEN(2,peak,north) - GEN(2,peak,south) - GEN(2,wind,north) - GEN(2,wind,south) - GEN(2,solar,north) - GEN(2,solar,south) + LOAD_spot(2) =E= 0 ; (LHS = 0)
     
energy_balance(3)..  - GEN(3,base,north) - GEN(3,base,south) - GEN(3,peak,north) - GEN(3,peak,south) - GEN(3,wind,north) - GEN(3,wind,south) - GEN(3,solar,north) - GEN(3,solar,south) + LOAD_spot(3) =E= 0 ; (LHS = 0)
     
REMAINING 5 ENTRIES SKIPPED


---- KKT_GEN  =E=  

KKT_GEN(1,base,north)..  - SPOT_PRICE(1) - mu_G_min(1,base,north) + mu_G_max(1,base,north) =E= -40 ; (LHS = 0, INFES = 40 ****)
     
KKT_GEN(1,base,south)..  - SPOT_PRICE(1) - mu_G_min(1,base,south) + mu_G_max(1,base,south) =E= -40 ; (LHS = 0, INFES = 40 ****)
     
KKT_GEN(1,peak,north)..  - SPOT_PRICE(1) - mu_G_min(1,peak,north) + mu_G_max(1,peak,north) =E= -70 ; (LHS = 0, INFES = 70 ****)
     
REMAINING 61 ENTRIES SKIPPED


---- KKT_CAP  =E=  

KKT_CAP(base,north)..  0.304109589041096*CAP(base,north) + INSTRUMENT(north) - mu_G_max(1,base,north) - mu_G_max(2,base,north) - mu_G_max(3,base,north) - mu_G_max(4,base,north) - mu_G_max(5,base,north) - mu_G_max(6,base,north) - mu_G_max(7,base,north)
     
      - mu_G_max(8,base,north) - mu_C_min(base,north) + mu_C_max(base,north) =E= -274 ; (LHS = 0, INFES = 274 ****)
     
KKT_CAP(base,south)..  0.304109589041096*CAP(base,south) + INSTRUMENT(south) - mu_G_max(1,base,south) - mu_G_max(2,base,south) - mu_G_max(3,base,south) - mu_G_max(4,base,south) - mu_G_max(5,base,south) - mu_G_max(6,base,south) - mu_G_max(7,base,south)
     
      - mu_G_max(8,base,south) - mu_C_min(base,south) + mu_C_max(base,south) =E= -274 ; (LHS = 0, INFES = 274 ****)
     
KKT_CAP(peak,north)..  0.304109589041096*CAP(peak,north) + INSTRUMENT(north) - mu_G_max(1,peak,north) - mu_G_max(2,peak,north) - mu_G_max(3,peak,north) - mu_G_max(4,peak,north) - mu_G_max(5,peak,north) - mu_G_max(6,peak,north) - mu_G_max(7,peak,north)
     
      - mu_G_max(8,peak,north) - mu_C_min(peak,north) + mu_C_max(peak,north) =E= -100 ; (LHS = 0, INFES = 100 ****)
     
REMAINING 5 ENTRIES SKIPPED


---- KKT_load  =E=  

KKT_load(1)..  SPOT_PRICE(1) - mu_D_min(1) + 41.2541254125412*LOAD_spot(1) =E= 1888.33333333333 ; (LHS = 0, INFES = 1888.33333333333 ****)
     
KKT_load(2)..  SPOT_PRICE(2) - mu_D_min(2) + 40.61438487668*LOAD_spot(2) =E= 1888.33333333333 ; (LHS = 0, INFES = 1888.33333333333 ****)
     
KKT_load(3)..  SPOT_PRICE(3) - mu_D_min(3) + 33.8565712526931*LOAD_spot(3) =E= 1888.33333333333 ; (LHS = 0, INFES = 1888.33333333333 ****)
     
REMAINING 5 ENTRIES SKIPPED


---- complementarity1a  =L=  

complementarity1a(1,base,north)..  - 100000*y1(1,base,north) + GEN(1,base,north) =L= 0 ; (LHS = 0)
     
complementarity1a(1,base,south)..  - 100000*y1(1,base,south) + GEN(1,base,south) =L= 0 ; (LHS = 0)
     
complementarity1a(1,peak,north)..  - 100000*y1(1,peak,north) + GEN(1,peak,north) =L= 0 ; (LHS = 0)
     
REMAINING 61 ENTRIES SKIPPED


---- complementarity1b  =L=  

complementarity1b(1,base,north)..  100000*y1(1,base,north) + mu_G_min(1,base,north) =L= 100000 ; (LHS = 0)
     
complementarity1b(1,base,south)..  100000*y1(1,base,south) + mu_G_min(1,base,south) =L= 100000 ; (LHS = 0)
     
complementarity1b(1,peak,north)..  100000*y1(1,peak,north) + mu_G_min(1,peak,north) =L= 100000 ; (LHS = 0)
     
REMAINING 61 ENTRIES SKIPPED


---- complementarity2a  =L=  

complementarity2a(1,base,north)..  - 100000*y2(1,base,north) - GEN(1,base,north) + CAP(base,north) =L= 0 ; (LHS = 0)
     
complementarity2a(1,base,south)..  - 100000*y2(1,base,south) - GEN(1,base,south) + CAP(base,south) =L= 0 ; (LHS = 0)
     
complementarity2a(1,peak,north)..  - 100000*y2(1,peak,north) - GEN(1,peak,north) + CAP(peak,north) =L= 0 ; (LHS = 0)
     
REMAINING 61 ENTRIES SKIPPED


---- complementarity2b  =L=  

complementarity2b(1,base,north)..  100000*y2(1,base,north) + mu_G_max(1,base,north) =L= 100000 ; (LHS = 0)
     
complementarity2b(1,base,south)..  100000*y2(1,base,south) + mu_G_max(1,base,south) =L= 100000 ; (LHS = 0)
     
complementarity2b(1,peak,north)..  100000*y2(1,peak,north) + mu_G_max(1,peak,north) =L= 100000 ; (LHS = 0)
     
REMAINING 61 ENTRIES SKIPPED


---- complementarity3a  =L=  

complementarity3a(base,north)..  - 100000*y3(base,north) + CAP(base,north) =L= 0 ; (LHS = 0)
     
complementarity3a(base,south)..  - 100000*y3(base,south) + CAP(base,south) =L= 0 ; (LHS = 0)
     
complementarity3a(peak,north)..  - 100000*y3(peak,north) + CAP(peak,north) =L= 0 ; (LHS = 0)
     
REMAINING 5 ENTRIES SKIPPED


---- complementarity3b  =L=  

complementarity3b(base,north)..  100000*y3(base,north) + mu_C_min(base,north) =L= 100000 ; (LHS = 0)
     
complementarity3b(base,south)..  100000*y3(base,south) + mu_C_min(base,south) =L= 100000 ; (LHS = 0)
     
complementarity3b(peak,north)..  100000*y3(peak,north) + mu_C_min(peak,north) =L= 100000 ; (LHS = 0)
     
REMAINING 5 ENTRIES SKIPPED


---- complementarity4a  =L=  

complementarity4a(base,north)..  - 100000*y4(base,north) - CAP(base,north) =L= -100 ; (LHS = 0, INFES = 100 ****)
     
complementarity4a(base,south)..  - 100000*y4(base,south) - CAP(base,south) =L= -100 ; (LHS = 0, INFES = 100 ****)
     
complementarity4a(peak,north)..  - 100000*y4(peak,north) - CAP(peak,north) =L= -100 ; (LHS = 0, INFES = 100 ****)
     
REMAINING 5 ENTRIES SKIPPED


---- complementarity4b  =L=  

complementarity4b(base,north)..  100000*y4(base,north) + mu_C_max(base,north) =L= 100000 ; (LHS = 0)
     
complementarity4b(base,south)..  100000*y4(base,south) + mu_C_max(base,south) =L= 100000 ; (LHS = 0)
     
complementarity4b(peak,north)..  100000*y4(peak,north) + mu_C_max(peak,north) =L= 100000 ; (LHS = 0)
     
REMAINING 5 ENTRIES SKIPPED


---- complementarity5a  =L=  

complementarity5a(1)..  - 100000*y5(1) + LOAD_spot(1) =L= 0 ; (LHS = 0)
     
complementarity5a(2)..  - 100000*y5(2) + LOAD_spot(2) =L= 0 ; (LHS = 0)
     
complementarity5a(3)..  - 100000*y5(3) + LOAD_spot(3) =L= 0 ; (LHS = 0)
     
REMAINING 5 ENTRIES SKIPPED


---- complementarity5b  =L=  

complementarity5b(1)..  100000*y5(1) + mu_D_min(1) =L= 100000 ; (LHS = 0)
     
complementarity5b(2)..  100000*y5(2) + mu_D_min(2) =L= 100000 ; (LHS = 0)
     
complementarity5b(3)..  100000*y5(3) + mu_D_min(3) =L= 100000 ; (LHS = 0)
     
REMAINING 5 ENTRIES SKIPPED


---- complementarity6a  =L=  

complementarity6a(1)..  - 100000*y6(1) - GEN(1,base,north) - GEN(1,base,south) - GEN(1,peak,north) - GEN(1,peak,south) - GEN(1,wind,north) - GEN(1,wind,south) - GEN(1,solar,north) - GEN(1,solar,south) + LOAD_spot(1) =L= 0 ; (LHS = 0)
     
complementarity6a(2)..  - 100000*y6(2) - GEN(2,base,north) - GEN(2,base,south) - GEN(2,peak,north) - GEN(2,peak,south) - GEN(2,wind,north) - GEN(2,wind,south) - GEN(2,solar,north) - GEN(2,solar,south) + LOAD_spot(2) =L= 0 ; (LHS = 0)
     
complementarity6a(3)..  - 100000*y6(3) - GEN(3,base,north) - GEN(3,base,south) - GEN(3,peak,north) - GEN(3,peak,south) - GEN(3,wind,north) - GEN(3,wind,south) - GEN(3,solar,north) - GEN(3,solar,south) + LOAD_spot(3) =L= 0 ; (LHS = 0)
     
REMAINING 5 ENTRIES SKIPPED


---- complementarity6b  =L=  

complementarity6b(1)..  100000*y6(1) + SPOT_PRICE(1) =L= 100000 ; (LHS = 0)
     
complementarity6b(2)..  100000*y6(2) + SPOT_PRICE(2) =L= 100000 ; (LHS = 0)
     
complementarity6b(3)..  100000*y6(3) + SPOT_PRICE(3) =L= 100000 ; (LHS = 0)
     
REMAINING 5 ENTRIES SKIPPED

GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows - 02/16/22 08:47:55 Page 5
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE LOCI Using MIQCP From line 270


---- y1  

y1(1,base,north)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
  -100000       complementarity1a(1,base,north)
   100000       complementarity1b(1,base,north)

y1(1,base,south)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
  -100000       complementarity1a(1,base,south)
   100000       complementarity1b(1,base,south)

y1(1,peak,north)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
  -100000       complementarity1a(1,peak,north)
   100000       complementarity1b(1,peak,north)

REMAINING 61 ENTRIES SKIPPED

---- y2  

y2(1,base,north)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
  -100000       complementarity2a(1,base,north)
   100000       complementarity2b(1,base,north)

y2(1,base,south)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
  -100000       complementarity2a(1,base,south)
   100000       complementarity2b(1,base,south)

y2(1,peak,north)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
  -100000       complementarity2a(1,peak,north)
   100000       complementarity2b(1,peak,north)

REMAINING 61 ENTRIES SKIPPED

---- y3  

y3(base,north)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
  -100000       complementarity3a(base,north)
   100000       complementarity3b(base,north)

y3(base,south)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
  -100000       complementarity3a(base,south)
   100000       complementarity3b(base,south)

y3(peak,north)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
  -100000       complementarity3a(peak,north)
   100000       complementarity3b(peak,north)

REMAINING 5 ENTRIES SKIPPED

---- y4  

y4(base,north)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
  -100000       complementarity4a(base,north)
   100000       complementarity4b(base,north)

y4(base,south)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
  -100000       complementarity4a(base,south)
   100000       complementarity4b(base,south)

y4(peak,north)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
  -100000       complementarity4a(peak,north)
   100000       complementarity4b(peak,north)

REMAINING 5 ENTRIES SKIPPED

---- y5  

y5(1)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
  -100000       complementarity5a(1)
   100000       complementarity5b(1)

y5(2)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
  -100000       complementarity5a(2)
   100000       complementarity5b(2)

y5(3)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
  -100000       complementarity5a(3)
   100000       complementarity5b(3)

REMAINING 5 ENTRIES SKIPPED

---- y6  

y6(1)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
  -100000       complementarity6a(1)
   100000       complementarity6b(1)

y6(2)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
  -100000       complementarity6a(2)
   100000       complementarity6b(2)

y6(3)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
  -100000       complementarity6a(3)
   100000       complementarity6b(3)

REMAINING 5 ENTRIES SKIPPED

---- GEN  

GEN(1,base,north)
                (.LO, .L, .UP, .M = 0, 0, 100, 0)
       40       objective
        1       nodal_energy_balance(1,north)
       -1       redispatch1(1,base,north)
        1       redispatch2(1,base,north)
        1       gen_min(1,base,north)
       -1       gen_max(1,base,north)
       -1       energy_balance(1)
        1       complementarity1a(1,base,north)
       -1       complementarity2a(1,base,north)
       -1       complementarity6a(1)

GEN(1,base,south)
                (.LO, .L, .UP, .M = 0, 0, 100, 0)
       40       objective
        1       nodal_energy_balance(1,south)
       -1       redispatch1(1,base,south)
        1       redispatch2(1,base,south)
        1       gen_min(1,base,south)
       -1       gen_max(1,base,south)
       -1       energy_balance(1)
        1       complementarity1a(1,base,south)
       -1       complementarity2a(1,base,south)
       -1       complementarity6a(1)

GEN(1,peak,north)
                (.LO, .L, .UP, .M = 0, 0, 100, 0)
       70       objective
        1       nodal_energy_balance(1,north)
       -1       redispatch1(1,peak,north)
        1       redispatch2(1,peak,north)
        1       gen_min(1,peak,north)
       -1       gen_max(1,peak,north)
       -1       energy_balance(1)
        1       complementarity1a(1,peak,north)
       -1       complementarity2a(1,peak,north)
       -1       complementarity6a(1)

REMAINING 61 ENTRIES SKIPPED

---- CAP  

CAP(base,north)
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
     (274)      objective
       -1       redispatch2(1,base,north)
       -1       redispatch2(2,base,north)
       -1       redispatch2(3,base,north)
       -1       redispatch2(4,base,north)
       -1       redispatch2(5,base,north)
       -1       redispatch2(6,base,north)
       -1       redispatch2(7,base,north)
       -1       redispatch2(8,base,north)
        1       gen_max(1,base,north)
        1       gen_max(2,base,north)
        1       gen_max(3,base,north)
        1       gen_max(4,base,north)
        1       gen_max(5,base,north)
        1       gen_max(6,base,north)
        1       gen_max(7,base,north)
        1       gen_max(8,base,north)
        1       cap_min(base,north)
       -1       cap_max(base,north)
        0.3041  KKT_CAP(base,north)
        1       complementarity2a(1,base,north)
        1       complementarity2a(2,base,north)
        1       complementarity2a(3,base,north)
        1       complementarity2a(4,base,north)
        1       complementarity2a(5,base,north)
        1       complementarity2a(6,base,north)
        1       complementarity2a(7,base,north)
        1       complementarity2a(8,base,north)
        1       complementarity3a(base,north)
       -1       complementarity4a(base,north)

CAP(base,south)
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
     (274)      objective
       -1       redispatch2(1,base,south)
       -1       redispatch2(2,base,south)
       -1       redispatch2(3,base,south)
       -1       redispatch2(4,base,south)
       -1       redispatch2(5,base,south)
       -1       redispatch2(6,base,south)
       -1       redispatch2(7,base,south)
       -1       redispatch2(8,base,south)
        1       gen_max(1,base,south)
        1       gen_max(2,base,south)
        1       gen_max(3,base,south)
        1       gen_max(4,base,south)
        1       gen_max(5,base,south)
        1       gen_max(6,base,south)
        1       gen_max(7,base,south)
        1       gen_max(8,base,south)
        1       cap_min(base,south)
       -1       cap_max(base,south)
        0.3041  KKT_CAP(base,south)
        1       complementarity2a(1,base,south)
        1       complementarity2a(2,base,south)
        1       complementarity2a(3,base,south)
        1       complementarity2a(4,base,south)
        1       complementarity2a(5,base,south)
        1       complementarity2a(6,base,south)
        1       complementarity2a(7,base,south)
        1       complementarity2a(8,base,south)
        1       complementarity3a(base,south)
       -1       complementarity4a(base,south)

CAP(peak,north)
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
     (100)      objective
       -1       redispatch2(1,peak,north)
       -1       redispatch2(2,peak,north)
       -1       redispatch2(3,peak,north)
       -1       redispatch2(4,peak,north)
       -1       redispatch2(5,peak,north)
       -1       redispatch2(6,peak,north)
       -1       redispatch2(7,peak,north)
       -1       redispatch2(8,peak,north)
        1       gen_max(1,peak,north)
        1       gen_max(2,peak,north)
        1       gen_max(3,peak,north)
        1       gen_max(4,peak,north)
        1       gen_max(5,peak,north)
        1       gen_max(6,peak,north)
        1       gen_max(7,peak,north)
        1       gen_max(8,peak,north)
        1       cap_min(peak,north)
       -1       cap_max(peak,north)
        0.3041  KKT_CAP(peak,north)
        1       complementarity2a(1,peak,north)
        1       complementarity2a(2,peak,north)
        1       complementarity2a(3,peak,north)
        1       complementarity2a(4,peak,north)
        1       complementarity2a(5,peak,north)
        1       complementarity2a(6,peak,north)
        1       complementarity2a(7,peak,north)
        1       complementarity2a(8,peak,north)
        1       complementarity3a(peak,north)
       -1       complementarity4a(peak,north)

REMAINING 5 ENTRIES SKIPPED

---- WF  

WF
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
        1       objective


---- FLOW  

FLOW(1,north,north)
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
       -1       nodal_energy_balance(1,north)
        1       grid_eq1(1,north,north)
        1       grid_eq3(1,north,north)

FLOW(1,north,south)
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
       -1       nodal_energy_balance(1,north)
        1       grid_eq1(1,north,south)
        1       grid_eq3(1,north,south)

FLOW(1,south,north)
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
       -1       nodal_energy_balance(1,south)
        1       grid_eq1(1,south,north)
        1       grid_eq3(1,south,north)

REMAINING 29 ENTRIES SKIPPED

---- INSTRUMENT  

INSTRUMENT(north)
                (.LO, .L, .UP, .M = -40, 0, 40, 0)
        1       KKT_CAP(base,north)
        1       KKT_CAP(peak,north)
        1       KKT_CAP(wind,north)
        1       KKT_CAP(solar,north)

INSTRUMENT(south)
                (.LO, .L, .UP, .M = -40, 0, 40, 0)
        1       KKT_CAP(base,south)
        1       KKT_CAP(peak,south)
        1       KKT_CAP(wind,south)
        1       KKT_CAP(solar,south)


---- THETA  

THETA(1,north)
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
     -700       grid_eq3(1,north,south)
      700       grid_eq3(1,south,north)

THETA(1,south)
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
      700       grid_eq3(1,north,south)
     -700       grid_eq3(1,south,north)
        1       grid_eq4(1,north)
        1       grid_eq4(1,south)

THETA(2,north)
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
     -700       grid_eq3(2,north,south)
      700       grid_eq3(2,south,north)

REMAINING 13 ENTRIES SKIPPED

---- SPOT_PRICE  

SPOT_PRICE(1)
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
       -1       KKT_GEN(1,base,north)
       -1       KKT_GEN(1,base,south)
       -1       KKT_GEN(1,peak,north)
       -1       KKT_GEN(1,peak,south)
       -1       KKT_GEN(1,wind,north)
       -1       KKT_GEN(1,wind,south)
       -1       KKT_GEN(1,solar,north)
       -1       KKT_GEN(1,solar,south)
        1       KKT_load(1)
        1       complementarity6b(1)

SPOT_PRICE(2)
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
       -1       KKT_GEN(2,base,north)
       -1       KKT_GEN(2,base,south)
       -1       KKT_GEN(2,peak,north)
       -1       KKT_GEN(2,peak,south)
       -1       KKT_GEN(2,wind,north)
       -1       KKT_GEN(2,wind,south)
       -1       KKT_GEN(2,solar,north)
       -1       KKT_GEN(2,solar,south)
        1       KKT_load(2)
        1       complementarity6b(2)

SPOT_PRICE(3)
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
       -1       KKT_GEN(3,base,north)
       -1       KKT_GEN(3,base,south)
       -1       KKT_GEN(3,peak,north)
       -1       KKT_GEN(3,peak,south)
       -1       KKT_GEN(3,wind,north)
       -1       KKT_GEN(3,wind,south)
       -1       KKT_GEN(3,solar,north)
       -1       KKT_GEN(3,solar,south)
        1       KKT_load(3)
        1       complementarity6b(3)

REMAINING 5 ENTRIES SKIPPED

---- mu_G_min  

mu_G_min(1,base,north)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
       -1       KKT_GEN(1,base,north)
        1       complementarity1b(1,base,north)

mu_G_min(1,base,south)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
       -1       KKT_GEN(1,base,south)
        1       complementarity1b(1,base,south)

mu_G_min(1,peak,north)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
       -1       KKT_GEN(1,peak,north)
        1       complementarity1b(1,peak,north)

REMAINING 61 ENTRIES SKIPPED

---- mu_G_max  

mu_G_max(1,base,north)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
        1       KKT_GEN(1,base,north)
       -1       KKT_CAP(base,north)
        1       complementarity2b(1,base,north)

mu_G_max(1,base,south)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
        1       KKT_GEN(1,base,south)
       -1       KKT_CAP(base,south)
        1       complementarity2b(1,base,south)

mu_G_max(1,peak,north)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
        1       KKT_GEN(1,peak,north)
       -1       KKT_CAP(peak,north)
        1       complementarity2b(1,peak,north)

REMAINING 61 ENTRIES SKIPPED

---- mu_C_min  

mu_C_min(base,north)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
       -1       KKT_CAP(base,north)
        1       complementarity3b(base,north)

mu_C_min(base,south)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
       -1       KKT_CAP(base,south)
        1       complementarity3b(base,south)

mu_C_min(peak,north)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
       -1       KKT_CAP(peak,north)
        1       complementarity3b(peak,north)

REMAINING 5 ENTRIES SKIPPED

---- mu_C_max  

mu_C_max(base,north)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
        1       KKT_CAP(base,north)
        1       complementarity4b(base,north)

mu_C_max(base,south)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
        1       KKT_CAP(base,south)
        1       complementarity4b(base,south)

mu_C_max(peak,north)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
        1       KKT_CAP(peak,north)
        1       complementarity4b(peak,north)

REMAINING 5 ENTRIES SKIPPED

---- mu_D_min  

mu_D_min(1)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
       -1       KKT_load(1)
        1       complementarity5b(1)

mu_D_min(2)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
       -1       KKT_load(2)
        1       complementarity5b(2)

mu_D_min(3)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
       -1       KKT_load(3)
        1       complementarity5b(3)

REMAINING 5 ENTRIES SKIPPED

---- GRID_CAP  

GRID_CAP(north,north)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
       -1       grid_eq1(1,north,north)
       -1       grid_eq1(2,north,north)
       -1       grid_eq1(3,north,north)
       -1       grid_eq1(4,north,north)
       -1       grid_eq1(5,north,north)
       -1       grid_eq1(6,north,north)
       -1       grid_eq1(7,north,north)
       -1       grid_eq1(8,north,north)

GRID_CAP(north,south)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
       64       objective
       -1       grid_eq1(1,north,south)
       -1       grid_eq1(2,north,south)
       -1       grid_eq1(3,north,south)
       -1       grid_eq1(4,north,south)
       -1       grid_eq1(5,north,south)
       -1       grid_eq1(6,north,south)
       -1       grid_eq1(7,north,south)
       -1       grid_eq1(8,north,south)
        1       grid_eq2(north,south)
       -1       grid_eq2(south,north)

GRID_CAP(south,north)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
       64       objective
       -1       grid_eq1(1,south,north)
       -1       grid_eq1(2,south,north)
       -1       grid_eq1(3,south,north)
       -1       grid_eq1(4,south,north)
       -1       grid_eq1(5,south,north)
       -1       grid_eq1(6,south,north)
       -1       grid_eq1(7,south,north)
       -1       grid_eq1(8,south,north)
       -1       grid_eq2(north,south)
        1       grid_eq2(south,north)

REMAINING ENTRY SKIPPED

---- LOAD_redi  

LOAD_redi(1,north)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
   (-1888.3333) objective
       -1       nodal_energy_balance(1,north)

LOAD_redi(1,south)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
   (-1888.3333) objective
       -1       nodal_energy_balance(1,south)

LOAD_redi(2,north)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
   (-1888.3333) objective
       -1       nodal_energy_balance(2,north)

REMAINING 13 ENTRIES SKIPPED

---- LOAD_spot  

LOAD_spot(1)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
        1       demand_min(1)
        1       energy_balance(1)
       41.2541  KKT_load(1)
        1       complementarity5a(1)
        1       complementarity6a(1)

LOAD_spot(2)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
        1       demand_min(2)
        1       energy_balance(2)
       40.6144  KKT_load(2)
        1       complementarity5a(2)
        1       complementarity6a(2)

LOAD_spot(3)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
        1       demand_min(3)
        1       energy_balance(3)
       33.8566  KKT_load(3)
        1       complementarity5a(3)
        1       complementarity6a(3)

REMAINING 5 ENTRIES SKIPPED

---- UP  

UP(1,base,north)
                (.LO, .L, .UP, .M = 0, 0, 100, 0)
       40       objective
        1       nodal_energy_balance(1,north)
        1       redispatch2(1,base,north)

UP(1,base,south)
                (.LO, .L, .UP, .M = 0, 0, 100, 0)
       40       objective
        1       nodal_energy_balance(1,south)
        1       redispatch2(1,base,south)

UP(1,peak,north)
                (.LO, .L, .UP, .M = 0, 0, 100, 0)
       70       objective
        1       nodal_energy_balance(1,north)
        1       redispatch2(1,peak,north)

REMAINING 61 ENTRIES SKIPPED

---- DOWN  

DOWN(1,base,north)
                (.LO, .L, .UP, .M = 0, 0, 100, 0)
      -40       objective
       -1       nodal_energy_balance(1,north)
        1       redispatch1(1,base,north)

DOWN(1,base,south)
                (.LO, .L, .UP, .M = 0, 0, 100, 0)
      -40       objective
       -1       nodal_energy_balance(1,south)
        1       redispatch1(1,base,south)

DOWN(1,peak,north)
                (.LO, .L, .UP, .M = 0, 0, 100, 0)
      -70       objective
       -1       nodal_energy_balance(1,north)
        1       redispatch1(1,peak,north)

REMAINING 61 ENTRIES SKIPPED
GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows - 02/16/22 08:47:55 Page 6
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Model Statistics    SOLVE LOCI Using MIQCP From line 270


MODEL STATISTICS

BLOCKS OF EQUATIONS          29     SINGLE EQUATIONS          787
BLOCKS OF VARIABLES          23     SINGLE VARIABLES          599
NON ZERO ELEMENTS         2,183     NON LINEAR N-Z             24
DERIVATIVE POOL              20     CONSTANT POOL              38
CODE LENGTH                 154     DISCRETE VARIABLES        160


GENERATION TIME      =        0.016 SECONDS      4 MB  30.3.0 rc5da09e WEX-WEI


EXECUTION TIME       =        0.016 SECONDS      4 MB  30.3.0 rc5da09e WEX-WEI
