GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows - 01/19/22 16:14:09 Page 1
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
C o m p i l a t i o n


   1  Sets
   2  all_t       all hours               /1*16/
   3  t(all_t)    hours                   /1*14/
   4  tec         generators              /base, peak, wind, solar/
   5  con(tec)    conventional generation /base, peak/
   6  all_n       all buses               /north, south/
   7  n(all_n)    selected buses          /north, south/
   8  ;
   9   
  10   
  11  alias (n,m);
  12  alias (all_n,all_m);
  13   
  14  * parameters for supply and demand functions
  15  Parameter elasticity / -0.25 /;
  16  Parameter p_ref / 65 /;
  17  Parameter specific_network_costs /200/;
  18  Parameter capacity_slope / 0.5 /;
  19  *Source for network costs: EMMA (3400 EUR/MW/km discontiert mit i = 0.07 ueber 40 Jahre)
  20   
  21  Table B(all_n,all_m)        Susceptance of transmission lines
  22           north  south
  23  north        1     700
  24  south      700       1
  25  ;
  26   
  27  Parameters
  28  * Input Parameters
  29  i_cost(*,*)                 cost data to be loaded from sheet "cost"
  30  i_load(all_t,all_n)         load data to be loaded from sheet "time series" in MWh
  31  i_avail(all_t,tec,all_n)    availability data
  32   
  33  * Model Parameters
  34  load_ref(t,n)               hourly load in GWh
  35  avail(t,tec,n)              availability of wind and solar generation (1)
  36  c_var(tec,n)                variable costs (EUR per MWh)
  37  c_fix(tec,n)                annualized fixed costs (EUR per MW p.a.)
  38  cap_lim(tec,n)              capacity limit of generation in each node
  39  grid_cost(n,m)
  40  sc                          scaling factor
  41  a_nodal(t,n)                intercept of inverse nodal demand function
  42  s_nodal(t,n)                slope of inverse nodal demand function
  43   
  44  A_zonal(t)                  intercept of inverse zonal demand function
  45  S_zonal(t)                  slope of inverse zonal demand function
  46   
  47  * Output Parameters
  48  welfare
  49  consumer_surplus
  50  generation_costs
  51  network_cost
  52  network_cost_1
  53  network_cost_2
  54  network_cost_3
  55   
  56  res_share
  57  real_generation(t,tec,n)
  58  load_deviation(t,n)
  59  load_shedding(t,n)
  60   
  61  o_RES_share
  62  o_load(t,n)
  63  o_cap(tec,n)
  64  o_gen(t,tec,n)
  65  price(t)
  66  o_instrument
  67  ;
  68   
  69  * Load data
GDXIN   C:\Users\a.eicke\Documents\Locational-investment-signals\Two node models\in.gdx
--- LOAD  i_cost = 1:i_cost
--- LOAD  i_load = 2:i_load
--- LOAD  i_avail = 3:i_avail
  72   
  73  * Data assignment
  74  sc = card(t) / 8760;
  75  load_ref(t,n)               = i_load(t,n) / 1000;
  76  avail(t,tec,n)              = i_avail(t,tec,n);
  77  avail(t,con,n)              = 1;
  78  c_var(tec, n)               = i_cost(tec,"cost_var");
  79  c_fix(tec, n)               = round(i_cost(tec,"cost_fix") * 1000 * sc);
  80  cap_lim(tec,n)              = 100;
  81  grid_cost(n,m)              = round(B(n,m) * specific_network_costs * sc);
  82   
  83  *Inverse demand function at each node
  84  a_nodal(t,n)                = p_ref *(1-1/elasticity);
  85  s_nodal(t,n)                = p_ref *(1/(elasticity*load_ref(t,n)));
  86   
  87  * Inverse demand function of the zonal market (only holds if P(t) < a_nodal(t,n) for all t,n)
  88  A_zonal(t)                  = sum(n, a_nodal(t,n) / s_nodal(t,n)) / sum(n, 1/ s_nodal(t,n));
  89  S_zonal(t)                  = 1 / sum(n, 1/ s_nodal(t,n));
  90   
  91  display c_var, load_ref, avail, c_fix, a_nodal, s_nodal, A_zonal, S_zonal;
  92   
  93  Binary variables y1(t,tec,n),y2(t,tec,n),y3(tec,n),y4(tec,n),y5(t),y6(t);
  94   
  95  Parameter M1 / 100000/;
  96  Parameter M2 / 100000/;
  97  Parameter M3 / 100000/;
  98  Parameter M4 / 100000/;
  99  Parameter M5 / 100000/;
 100  Parameter M6 / 100000/;
 101   
 102  Free Variables
 103  GEN(t,tec,n)
 104  CAP(tec,n)
 105  WF
 106  FLOW(t,n,m)
 107  INSTRUMENT
 108  THETA(t,n)
 109  SPOT_PRICE(t)
 110  ;
 111   
 112  Positive variables
 113  mu_G_min(t,tec,n)
 114  mu_G_max(t,tec,n)
 115  mu_C_min(tec,n)
 116  mu_C_max(tec,n)
 117  mu_D_min(t)
 118   
 119  GRID_CAP(n,m)
 120  LOAD_redi(t,n)
 121  LOAD_spot(t)
 122  UP(t,tec,n)
 123  DOWN(t,tec,n)
 124  ;
 125   
 126  Equations
 127  objective, instr_const,
 128  nodal_energy_balance,
 129  grid_eq1, grid_eq2, grid_eq3, grid_eq4,
 130  redispatch1, redispatch2,
 131   
 132  gen_min, gen_max,
 133  cap_min, cap_max,
 134  demand_min,
 135  energy_balance,
 136   
 137  KKT_GEN, KKT_CAP, KKT_load,
 138   
 139  complementarity1a,
 140  complementarity1b,
 141  complementarity2a,
 142  complementarity2b,
 143  complementarity3a,
 144  complementarity3b,
 145  complementarity4a,
 146  complementarity4b,
 147  complementarity5a,
 148  complementarity5b,
 149  complementarity6a,
 150  complementarity6b
 151  ;
 152   
 153  objective..                     WF =e= sum((t,n), a_nodal(t,n) * LOAD_redi(t,n) + 1/2 * s_nodal(t,n) * LOAD_redi(t,n) * LOAD_redi(t,n))
 154                                      - sum((tec,n), CAP(tec,n) * c_fix(tec,n) + 0.5 * CAP(tec,n) * CAP(tec,n) * capacity_slope)
 155                                      - sum((t,tec,n), GEN(t,tec,n) * c_var(tec,n))
 156                                      - sum((t,tec,n), (UP(t,tec,n) - DOWN(t,tec,n)) * (c_var(tec,n)))
 157                                      - sum((n,m),(GRID_CAP(n,m) * grid_cost(n,m)) / 2)
 158                                      ;
 159   
 160  nodal_energy_balance(t,n)..     sum(tec,GEN(t,tec,n) - DOWN(t,tec,n) + UP(t,tec,n)) - LOAD_redi(t,n) =E= sum(m,FLOW(t,n,m));
 161   
 162  *network constraints
 163  grid_eq1(t,n,m)..               FLOW(t,n,m) =l= GRID_CAP(n,m);
 164  grid_eq2(n,m)..                 GRID_CAP(n,m) =e= GRID_CAP(m,n);
 165  grid_eq3(t,n,m)..               FLOW(t,n,m) =e= B(n,m) *(THETA(t,n) - THETA(t,m));
 166  grid_eq4(t,n)..                 THETA(t,'south') =e= 0;
 167   
 168  redispatch1(t,tec,n)..          DOWN(t,tec,n) =L= GEN(t,tec,n);
 169  redispatch2(t,tec,n)..          UP(t,tec,n) =L= CAP(tec,n) * avail(t,tec,n) - GEN(t,tec,n);
 170   
 171  ** INNER PROBLEM
 172  gen_min(t,tec,n)..              0 =g= -GEN(t,tec,n);
 173  gen_max(t,tec,n)..              0 =g= GEN(t,tec,n) - CAP(tec,n) * avail(t,tec,n);
 174   
 175  cap_min(tec,n)..                0 =g= -CAP(tec,n);
 176  cap_max(tec,n)..                0 =g= CAP(tec,n) - cap_lim(tec,n);
 177   
 178  demand_min(t)..                 0 =g= -LOAD_spot(t);
 179  energy_balance(t)..             0 =e= sum((tec,n),GEN(t,tec,n)) - LOAD_spot(t);
 180   
 181  KKT_GEN(t,tec,n)..              c_var(tec,n) + mu_G_max(t,tec,n) - mu_G_min(t,tec,n) - SPOT_PRICE(t) =e= 0;
 182  KKT_CAP(tec,n)..                c_fix(tec,n) + capacity_slope * CAP(tec,n) + INSTRUMENT - sum(t,avail(t,tec,n) * mu_G_max(t,tec,n)) + mu_C_max(tec,n) - mu_C_min(tec,n) =e= 0;
 183  KKT_load(t)..                   -(A_zonal(t) + S_zonal(t) * LOAD_spot(t)) - mu_D_min(t) + SPOT_PRICE(t) =e= 0;
 184   
 185  complementarity1a(t,tec,n)..    GEN(t,tec,n)        =L= y1(t,tec,n) * M1;
 186  complementarity1b(t,tec,n)..    mu_G_min(t,tec,n)   =L= (1-y1(t,tec,n)) * M1;
 187  complementarity2a(t,tec,n)..    CAP(tec,n) * avail(t,tec,n) - GEN(t,tec,n) =L= y2(t,tec,n) * M2;
 188  complementarity2b(t,tec,n)..    mu_G_max(t,tec,n)   =L= (1-y2(t,tec,n)) * M2;
 189  complementarity3a(tec,n)..      CAP(tec,n)          =L= y3(tec,n) * M3;
 190  complementarity3b(tec,n)..      mu_C_min(tec,n)     =L= (1-y3(tec,n)) * M3;
 191  complementarity4a(tec,n)..      cap_lim(tec,n) - CAP(tec,n) =L= y4(tec,n) * M4;
 192  complementarity4b(tec,n)..      mu_C_max(tec,n)     =L= (1-y4(tec,n)) * M4;
 193  complementarity5a(t)..          LOAD_spot(t)        =L= y5(t) * M5;
 194  complementarity5b(t)..          mu_D_min(t)       =L= (1-y5(t)) * M5;
 195  complementarity6a(t)..          LOAD_spot(t) - sum((tec,n),GEN(t,tec,n)) =L= y6(t) * M6;
 196  complementarity6b(t)..          SPOT_PRICE(t)           =L= (1-y6(t)) * M6;
 197   
 198   
 199  Model LOCI /
 200   
 201  objective
 202  nodal_energy_balance
 203   
 204  grid_eq1
 205  grid_eq2
 206  grid_eq3
 207  grid_eq4
 208   
 209  redispatch1
 210  redispatch2
 211   
 212  gen_min
 213  gen_max
 214  cap_min
 215  cap_max
 216   
 217  demand_min
 218  energy_balance
 219   
 220  KKT_GEN
 221  KKT_CAP
 222  KKT_load
 223   
 224  complementarity1a
 225  complementarity1b
 226  complementarity2a
 227  complementarity2b
 228  complementarity3a
 229  complementarity3b
 230  complementarity4a
 231  complementarity4b
 232  complementarity5a
 233  complementarity5b
 234  complementarity6a
 235  complementarity6b
 236  /;
 237   
 238   
 239  INSTRUMENT.lo = -10;
 240  INSTRUMENT.up = 10;
 241   
 242  GEN.up(t,tec,n) = 100;
 243  GEN.lo(t,tec,n) = 0;
 244   
 245  DOWN.up(t,tec,n) = 100;
 246  DOWN.lo(t,tec,n) = 0;
 247   
 248  UP.up(t,tec,n) = 100;
 249  UP.lo(t,tec,n) = 0;
 250   
 251  LOCI.nodlim = 80000000;
 252  LOCI.resLim = 150000;
 253   
 254  * default value is too large (tested by comparing results to a nodal model with network costs = 0)
 255  Option optcr = 0.001;
 256   
 257  Option MIQCP = Cplex;
 258   
 259   
 260  Solve LOCI maximizing WF using MIQCP;
 261   
 262  price(t) = SPOT_PRICE.L(t);
 263   
 264  o_instrument = INSTRUMENT.L / sc / 1000;
 265   
 266  network_cost_1 = sum((n,m),(GRID_CAP.L(n,m) / 2 * grid_cost(n,m)));
 267  network_cost_2 = sum((t,tec,n), (UP.L(t,tec,n) - DOWN.L(t,tec,n)) * c_var(tec,n));
 268  network_cost_3 = sum((t), A_zonal(t) * LOAD_spot.L(t) + 1/2 * S_zonal(t) * LOAD_spot.L(t) * LOAD_spot.L(t))
 269                  - sum((t), A_zonal(t) * sum(n, LOAD_redi.L(t,n)) + 1/2 * S_zonal(t) * sum(n, LOAD_redi.L(t,n)) * sum(n, LOAD_redi.L(t,n)))
 270                  ;
 271   
 272  network_cost = network_cost_1 + network_cost_2 + network_cost_3;
 273   
 274  consumer_surplus = sum((t), A_zonal(t) * LOAD_spot.L(t) + 1/2 * S_zonal(t) * LOAD_spot.L(t) * LOAD_spot.L(t));
 275   
 276  generation_costs = (sum((tec,n), CAP.L(tec,n) * c_fix(tec,n) + 0.5 * CAP.L(tec,n) * CAP.L(tec,n) * capacity_slope) + sum((t,tec,n), GEN.L(t,tec,n) * c_var(tec,n)));
 277   
 278  *sum_instrument = sum((tec,n), INSTRUMENT.L(tec,n) * CAP.L(tec,n));
 279   
 280  load_deviation(t,n) = ((SPOT_PRICE.L(t) - a_nodal(t,n)) / s_nodal(t,n)) - load_ref(t,n);
 281  load_shedding(t,n) = LOAD_spot.L(t) - LOAD_redi.L(t,n);
 282  res_share = 1 - sum((t,con,n), GEN.L(t,con,n)) / sum((t,tec,n), GEN.L(t,tec,n));
 283  o_cap(tec,n) = CAP.L(tec,n);
 284  o_gen(t,tec,n) = GEN.L(t,tec,n);
 285  real_generation(t,tec,n) = GEN.L(t,tec,n) + UP.L(t,tec,n) - DOWN.L(t,tec,n);
 286  welfare = WF.L;
 287   
 288  Display WF.L, consumer_surplus, generation_costs, network_cost, network_cost_1, network_cost_2, network_cost_3, CAP.L, GEN.L, UP.L, DOWN.L, FLOW.L, price, load_deviation, load_shedding, GRID_CAP.L, LOAD_redi.L, LOAD_spot.L, o_instrument;
 289   
 290  execute_UNLOAD 'Output/without_instrument.gdx' welfare, consumer_surplus, generation_costs, network_cost, res_share, o_instrument, o_cap, o_gen, price, c_fix;

**** LIST OF STRAY NAMES - CHECK DECLARATIONS FOR SPURIOUS COMMAS
**** STRAY NAME instr_const OF TYPE EQU  
GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows - 01/19/22 16:14:09 Page 2
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Include File Summary


   SEQ   GLOBAL TYPE      PARENT   LOCAL  FILENAME

     1        1 INPUT          0       0  C:\Users\a.eicke\Documents\Locational-investment-signals\Two node models\without_instrument.gms
     2       70 GDXIN          1      70  C:\Users\a.eicke\Documents\Locational-investment-signals\Two node models\in.gdx


COMPILATION TIME     =        0.000 SECONDS      3 MB  30.3.0 rc5da09e WEX-WEI
GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows - 01/19/22 16:14:09 Page 3
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
E x e c u t i o n


----     91 PARAMETER c_var  variable costs (EUR per MWh)

           north       south

base      58.000      58.000
peak      73.000      73.000


----     91 PARAMETER load_ref  hourly load in GWh

         north       south

1       16.299      35.445
2       18.205      45.291
3       21.940      52.426
4       22.433      48.954
5       24.781      48.104
6       20.955      45.756
7       18.520      33.725
8       19.324      34.641
9       25.683      41.926
10      23.438      45.498
11      20.418      45.401
12      20.429      42.416
13      16.306      37.088
14      15.533      36.243


----     91 PARAMETER avail  availability of wind and solar generation (1)

               north       south

1 .base        1.000       1.000
1 .peak        1.000       1.000
1 .wind        0.485       0.330
2 .base        1.000       1.000
2 .peak        1.000       1.000
2 .wind        0.305       0.220
2 .solar       0.060       0.010
3 .base        1.000       1.000
3 .peak        1.000       1.000
3 .wind        0.195       0.135
3 .solar       0.315       0.235
4 .base        1.000       1.000
4 .peak        1.000       1.000
4 .wind        0.220       0.115
4 .solar       0.310       0.205
5 .base        1.000       1.000
5 .peak        1.000       1.000
5 .wind        0.180       0.140
5 .solar       0.090       0.070
6 .base        1.000       1.000
6 .peak        1.000       1.000
6 .wind        0.125       0.130
7 .base        1.000       1.000
7 .peak        1.000       1.000
7 .wind        0.060       0.080
8 .base        1.000       1.000
8 .peak        1.000       1.000
8 .wind        0.105       0.085
8 .solar       0.015       0.020
9 .base        1.000       1.000
9 .peak        1.000       1.000
9 .wind        0.170       0.160
9 .solar       0.190       0.295
10.base        1.000       1.000
10.peak        1.000       1.000
10.wind        0.220       0.210
10.solar       0.320       0.450
11.base        1.000       1.000
11.peak        1.000       1.000
11.wind        0.265       0.295
11.solar       0.240       0.410
12.base        1.000       1.000
12.peak        1.000       1.000
12.wind        0.275       0.305
12.solar       0.020       0.075
13.base        1.000       1.000
13.peak        1.000       1.000
13.wind        0.160       0.120
14.base        1.000       1.000
14.peak        1.000       1.000
14.wind        0.210       0.150


----     91 PARAMETER c_fix  annualized fixed costs (EUR per MW p.a.)

            north       south

base      152.000     152.000
peak       64.000      64.000
wind      128.000     128.000
solar      74.000      74.000


----     91 PARAMETER a_nodal  intercept of inverse nodal demand function

         north       south

1      325.000     325.000
2      325.000     325.000
3      325.000     325.000
4      325.000     325.000
5      325.000     325.000
6      325.000     325.000
7      325.000     325.000
8      325.000     325.000
9      325.000     325.000
10     325.000     325.000
11     325.000     325.000
12     325.000     325.000
13     325.000     325.000
14     325.000     325.000


----     91 PARAMETER s_nodal  slope of inverse nodal demand function

         north       south

1      -15.952      -7.335
2      -14.282      -5.741
3      -11.850      -4.959
4      -11.590      -5.311
5      -10.492      -5.405
6      -12.407      -5.682
7      -14.039      -7.709
8      -13.455      -7.506
9      -10.124      -6.201
10     -11.093      -5.715
11     -12.734      -5.727
12     -12.727      -6.130
13     -15.945      -7.010
14     -16.739      -7.174


----     91 PARAMETER A_zonal  intercept of inverse zonal demand function

1  325.000,    2  325.000,    3  325.000,    4  325.000,    5  325.000,    6  325.000,    7  325.000,    8  325.000,    9  325.000,    10 325.000,    11 325.000,    12 325.000,    13 325.000,    14 325.000


----     91 PARAMETER S_zonal  slope of inverse zonal demand function

1  -5.025,    2  -4.095,    3  -3.496,    4  -3.642,    5  -3.567,    6  -3.897,    7  -4.977,    8  -4.818,    9  -3.846,    10 -3.772,    11 -3.950,    12 -4.137,    13 -4.869,    14 -5.022

GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows - 01/19/22 16:14:09 Page 4
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE LOCI Using MIQCP From line 260


---- objective  =E=  

objective..  58*GEN(1,base,north) + 58*GEN(1,base,south) + 73*GEN(1,peak,north) + 73*GEN(1,peak,south) + 58*GEN(2,base,north) + 58*GEN(2,base,south) + 73*GEN(2,peak,north) + 73*GEN(2,peak,south) + 58*GEN(3,base,north) + 58*GEN(3,base,south)
     
      + 73*GEN(3,peak,north) + 73*GEN(3,peak,south) + 58*GEN(4,base,north) + 58*GEN(4,base,south) + 73*GEN(4,peak,north) + 73*GEN(4,peak,south) + 58*GEN(5,base,north) + 58*GEN(5,base,south) + 73*GEN(5,peak,north) + 73*GEN(5,peak,south)
     
      + 58*GEN(6,base,north) + 58*GEN(6,base,south) + 73*GEN(6,peak,north) + 73*GEN(6,peak,south) + 58*GEN(7,base,north) + 58*GEN(7,base,south) + 73*GEN(7,peak,north) + 73*GEN(7,peak,south) + 58*GEN(8,base,north) + 58*GEN(8,base,south)
     
      + 73*GEN(8,peak,north) + 73*GEN(8,peak,south) + 58*GEN(9,base,north) + 58*GEN(9,base,south) + 73*GEN(9,peak,north) + 73*GEN(9,peak,south) + 58*GEN(10,base,north) + 58*GEN(10,base,south) + 73*GEN(10,peak,north) + 73*GEN(10,peak,south)
     
      + 58*GEN(11,base,north) + 58*GEN(11,base,south) + 73*GEN(11,peak,north) + 73*GEN(11,peak,south) + 58*GEN(12,base,north) + 58*GEN(12,base,south) + 73*GEN(12,peak,north) + 73*GEN(12,peak,south) + 58*GEN(13,base,north) + 58*GEN(13,base,south)
     
      + 73*GEN(13,peak,north) + 73*GEN(13,peak,south) + 58*GEN(14,base,north) + 58*GEN(14,base,south) + 73*GEN(14,peak,north) + 73*GEN(14,peak,south) + (152)*CAP(base,north) + (152)*CAP(base,south) + (64)*CAP(peak,north) + (64)*CAP(peak,south)
     
      + (128)*CAP(wind,north) + (128)*CAP(wind,south) + (74)*CAP(solar,north) + (74)*CAP(solar,south) + WF + 112*GRID_CAP(north,south) + 112*GRID_CAP(south,north) - (325)*LOAD_redi(1,north) - (325)*LOAD_redi(1,south) - (325)*LOAD_redi(2,north)
     
      - (325)*LOAD_redi(2,south) - (325)*LOAD_redi(3,north) - (325)*LOAD_redi(3,south) - (325)*LOAD_redi(4,north) - (325)*LOAD_redi(4,south) - (325)*LOAD_redi(5,north) - (325)*LOAD_redi(5,south) - (325)*LOAD_redi(6,north) - (325)*LOAD_redi(6,south)
     
      - (325)*LOAD_redi(7,north) - (325)*LOAD_redi(7,south) - (325)*LOAD_redi(8,north) - (325)*LOAD_redi(8,south) - (325)*LOAD_redi(9,north) - (325)*LOAD_redi(9,south) - (325)*LOAD_redi(10,north) - (325)*LOAD_redi(10,south) - (325)*LOAD_redi(11,north)
     
      - (325)*LOAD_redi(11,south) - (325)*LOAD_redi(12,north) - (325)*LOAD_redi(12,south) - (325)*LOAD_redi(13,north) - (325)*LOAD_redi(13,south) - (325)*LOAD_redi(14,north) - (325)*LOAD_redi(14,south) + 58*UP(1,base,north) + 58*UP(1,base,south)
     
      + 73*UP(1,peak,north) + 73*UP(1,peak,south) + 58*UP(2,base,north) + 58*UP(2,base,south) + 73*UP(2,peak,north) + 73*UP(2,peak,south) + 58*UP(3,base,north) + 58*UP(3,base,south) + 73*UP(3,peak,north) + 73*UP(3,peak,south) + 58*UP(4,base,north)
     
      + 58*UP(4,base,south) + 73*UP(4,peak,north) + 73*UP(4,peak,south) + 58*UP(5,base,north) + 58*UP(5,base,south) + 73*UP(5,peak,north) + 73*UP(5,peak,south) + 58*UP(6,base,north) + 58*UP(6,base,south) + 73*UP(6,peak,north) + 73*UP(6,peak,south)
     
      + 58*UP(7,base,north) + 58*UP(7,base,south) + 73*UP(7,peak,north) + 73*UP(7,peak,south) + 58*UP(8,base,north) + 58*UP(8,base,south) + 73*UP(8,peak,north) + 73*UP(8,peak,south) + 58*UP(9,base,north) + 58*UP(9,base,south) + 73*UP(9,peak,north)
     
      + 73*UP(9,peak,south) + 58*UP(10,base,north) + 58*UP(10,base,south) + 73*UP(10,peak,north) + 73*UP(10,peak,south) + 58*UP(11,base,north) + 58*UP(11,base,south) + 73*UP(11,peak,north) + 73*UP(11,peak,south) + 58*UP(12,base,north)
     
      + 58*UP(12,base,south) + 73*UP(12,peak,north) + 73*UP(12,peak,south) + 58*UP(13,base,north) + 58*UP(13,base,south) + 73*UP(13,peak,north) + 73*UP(13,peak,south) + 58*UP(14,base,north) + 58*UP(14,base,south) + 73*UP(14,peak,north)
     
      + 73*UP(14,peak,south) - 58*DOWN(1,base,north) - 58*DOWN(1,base,south) - 73*DOWN(1,peak,north) - 73*DOWN(1,peak,south) - 58*DOWN(2,base,north) - 58*DOWN(2,base,south) - 73*DOWN(2,peak,north) - 73*DOWN(2,peak,south) - 58*DOWN(3,base,north)
     
      - 58*DOWN(3,base,south) - 73*DOWN(3,peak,north) - 73*DOWN(3,peak,south) - 58*DOWN(4,base,north) - 58*DOWN(4,base,south) - 73*DOWN(4,peak,north) - 73*DOWN(4,peak,south) - 58*DOWN(5,base,north) - 58*DOWN(5,base,south) - 73*DOWN(5,peak,north)
     
      - 73*DOWN(5,peak,south) - 58*DOWN(6,base,north) - 58*DOWN(6,base,south) - 73*DOWN(6,peak,north) - 73*DOWN(6,peak,south) - 58*DOWN(7,base,north) - 58*DOWN(7,base,south) - 73*DOWN(7,peak,north) - 73*DOWN(7,peak,south) - 58*DOWN(8,base,north)
     
      - 58*DOWN(8,base,south) - 73*DOWN(8,peak,north) - 73*DOWN(8,peak,south) - 58*DOWN(9,base,north) - 58*DOWN(9,base,south) - 73*DOWN(9,peak,north) - 73*DOWN(9,peak,south) - 58*DOWN(10,base,north) - 58*DOWN(10,base,south) - 73*DOWN(10,peak,north)
     
      - 73*DOWN(10,peak,south) - 58*DOWN(11,base,north) - 58*DOWN(11,base,south) - 73*DOWN(11,peak,north) - 73*DOWN(11,peak,south) - 58*DOWN(12,base,north) - 58*DOWN(12,base,south) - 73*DOWN(12,peak,north) - 73*DOWN(12,peak,south) - 58*DOWN(13,base,north)
     
      - 58*DOWN(13,base,south) - 73*DOWN(13,peak,north) - 73*DOWN(13,peak,south) - 58*DOWN(14,base,north) - 58*DOWN(14,base,south) - 73*DOWN(14,peak,north) - 73*DOWN(14,peak,south) =E= 0 ; (LHS = 0)
     

---- nodal_energy_balance  =E=  

nodal_energy_balance(1,north)..  GEN(1,base,north) + GEN(1,peak,north) + GEN(1,wind,north) + GEN(1,solar,north) - FLOW(1,north,north) - FLOW(1,north,south) - LOAD_redi(1,north) + UP(1,base,north) + UP(1,peak,north) + UP(1,wind,north) + UP(1,solar,north)
     
      - DOWN(1,base,north) - DOWN(1,peak,north) - DOWN(1,wind,north) - DOWN(1,solar,north) =E= 0 ; (LHS = 0)
     
nodal_energy_balance(1,south)..  GEN(1,base,south) + GEN(1,peak,south) + GEN(1,wind,south) + GEN(1,solar,south) - FLOW(1,south,north) - FLOW(1,south,south) - LOAD_redi(1,south) + UP(1,base,south) + UP(1,peak,south) + UP(1,wind,south) + UP(1,solar,south)
     
      - DOWN(1,base,south) - DOWN(1,peak,south) - DOWN(1,wind,south) - DOWN(1,solar,south) =E= 0 ; (LHS = 0)
     
nodal_energy_balance(2,north)..  GEN(2,base,north) + GEN(2,peak,north) + GEN(2,wind,north) + GEN(2,solar,north) - FLOW(2,north,north) - FLOW(2,north,south) - LOAD_redi(2,north) + UP(2,base,north) + UP(2,peak,north) + UP(2,wind,north) + UP(2,solar,north)
     
      - DOWN(2,base,north) - DOWN(2,peak,north) - DOWN(2,wind,north) - DOWN(2,solar,north) =E= 0 ; (LHS = 0)
     
REMAINING 25 ENTRIES SKIPPED


---- grid_eq1  =L=  

grid_eq1(1,north,north)..  FLOW(1,north,north) - GRID_CAP(north,north) =L= 0 ; (LHS = 0)
     
grid_eq1(1,north,south)..  FLOW(1,north,south) - GRID_CAP(north,south) =L= 0 ; (LHS = 0)
     
grid_eq1(1,south,north)..  FLOW(1,south,north) - GRID_CAP(south,north) =L= 0 ; (LHS = 0)
     
REMAINING 53 ENTRIES SKIPPED


---- grid_eq2  =E=  

grid_eq2(north,south)..  GRID_CAP(north,south) - GRID_CAP(south,north) =E= 0 ; (LHS = 0)
     
grid_eq2(south,north)..  - GRID_CAP(north,south) + GRID_CAP(south,north) =E= 0 ; (LHS = 0)
     

---- grid_eq3  =E=  

grid_eq3(1,north,north)..  FLOW(1,north,north) =E= 0 ; (LHS = 0)
     
grid_eq3(1,north,south)..  FLOW(1,north,south) - 700*THETA(1,north) + 700*THETA(1,south) =E= 0 ; (LHS = 0)
     
grid_eq3(1,south,north)..  FLOW(1,south,north) + 700*THETA(1,north) - 700*THETA(1,south) =E= 0 ; (LHS = 0)
     
REMAINING 53 ENTRIES SKIPPED


---- grid_eq4  =E=  

grid_eq4(1,north)..  THETA(1,south) =E= 0 ; (LHS = 0)
     
grid_eq4(1,south)..  THETA(1,south) =E= 0 ; (LHS = 0)
     
grid_eq4(2,north)..  THETA(2,south) =E= 0 ; (LHS = 0)
     
REMAINING 25 ENTRIES SKIPPED


---- redispatch1  =L=  

redispatch1(1,base,north)..  - GEN(1,base,north) + DOWN(1,base,north) =L= 0 ; (LHS = 0)
     
redispatch1(1,base,south)..  - GEN(1,base,south) + DOWN(1,base,south) =L= 0 ; (LHS = 0)
     
redispatch1(1,peak,north)..  - GEN(1,peak,north) + DOWN(1,peak,north) =L= 0 ; (LHS = 0)
     
REMAINING 109 ENTRIES SKIPPED


---- redispatch2  =L=  

redispatch2(1,base,north)..  GEN(1,base,north) - CAP(base,north) + UP(1,base,north) =L= 0 ; (LHS = 0)
     
redispatch2(1,base,south)..  GEN(1,base,south) - CAP(base,south) + UP(1,base,south) =L= 0 ; (LHS = 0)
     
redispatch2(1,peak,north)..  GEN(1,peak,north) - CAP(peak,north) + UP(1,peak,north) =L= 0 ; (LHS = 0)
     
REMAINING 109 ENTRIES SKIPPED


---- gen_min  =G=  

gen_min(1,base,north)..  GEN(1,base,north) =G= 0 ; (LHS = 0)
     
gen_min(1,base,south)..  GEN(1,base,south) =G= 0 ; (LHS = 0)
     
gen_min(1,peak,north)..  GEN(1,peak,north) =G= 0 ; (LHS = 0)
     
REMAINING 109 ENTRIES SKIPPED


---- gen_max  =G=  

gen_max(1,base,north)..  - GEN(1,base,north) + CAP(base,north) =G= 0 ; (LHS = 0)
     
gen_max(1,base,south)..  - GEN(1,base,south) + CAP(base,south) =G= 0 ; (LHS = 0)
     
gen_max(1,peak,north)..  - GEN(1,peak,north) + CAP(peak,north) =G= 0 ; (LHS = 0)
     
REMAINING 109 ENTRIES SKIPPED


---- cap_min  =G=  

cap_min(base,north)..  CAP(base,north) =G= 0 ; (LHS = 0)
     
cap_min(base,south)..  CAP(base,south) =G= 0 ; (LHS = 0)
     
cap_min(peak,north)..  CAP(peak,north) =G= 0 ; (LHS = 0)
     
REMAINING 5 ENTRIES SKIPPED


---- cap_max  =G=  

cap_max(base,north)..  - CAP(base,north) =G= -100 ; (LHS = 0)
     
cap_max(base,south)..  - CAP(base,south) =G= -100 ; (LHS = 0)
     
cap_max(peak,north)..  - CAP(peak,north) =G= -100 ; (LHS = 0)
     
REMAINING 5 ENTRIES SKIPPED


---- demand_min  =G=  

demand_min(1)..  LOAD_spot(1) =G= 0 ; (LHS = 0)
     
demand_min(2)..  LOAD_spot(2) =G= 0 ; (LHS = 0)
     
demand_min(3)..  LOAD_spot(3) =G= 0 ; (LHS = 0)
     
REMAINING 11 ENTRIES SKIPPED


---- energy_balance  =E=  

energy_balance(1)..  - GEN(1,base,north) - GEN(1,base,south) - GEN(1,peak,north) - GEN(1,peak,south) - GEN(1,wind,north) - GEN(1,wind,south) - GEN(1,solar,north) - GEN(1,solar,south) + LOAD_spot(1) =E= 0 ; (LHS = 0)
     
energy_balance(2)..  - GEN(2,base,north) - GEN(2,base,south) - GEN(2,peak,north) - GEN(2,peak,south) - GEN(2,wind,north) - GEN(2,wind,south) - GEN(2,solar,north) - GEN(2,solar,south) + LOAD_spot(2) =E= 0 ; (LHS = 0)
     
energy_balance(3)..  - GEN(3,base,north) - GEN(3,base,south) - GEN(3,peak,north) - GEN(3,peak,south) - GEN(3,wind,north) - GEN(3,wind,south) - GEN(3,solar,north) - GEN(3,solar,south) + LOAD_spot(3) =E= 0 ; (LHS = 0)
     
REMAINING 11 ENTRIES SKIPPED


---- KKT_GEN  =E=  

KKT_GEN(1,base,north)..  - SPOT_PRICE(1) - mu_G_min(1,base,north) + mu_G_max(1,base,north) =E= -58 ; (LHS = 0, INFES = 58 ****)
     
KKT_GEN(1,base,south)..  - SPOT_PRICE(1) - mu_G_min(1,base,south) + mu_G_max(1,base,south) =E= -58 ; (LHS = 0, INFES = 58 ****)
     
KKT_GEN(1,peak,north)..  - SPOT_PRICE(1) - mu_G_min(1,peak,north) + mu_G_max(1,peak,north) =E= -73 ; (LHS = 0, INFES = 73 ****)
     
REMAINING 109 ENTRIES SKIPPED


---- KKT_CAP  =E=  

KKT_CAP(base,north)..  0.5*CAP(base,north) + INSTRUMENT - mu_G_max(1,base,north) - mu_G_max(2,base,north) - mu_G_max(3,base,north) - mu_G_max(4,base,north) - mu_G_max(5,base,north) - mu_G_max(6,base,north) - mu_G_max(7,base,north) - mu_G_max(8,base,north)
     
      - mu_G_max(9,base,north) - mu_G_max(10,base,north) - mu_G_max(11,base,north) - mu_G_max(12,base,north) - mu_G_max(13,base,north) - mu_G_max(14,base,north) - mu_C_min(base,north) + mu_C_max(base,north) =E= -152 ; (LHS = 0, INFES = 152 ****)
     
KKT_CAP(base,south)..  0.5*CAP(base,south) + INSTRUMENT - mu_G_max(1,base,south) - mu_G_max(2,base,south) - mu_G_max(3,base,south) - mu_G_max(4,base,south) - mu_G_max(5,base,south) - mu_G_max(6,base,south) - mu_G_max(7,base,south) - mu_G_max(8,base,south)
     
      - mu_G_max(9,base,south) - mu_G_max(10,base,south) - mu_G_max(11,base,south) - mu_G_max(12,base,south) - mu_G_max(13,base,south) - mu_G_max(14,base,south) - mu_C_min(base,south) + mu_C_max(base,south) =E= -152 ; (LHS = 0, INFES = 152 ****)
     
KKT_CAP(peak,north)..  0.5*CAP(peak,north) + INSTRUMENT - mu_G_max(1,peak,north) - mu_G_max(2,peak,north) - mu_G_max(3,peak,north) - mu_G_max(4,peak,north) - mu_G_max(5,peak,north) - mu_G_max(6,peak,north) - mu_G_max(7,peak,north) - mu_G_max(8,peak,north)
     
      - mu_G_max(9,peak,north) - mu_G_max(10,peak,north) - mu_G_max(11,peak,north) - mu_G_max(12,peak,north) - mu_G_max(13,peak,north) - mu_G_max(14,peak,north) - mu_C_min(peak,north) + mu_C_max(peak,north) =E= -64 ; (LHS = 0, INFES = 64 ****)
     
REMAINING 5 ENTRIES SKIPPED


---- KKT_load  =E=  

KKT_load(1)..  SPOT_PRICE(1) - mu_D_min(1) + 5.02473716759432*LOAD_spot(1) =E= 325 ; (LHS = 0, INFES = 325 ****)
     
KKT_load(2)..  SPOT_PRICE(2) - mu_D_min(2) + 4.09477837012072*LOAD_spot(2) =E= 325 ; (LHS = 0, INFES = 325 ****)
     
KKT_load(3)..  SPOT_PRICE(3) - mu_D_min(3) + 3.49622139149611*LOAD_spot(3) =E= 325 ; (LHS = 0, INFES = 325 ****)
     
REMAINING 11 ENTRIES SKIPPED


---- complementarity1a  =L=  

complementarity1a(1,base,north)..  - 100000*y1(1,base,north) + GEN(1,base,north) =L= 0 ; (LHS = 0)
     
complementarity1a(1,base,south)..  - 100000*y1(1,base,south) + GEN(1,base,south) =L= 0 ; (LHS = 0)
     
complementarity1a(1,peak,north)..  - 100000*y1(1,peak,north) + GEN(1,peak,north) =L= 0 ; (LHS = 0)
     
REMAINING 109 ENTRIES SKIPPED


---- complementarity1b  =L=  

complementarity1b(1,base,north)..  100000*y1(1,base,north) + mu_G_min(1,base,north) =L= 100000 ; (LHS = 0)
     
complementarity1b(1,base,south)..  100000*y1(1,base,south) + mu_G_min(1,base,south) =L= 100000 ; (LHS = 0)
     
complementarity1b(1,peak,north)..  100000*y1(1,peak,north) + mu_G_min(1,peak,north) =L= 100000 ; (LHS = 0)
     
REMAINING 109 ENTRIES SKIPPED


---- complementarity2a  =L=  

complementarity2a(1,base,north)..  - 100000*y2(1,base,north) - GEN(1,base,north) + CAP(base,north) =L= 0 ; (LHS = 0)
     
complementarity2a(1,base,south)..  - 100000*y2(1,base,south) - GEN(1,base,south) + CAP(base,south) =L= 0 ; (LHS = 0)
     
complementarity2a(1,peak,north)..  - 100000*y2(1,peak,north) - GEN(1,peak,north) + CAP(peak,north) =L= 0 ; (LHS = 0)
     
REMAINING 109 ENTRIES SKIPPED


---- complementarity2b  =L=  

complementarity2b(1,base,north)..  100000*y2(1,base,north) + mu_G_max(1,base,north) =L= 100000 ; (LHS = 0)
     
complementarity2b(1,base,south)..  100000*y2(1,base,south) + mu_G_max(1,base,south) =L= 100000 ; (LHS = 0)
     
complementarity2b(1,peak,north)..  100000*y2(1,peak,north) + mu_G_max(1,peak,north) =L= 100000 ; (LHS = 0)
     
REMAINING 109 ENTRIES SKIPPED


---- complementarity3a  =L=  

complementarity3a(base,north)..  - 100000*y3(base,north) + CAP(base,north) =L= 0 ; (LHS = 0)
     
complementarity3a(base,south)..  - 100000*y3(base,south) + CAP(base,south) =L= 0 ; (LHS = 0)
     
complementarity3a(peak,north)..  - 100000*y3(peak,north) + CAP(peak,north) =L= 0 ; (LHS = 0)
     
REMAINING 5 ENTRIES SKIPPED


---- complementarity3b  =L=  

complementarity3b(base,north)..  100000*y3(base,north) + mu_C_min(base,north) =L= 100000 ; (LHS = 0)
     
complementarity3b(base,south)..  100000*y3(base,south) + mu_C_min(base,south) =L= 100000 ; (LHS = 0)
     
complementarity3b(peak,north)..  100000*y3(peak,north) + mu_C_min(peak,north) =L= 100000 ; (LHS = 0)
     
REMAINING 5 ENTRIES SKIPPED


---- complementarity4a  =L=  

complementarity4a(base,north)..  - 100000*y4(base,north) - CAP(base,north) =L= -100 ; (LHS = 0, INFES = 100 ****)
     
complementarity4a(base,south)..  - 100000*y4(base,south) - CAP(base,south) =L= -100 ; (LHS = 0, INFES = 100 ****)
     
complementarity4a(peak,north)..  - 100000*y4(peak,north) - CAP(peak,north) =L= -100 ; (LHS = 0, INFES = 100 ****)
     
REMAINING 5 ENTRIES SKIPPED


---- complementarity4b  =L=  

complementarity4b(base,north)..  100000*y4(base,north) + mu_C_max(base,north) =L= 100000 ; (LHS = 0)
     
complementarity4b(base,south)..  100000*y4(base,south) + mu_C_max(base,south) =L= 100000 ; (LHS = 0)
     
complementarity4b(peak,north)..  100000*y4(peak,north) + mu_C_max(peak,north) =L= 100000 ; (LHS = 0)
     
REMAINING 5 ENTRIES SKIPPED


---- complementarity5a  =L=  

complementarity5a(1)..  - 100000*y5(1) + LOAD_spot(1) =L= 0 ; (LHS = 0)
     
complementarity5a(2)..  - 100000*y5(2) + LOAD_spot(2) =L= 0 ; (LHS = 0)
     
complementarity5a(3)..  - 100000*y5(3) + LOAD_spot(3) =L= 0 ; (LHS = 0)
     
REMAINING 11 ENTRIES SKIPPED


---- complementarity5b  =L=  

complementarity5b(1)..  100000*y5(1) + mu_D_min(1) =L= 100000 ; (LHS = 0)
     
complementarity5b(2)..  100000*y5(2) + mu_D_min(2) =L= 100000 ; (LHS = 0)
     
complementarity5b(3)..  100000*y5(3) + mu_D_min(3) =L= 100000 ; (LHS = 0)
     
REMAINING 11 ENTRIES SKIPPED


---- complementarity6a  =L=  

complementarity6a(1)..  - 100000*y6(1) - GEN(1,base,north) - GEN(1,base,south) - GEN(1,peak,north) - GEN(1,peak,south) - GEN(1,wind,north) - GEN(1,wind,south) - GEN(1,solar,north) - GEN(1,solar,south) + LOAD_spot(1) =L= 0 ; (LHS = 0)
     
complementarity6a(2)..  - 100000*y6(2) - GEN(2,base,north) - GEN(2,base,south) - GEN(2,peak,north) - GEN(2,peak,south) - GEN(2,wind,north) - GEN(2,wind,south) - GEN(2,solar,north) - GEN(2,solar,south) + LOAD_spot(2) =L= 0 ; (LHS = 0)
     
complementarity6a(3)..  - 100000*y6(3) - GEN(3,base,north) - GEN(3,base,south) - GEN(3,peak,north) - GEN(3,peak,south) - GEN(3,wind,north) - GEN(3,wind,south) - GEN(3,solar,north) - GEN(3,solar,south) + LOAD_spot(3) =L= 0 ; (LHS = 0)
     
REMAINING 11 ENTRIES SKIPPED


---- complementarity6b  =L=  

complementarity6b(1)..  100000*y6(1) + SPOT_PRICE(1) =L= 100000 ; (LHS = 0)
     
complementarity6b(2)..  100000*y6(2) + SPOT_PRICE(2) =L= 100000 ; (LHS = 0)
     
complementarity6b(3)..  100000*y6(3) + SPOT_PRICE(3) =L= 100000 ; (LHS = 0)
     
REMAINING 11 ENTRIES SKIPPED

GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows - 01/19/22 16:14:09 Page 5
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE LOCI Using MIQCP From line 260


---- y1  

y1(1,base,north)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
  -100000       complementarity1a(1,base,north)
   100000       complementarity1b(1,base,north)

y1(1,base,south)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
  -100000       complementarity1a(1,base,south)
   100000       complementarity1b(1,base,south)

y1(1,peak,north)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
  -100000       complementarity1a(1,peak,north)
   100000       complementarity1b(1,peak,north)

REMAINING 109 ENTRIES SKIPPED

---- y2  

y2(1,base,north)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
  -100000       complementarity2a(1,base,north)
   100000       complementarity2b(1,base,north)

y2(1,base,south)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
  -100000       complementarity2a(1,base,south)
   100000       complementarity2b(1,base,south)

y2(1,peak,north)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
  -100000       complementarity2a(1,peak,north)
   100000       complementarity2b(1,peak,north)

REMAINING 109 ENTRIES SKIPPED

---- y3  

y3(base,north)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
  -100000       complementarity3a(base,north)
   100000       complementarity3b(base,north)

y3(base,south)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
  -100000       complementarity3a(base,south)
   100000       complementarity3b(base,south)

y3(peak,north)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
  -100000       complementarity3a(peak,north)
   100000       complementarity3b(peak,north)

REMAINING 5 ENTRIES SKIPPED

---- y4  

y4(base,north)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
  -100000       complementarity4a(base,north)
   100000       complementarity4b(base,north)

y4(base,south)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
  -100000       complementarity4a(base,south)
   100000       complementarity4b(base,south)

y4(peak,north)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
  -100000       complementarity4a(peak,north)
   100000       complementarity4b(peak,north)

REMAINING 5 ENTRIES SKIPPED

---- y5  

y5(1)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
  -100000       complementarity5a(1)
   100000       complementarity5b(1)

y5(2)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
  -100000       complementarity5a(2)
   100000       complementarity5b(2)

y5(3)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
  -100000       complementarity5a(3)
   100000       complementarity5b(3)

REMAINING 11 ENTRIES SKIPPED

---- y6  

y6(1)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
  -100000       complementarity6a(1)
   100000       complementarity6b(1)

y6(2)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
  -100000       complementarity6a(2)
   100000       complementarity6b(2)

y6(3)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
  -100000       complementarity6a(3)
   100000       complementarity6b(3)

REMAINING 11 ENTRIES SKIPPED

---- GEN  

GEN(1,base,north)
                (.LO, .L, .UP, .M = 0, 0, 100, 0)
       58       objective
        1       nodal_energy_balance(1,north)
       -1       redispatch1(1,base,north)
        1       redispatch2(1,base,north)
        1       gen_min(1,base,north)
       -1       gen_max(1,base,north)
       -1       energy_balance(1)
        1       complementarity1a(1,base,north)
       -1       complementarity2a(1,base,north)
       -1       complementarity6a(1)

GEN(1,base,south)
                (.LO, .L, .UP, .M = 0, 0, 100, 0)
       58       objective
        1       nodal_energy_balance(1,south)
       -1       redispatch1(1,base,south)
        1       redispatch2(1,base,south)
        1       gen_min(1,base,south)
       -1       gen_max(1,base,south)
       -1       energy_balance(1)
        1       complementarity1a(1,base,south)
       -1       complementarity2a(1,base,south)
       -1       complementarity6a(1)

GEN(1,peak,north)
                (.LO, .L, .UP, .M = 0, 0, 100, 0)
       73       objective
        1       nodal_energy_balance(1,north)
       -1       redispatch1(1,peak,north)
        1       redispatch2(1,peak,north)
        1       gen_min(1,peak,north)
       -1       gen_max(1,peak,north)
       -1       energy_balance(1)
        1       complementarity1a(1,peak,north)
       -1       complementarity2a(1,peak,north)
       -1       complementarity6a(1)

REMAINING 109 ENTRIES SKIPPED

---- CAP  

CAP(base,north)
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
     (152)      objective
       -1       redispatch2(1,base,north)
       -1       redispatch2(2,base,north)
       -1       redispatch2(3,base,north)
       -1       redispatch2(4,base,north)
       -1       redispatch2(5,base,north)
       -1       redispatch2(6,base,north)
       -1       redispatch2(7,base,north)
       -1       redispatch2(8,base,north)
       -1       redispatch2(9,base,north)
       -1       redispatch2(10,base,north)
       -1       redispatch2(11,base,north)
       -1       redispatch2(12,base,north)
       -1       redispatch2(13,base,north)
       -1       redispatch2(14,base,north)
        1       gen_max(1,base,north)
        1       gen_max(2,base,north)
        1       gen_max(3,base,north)
        1       gen_max(4,base,north)
        1       gen_max(5,base,north)
        1       gen_max(6,base,north)
        1       gen_max(7,base,north)
        1       gen_max(8,base,north)
        1       gen_max(9,base,north)
        1       gen_max(10,base,north)
        1       gen_max(11,base,north)
        1       gen_max(12,base,north)
        1       gen_max(13,base,north)
        1       gen_max(14,base,north)
        1       cap_min(base,north)
       -1       cap_max(base,north)
        0.5     KKT_CAP(base,north)
        1       complementarity2a(1,base,north)
        1       complementarity2a(2,base,north)
        1       complementarity2a(3,base,north)
        1       complementarity2a(4,base,north)
        1       complementarity2a(5,base,north)
        1       complementarity2a(6,base,north)
        1       complementarity2a(7,base,north)
        1       complementarity2a(8,base,north)
        1       complementarity2a(9,base,north)
        1       complementarity2a(10,base,north)
        1       complementarity2a(11,base,north)
        1       complementarity2a(12,base,north)
        1       complementarity2a(13,base,north)
        1       complementarity2a(14,base,north)
        1       complementarity3a(base,north)
       -1       complementarity4a(base,north)

CAP(base,south)
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
     (152)      objective
       -1       redispatch2(1,base,south)
       -1       redispatch2(2,base,south)
       -1       redispatch2(3,base,south)
       -1       redispatch2(4,base,south)
       -1       redispatch2(5,base,south)
       -1       redispatch2(6,base,south)
       -1       redispatch2(7,base,south)
       -1       redispatch2(8,base,south)
       -1       redispatch2(9,base,south)
       -1       redispatch2(10,base,south)
       -1       redispatch2(11,base,south)
       -1       redispatch2(12,base,south)
       -1       redispatch2(13,base,south)
       -1       redispatch2(14,base,south)
        1       gen_max(1,base,south)
        1       gen_max(2,base,south)
        1       gen_max(3,base,south)
        1       gen_max(4,base,south)
        1       gen_max(5,base,south)
        1       gen_max(6,base,south)
        1       gen_max(7,base,south)
        1       gen_max(8,base,south)
        1       gen_max(9,base,south)
        1       gen_max(10,base,south)
        1       gen_max(11,base,south)
        1       gen_max(12,base,south)
        1       gen_max(13,base,south)
        1       gen_max(14,base,south)
        1       cap_min(base,south)
       -1       cap_max(base,south)
        0.5     KKT_CAP(base,south)
        1       complementarity2a(1,base,south)
        1       complementarity2a(2,base,south)
        1       complementarity2a(3,base,south)
        1       complementarity2a(4,base,south)
        1       complementarity2a(5,base,south)
        1       complementarity2a(6,base,south)
        1       complementarity2a(7,base,south)
        1       complementarity2a(8,base,south)
        1       complementarity2a(9,base,south)
        1       complementarity2a(10,base,south)
        1       complementarity2a(11,base,south)
        1       complementarity2a(12,base,south)
        1       complementarity2a(13,base,south)
        1       complementarity2a(14,base,south)
        1       complementarity3a(base,south)
       -1       complementarity4a(base,south)

CAP(peak,north)
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
      (64)      objective
       -1       redispatch2(1,peak,north)
       -1       redispatch2(2,peak,north)
       -1       redispatch2(3,peak,north)
       -1       redispatch2(4,peak,north)
       -1       redispatch2(5,peak,north)
       -1       redispatch2(6,peak,north)
       -1       redispatch2(7,peak,north)
       -1       redispatch2(8,peak,north)
       -1       redispatch2(9,peak,north)
       -1       redispatch2(10,peak,north)
       -1       redispatch2(11,peak,north)
       -1       redispatch2(12,peak,north)
       -1       redispatch2(13,peak,north)
       -1       redispatch2(14,peak,north)
        1       gen_max(1,peak,north)
        1       gen_max(2,peak,north)
        1       gen_max(3,peak,north)
        1       gen_max(4,peak,north)
        1       gen_max(5,peak,north)
        1       gen_max(6,peak,north)
        1       gen_max(7,peak,north)
        1       gen_max(8,peak,north)
        1       gen_max(9,peak,north)
        1       gen_max(10,peak,north)
        1       gen_max(11,peak,north)
        1       gen_max(12,peak,north)
        1       gen_max(13,peak,north)
        1       gen_max(14,peak,north)
        1       cap_min(peak,north)
       -1       cap_max(peak,north)
        0.5     KKT_CAP(peak,north)
        1       complementarity2a(1,peak,north)
        1       complementarity2a(2,peak,north)
        1       complementarity2a(3,peak,north)
        1       complementarity2a(4,peak,north)
        1       complementarity2a(5,peak,north)
        1       complementarity2a(6,peak,north)
        1       complementarity2a(7,peak,north)
        1       complementarity2a(8,peak,north)
        1       complementarity2a(9,peak,north)
        1       complementarity2a(10,peak,north)
        1       complementarity2a(11,peak,north)
        1       complementarity2a(12,peak,north)
        1       complementarity2a(13,peak,north)
        1       complementarity2a(14,peak,north)
        1       complementarity3a(peak,north)
       -1       complementarity4a(peak,north)

REMAINING 5 ENTRIES SKIPPED

---- WF  

WF
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
        1       objective


---- FLOW  

FLOW(1,north,north)
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
       -1       nodal_energy_balance(1,north)
        1       grid_eq1(1,north,north)
        1       grid_eq3(1,north,north)

FLOW(1,north,south)
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
       -1       nodal_energy_balance(1,north)
        1       grid_eq1(1,north,south)
        1       grid_eq3(1,north,south)

FLOW(1,south,north)
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
       -1       nodal_energy_balance(1,south)
        1       grid_eq1(1,south,north)
        1       grid_eq3(1,south,north)

REMAINING 53 ENTRIES SKIPPED

---- INSTRUMENT  

INSTRUMENT
                (.LO, .L, .UP, .M = -10, 0, 10, 0)
        1       KKT_CAP(base,north)
        1       KKT_CAP(base,south)
        1       KKT_CAP(peak,north)
        1       KKT_CAP(peak,south)
        1       KKT_CAP(wind,north)
        1       KKT_CAP(wind,south)
        1       KKT_CAP(solar,north)
        1       KKT_CAP(solar,south)


---- THETA  

THETA(1,north)
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
     -700       grid_eq3(1,north,south)
      700       grid_eq3(1,south,north)

THETA(1,south)
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
      700       grid_eq3(1,north,south)
     -700       grid_eq3(1,south,north)
        1       grid_eq4(1,north)
        1       grid_eq4(1,south)

THETA(2,north)
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
     -700       grid_eq3(2,north,south)
      700       grid_eq3(2,south,north)

REMAINING 25 ENTRIES SKIPPED

---- SPOT_PRICE  

SPOT_PRICE(1)
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
       -1       KKT_GEN(1,base,north)
       -1       KKT_GEN(1,base,south)
       -1       KKT_GEN(1,peak,north)
       -1       KKT_GEN(1,peak,south)
       -1       KKT_GEN(1,wind,north)
       -1       KKT_GEN(1,wind,south)
       -1       KKT_GEN(1,solar,north)
       -1       KKT_GEN(1,solar,south)
        1       KKT_load(1)
        1       complementarity6b(1)

SPOT_PRICE(2)
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
       -1       KKT_GEN(2,base,north)
       -1       KKT_GEN(2,base,south)
       -1       KKT_GEN(2,peak,north)
       -1       KKT_GEN(2,peak,south)
       -1       KKT_GEN(2,wind,north)
       -1       KKT_GEN(2,wind,south)
       -1       KKT_GEN(2,solar,north)
       -1       KKT_GEN(2,solar,south)
        1       KKT_load(2)
        1       complementarity6b(2)

SPOT_PRICE(3)
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
       -1       KKT_GEN(3,base,north)
       -1       KKT_GEN(3,base,south)
       -1       KKT_GEN(3,peak,north)
       -1       KKT_GEN(3,peak,south)
       -1       KKT_GEN(3,wind,north)
       -1       KKT_GEN(3,wind,south)
       -1       KKT_GEN(3,solar,north)
       -1       KKT_GEN(3,solar,south)
        1       KKT_load(3)
        1       complementarity6b(3)

REMAINING 11 ENTRIES SKIPPED

---- mu_G_min  

mu_G_min(1,base,north)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
       -1       KKT_GEN(1,base,north)
        1       complementarity1b(1,base,north)

mu_G_min(1,base,south)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
       -1       KKT_GEN(1,base,south)
        1       complementarity1b(1,base,south)

mu_G_min(1,peak,north)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
       -1       KKT_GEN(1,peak,north)
        1       complementarity1b(1,peak,north)

REMAINING 109 ENTRIES SKIPPED

---- mu_G_max  

mu_G_max(1,base,north)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
        1       KKT_GEN(1,base,north)
       -1       KKT_CAP(base,north)
        1       complementarity2b(1,base,north)

mu_G_max(1,base,south)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
        1       KKT_GEN(1,base,south)
       -1       KKT_CAP(base,south)
        1       complementarity2b(1,base,south)

mu_G_max(1,peak,north)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
        1       KKT_GEN(1,peak,north)
       -1       KKT_CAP(peak,north)
        1       complementarity2b(1,peak,north)

REMAINING 109 ENTRIES SKIPPED

---- mu_C_min  

mu_C_min(base,north)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
       -1       KKT_CAP(base,north)
        1       complementarity3b(base,north)

mu_C_min(base,south)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
       -1       KKT_CAP(base,south)
        1       complementarity3b(base,south)

mu_C_min(peak,north)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
       -1       KKT_CAP(peak,north)
        1       complementarity3b(peak,north)

REMAINING 5 ENTRIES SKIPPED

---- mu_C_max  

mu_C_max(base,north)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
        1       KKT_CAP(base,north)
        1       complementarity4b(base,north)

mu_C_max(base,south)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
        1       KKT_CAP(base,south)
        1       complementarity4b(base,south)

mu_C_max(peak,north)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
        1       KKT_CAP(peak,north)
        1       complementarity4b(peak,north)

REMAINING 5 ENTRIES SKIPPED

---- mu_D_min  

mu_D_min(1)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
       -1       KKT_load(1)
        1       complementarity5b(1)

mu_D_min(2)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
       -1       KKT_load(2)
        1       complementarity5b(2)

mu_D_min(3)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
       -1       KKT_load(3)
        1       complementarity5b(3)

REMAINING 11 ENTRIES SKIPPED

---- GRID_CAP  

GRID_CAP(north,north)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
       -1       grid_eq1(1,north,north)
       -1       grid_eq1(2,north,north)
       -1       grid_eq1(3,north,north)
       -1       grid_eq1(4,north,north)
       -1       grid_eq1(5,north,north)
       -1       grid_eq1(6,north,north)
       -1       grid_eq1(7,north,north)
       -1       grid_eq1(8,north,north)
       -1       grid_eq1(9,north,north)
       -1       grid_eq1(10,north,north)
       -1       grid_eq1(11,north,north)
       -1       grid_eq1(12,north,north)
       -1       grid_eq1(13,north,north)
       -1       grid_eq1(14,north,north)

GRID_CAP(north,south)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
      112       objective
       -1       grid_eq1(1,north,south)
       -1       grid_eq1(2,north,south)
       -1       grid_eq1(3,north,south)
       -1       grid_eq1(4,north,south)
       -1       grid_eq1(5,north,south)
       -1       grid_eq1(6,north,south)
       -1       grid_eq1(7,north,south)
       -1       grid_eq1(8,north,south)
       -1       grid_eq1(9,north,south)
       -1       grid_eq1(10,north,south)
       -1       grid_eq1(11,north,south)
       -1       grid_eq1(12,north,south)
       -1       grid_eq1(13,north,south)
       -1       grid_eq1(14,north,south)
        1       grid_eq2(north,south)
       -1       grid_eq2(south,north)

GRID_CAP(south,north)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
      112       objective
       -1       grid_eq1(1,south,north)
       -1       grid_eq1(2,south,north)
       -1       grid_eq1(3,south,north)
       -1       grid_eq1(4,south,north)
       -1       grid_eq1(5,south,north)
       -1       grid_eq1(6,south,north)
       -1       grid_eq1(7,south,north)
       -1       grid_eq1(8,south,north)
       -1       grid_eq1(9,south,north)
       -1       grid_eq1(10,south,north)
       -1       grid_eq1(11,south,north)
       -1       grid_eq1(12,south,north)
       -1       grid_eq1(13,south,north)
       -1       grid_eq1(14,south,north)
       -1       grid_eq2(north,south)
        1       grid_eq2(south,north)

REMAINING ENTRY SKIPPED

---- LOAD_redi  

LOAD_redi(1,north)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
    (-325)      objective
       -1       nodal_energy_balance(1,north)

LOAD_redi(1,south)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
    (-325)      objective
       -1       nodal_energy_balance(1,south)

LOAD_redi(2,north)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
    (-325)      objective
       -1       nodal_energy_balance(2,north)

REMAINING 25 ENTRIES SKIPPED

---- LOAD_spot  

LOAD_spot(1)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
        1       demand_min(1)
        1       energy_balance(1)
        5.0247  KKT_load(1)
        1       complementarity5a(1)
        1       complementarity6a(1)

LOAD_spot(2)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
        1       demand_min(2)
        1       energy_balance(2)
        4.0948  KKT_load(2)
        1       complementarity5a(2)
        1       complementarity6a(2)

LOAD_spot(3)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
        1       demand_min(3)
        1       energy_balance(3)
        3.4962  KKT_load(3)
        1       complementarity5a(3)
        1       complementarity6a(3)

REMAINING 11 ENTRIES SKIPPED

---- UP  

UP(1,base,north)
                (.LO, .L, .UP, .M = 0, 0, 100, 0)
       58       objective
        1       nodal_energy_balance(1,north)
        1       redispatch2(1,base,north)

UP(1,base,south)
                (.LO, .L, .UP, .M = 0, 0, 100, 0)
       58       objective
        1       nodal_energy_balance(1,south)
        1       redispatch2(1,base,south)

UP(1,peak,north)
                (.LO, .L, .UP, .M = 0, 0, 100, 0)
       73       objective
        1       nodal_energy_balance(1,north)
        1       redispatch2(1,peak,north)

REMAINING 109 ENTRIES SKIPPED

---- DOWN  

DOWN(1,base,north)
                (.LO, .L, .UP, .M = 0, 0, 100, 0)
      -58       objective
       -1       nodal_energy_balance(1,north)
        1       redispatch1(1,base,north)

DOWN(1,base,south)
                (.LO, .L, .UP, .M = 0, 0, 100, 0)
      -58       objective
       -1       nodal_energy_balance(1,south)
        1       redispatch1(1,base,south)

DOWN(1,peak,north)
                (.LO, .L, .UP, .M = 0, 0, 100, 0)
      -73       objective
       -1       nodal_energy_balance(1,north)
        1       redispatch1(1,peak,north)

REMAINING 109 ENTRIES SKIPPED
GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows - 01/19/22 16:14:09 Page 6
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Model Statistics    SOLVE LOCI Using MIQCP From line 260


MODEL STATISTICS

BLOCKS OF EQUATIONS          29     SINGLE EQUATIONS        1,333
BLOCKS OF VARIABLES          23     SINGLE VARIABLES        1,012
NON ZERO ELEMENTS         3,713     NON LINEAR N-Z             36
DERIVATIVE POOL              20     CONSTANT POOL              49
CODE LENGTH                 226     DISCRETE VARIABLES        268


GENERATION TIME      =        0.016 SECONDS      4 MB  30.3.0 rc5da09e WEX-WEI


EXECUTION TIME       =        0.016 SECONDS      4 MB  30.3.0 rc5da09e WEX-WEI
