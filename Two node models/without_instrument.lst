GAMS 35.2.0  r33388c4 Released Jun  2, 2021 WEX-WEI x86 64bit/MS Windows - 03/25/22 08:06:54 Page 1
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
C o m p i l a t i o n


   1  Sets
   2  all_t       all hours               /1*10/
   3  t(all_t)    hours                   /1*10/
   4  tec         generators              /base, peak, wind, solar/
   5  con(tec)    conventional generation /base, peak/
   6  all_n       all buses               /north, south, east/
   7  n(all_n)    selected buses          /north, south, east/
   8  ;
   9   
  10   
  11  alias (n,m);
  12  alias (all_n,all_m);
  13   
  14  * parameters for supply and demand functions
  15  Parameter elasticity / -0.05 /;
  16  Parameter p_ref / 55 /;
  17  Parameter specific_network_costs /200/;
  18  Parameter capacity_slope / 333 /;
  19  *Source for network costs: EMMA (3400 EUR/MW/km discontiert mit i = 0.07 ueber 40 Jahre)
  20   
  21  Table B(all_n,all_m)        Susceptance of transmission lines
  22           north  south   east
  23  north        1     700   350
  24  south      700       1   400
  25  east       350     400     1
  26  ;
  27   
  28  Parameters
  29  * Input Parameters
  30  i_cost(*,*)                 cost data to be loaded from sheet "cost"
  31  i_load(all_t,all_n)         load data to be loaded from sheet "time series" in MWh
  32  i_avail(all_t,tec,all_n)    availability data
  33   
  34  * Model Parameters
  35  load_ref(t,n)               hourly load in GWh
  36  avail(t,tec,n)              availability of wind and solar generation (1)
  37  c_var(tec,n)                variable costs (EUR per MWh)
  38  c_fix(tec,n)                annualized fixed costs (EUR per MW p.a.)
  39  cap_lim(tec,n)              capacity limit of generation in each node
  40  grid_cost(n,m)
  41  sc                          scaling factor
  42  a_nodal(t,n)                intercept of inverse nodal demand function
  43  s_nodal(t,n)                slope of inverse nodal demand function
  44   
  45  A_zonal(t)                  intercept of inverse zonal demand function
  46  S_zonal(t)                  slope of inverse zonal demand function
  47   
  48  * Output Parameters
  49  welfare
  50  consumer_surplus
  51  generation_costs
  52  network_cost
  53  network_cost_1
  54  network_cost_2
  55  network_cost_3
  56   
  57  res_share
  58  real_generation(t,tec,n)
  59  load_deviation(t,n)
  60  load_shedding(t,n)
  61   
  62  o_RES_share
  63  o_load(t,n)
  64  o_cap(tec,n)
  65  o_gen(t,tec,n)
  66  price(t)
  67  o_instrument
  68  sum_instrument
  69  ;
  70   
  71  * Load data
GDXIN   C:\GitHub\Locational-investment-signals\Two node models\Input/in.gdx
--- LOAD  i_cost = 1:i_cost
  74   
GDXIN   C:\GitHub\Locational-investment-signals\Two node models\Input/load.gdx
--- LOAD  i_load = 1:i_load
  77   
GDXIN   C:\GitHub\Locational-investment-signals\Two node models\Input/avail.gdx
--- LOAD  i_avail = 1:i_avail
  80   
  81  display i_cost, i_load, i_avail;
  82   
  83   
  84   
  85  * Data assignment
  86  sc = card(t) / 8760;
  87  load_ref(t,n)               = i_load(t,n) / 1000;
  88  avail(t,tec,n)              = i_avail(t,tec,n);
  89  avail(t,con,n)              = 1;
  90  c_var(tec, n)               = i_cost(tec,"cost_var");
  91  c_fix(tec, n)               = round(i_cost(tec,"cost_fix") * 1000 * sc);
  92  cap_lim(tec,n)              = 100;
  93  grid_cost(n,m)              = round(B(n,m) * specific_network_costs * sc);
  94  capacity_slope              = capacity_slope * sc;
  95   
  96  *Inverse demand function at each node
  97  a_nodal(t,n)                = p_ref *(1-1/elasticity);
  98  s_nodal(t,n)                = p_ref *(1/(elasticity*load_ref(t,n)));
  99   
 100  * Inverse demand function of the zonal market (only holds if P(t) < a_nodal(t,n) for all t,n)
 101  A_zonal(t)                  = sum(n, a_nodal(t,n) / s_nodal(t,n)) / sum(n, 1/ s_nodal(t,n));
 102  S_zonal(t)                  = 1 / sum(n, 1/ s_nodal(t,n));
 103   
 104  display c_var, load_ref, avail, c_fix, a_nodal, s_nodal, A_zonal, S_zonal;
 105   
 106  Binary variables y1(t,tec,n),y2(t,tec,n),y3(tec,n),y4(tec,n),y5(t),y6(t);
 107   
 108  Parameter M1 / 100000/;
 109  Parameter M2 / 100000/;
 110  Parameter M3 / 100000/;
 111  Parameter M4 / 100000/;
 112  Parameter M5 / 100000/;
 113  Parameter M6 / 100000/;
 114   
 115  Free Variables
 116  GEN(t,tec,n)
 117  CAP(tec,n)
 118  WF
 119  FLOW(t,n,m)
 120  INSTRUMENT
 121  THETA(t,n)
 122  SPOT_PRICE(t)
 123  ;
 124   
 125  Positive variables
 126  mu_G_min(t,tec,n)
 127  mu_G_max(t,tec,n)
 128  mu_C_min(tec,n)
 129  mu_C_max(tec,n)
 130  mu_D_min(t)
 131   
 132  GRID_CAP(n,m)
 133  LOAD_redi(t,n)
 134  LOAD_spot(t)
 135  UP(t,tec,n)
 136  DOWN(t,tec,n)
 137  ;
 138   
 139  Equations
 140  objective, instr_const,
 141  nodal_energy_balance,
 142  grid_eq1, grid_eq2, grid_eq3, grid_eq4,
 143  redispatch1, redispatch2,
 144   
 145  gen_min, gen_max,
 146  cap_min, cap_max,
 147  demand_min,
 148  energy_balance,
 149   
 150  KKT_GEN, KKT_CAP, KKT_load,
 151   
 152  complementarity1a,
 153  complementarity1b,
 154  complementarity2a,
 155  complementarity2b,
 156  complementarity3a,
 157  complementarity3b,
 158  complementarity4a,
 159  complementarity4b,
 160  complementarity5a,
 161  complementarity5b,
 162  complementarity6a,
 163  complementarity6b
 164  ;
 165   
 166  objective..                     WF =e= sum((t,n), a_nodal(t,n) * LOAD_redi(t,n) + 1/2 * s_nodal(t,n) * LOAD_redi(t,n) * LOAD_redi(t,n))
 167                                      - sum((tec,n), CAP(tec,n) * c_fix(tec,n) + 0.5 * CAP(tec,n) * CAP(tec,n) * capacity_slope)
 168                                      - sum((t,tec,n), GEN(t,tec,n) * c_var(tec,n))
 169                                      - sum((t,tec,n), (UP(t,tec,n) - DOWN(t,tec,n)) * (c_var(tec,n)))
 170                                      - sum((n,m),(GRID_CAP(n,m) * grid_cost(n,m)) / 2)
 171                                      ;
 172   
 173  nodal_energy_balance(t,n)..     sum(tec,GEN(t,tec,n) - DOWN(t,tec,n) + UP(t,tec,n)) - LOAD_redi(t,n) =E= sum(m,FLOW(t,n,m));
 174   
 175  *network constraints
 176  grid_eq1(t,n,m)..               FLOW(t,n,m) =l= GRID_CAP(n,m);
 177  grid_eq2(n,m)..                 GRID_CAP(n,m) =e= GRID_CAP(m,n);
 178  grid_eq3(t,n,m)..               FLOW(t,n,m) =e= B(n,m) *(THETA(t,n) - THETA(t,m));
 179  grid_eq4(t,n)..                 THETA(t,'south') =e= 0;
 180   
 181  redispatch1(t,tec,n)..          DOWN(t,tec,n) =L= GEN(t,tec,n);
 182  redispatch2(t,tec,n)..          UP(t,tec,n) =L= CAP(tec,n) * avail(t,tec,n) - GEN(t,tec,n);
 183   
 184  ** INNER PROBLEM
 185  gen_min(t,tec,n)..              0 =g= -GEN(t,tec,n);
 186  gen_max(t,tec,n)..              0 =g= GEN(t,tec,n) - CAP(tec,n) * avail(t,tec,n);
 187   
 188  cap_min(tec,n)..                0 =g= -CAP(tec,n);
 189  cap_max(tec,n)..                0 =g= CAP(tec,n) - cap_lim(tec,n);
 190   
 191  demand_min(t)..                 0 =g= -LOAD_spot(t);
 192  energy_balance(t)..             0 =e= sum((tec,n),GEN(t,tec,n)) - LOAD_spot(t);
 193   
 194  KKT_GEN(t,tec,n)..              c_var(tec,n) + mu_G_max(t,tec,n) - mu_G_min(t,tec,n) - SPOT_PRICE(t) =e= 0;
 195  KKT_CAP(tec,n)..                c_fix(tec,n) + capacity_slope * CAP(tec,n) + INSTRUMENT - sum(t,avail(t,tec,n) * mu_G_max(t,tec,n)) + mu_C_max(tec,n) - mu_C_min(tec,n) =e= 0;
 196  KKT_load(t)..                   -(A_zonal(t) + S_zonal(t) * LOAD_spot(t)) - mu_D_min(t) + SPOT_PRICE(t) =e= 0;
 197   
 198  complementarity1a(t,tec,n)..    GEN(t,tec,n)        =L= y1(t,tec,n) * M1;
 199  complementarity1b(t,tec,n)..    mu_G_min(t,tec,n)   =L= (1-y1(t,tec,n)) * M1;
 200  complementarity2a(t,tec,n)..    CAP(tec,n) * avail(t,tec,n) - GEN(t,tec,n) =L= y2(t,tec,n) * M2;
 201  complementarity2b(t,tec,n)..    mu_G_max(t,tec,n)   =L= (1-y2(t,tec,n)) * M2;
 202  complementarity3a(tec,n)..      CAP(tec,n)          =L= y3(tec,n) * M3;
 203  complementarity3b(tec,n)..      mu_C_min(tec,n)     =L= (1-y3(tec,n)) * M3;
 204  complementarity4a(tec,n)..      cap_lim(tec,n) - CAP(tec,n) =L= y4(tec,n) * M4;
 205  complementarity4b(tec,n)..      mu_C_max(tec,n)     =L= (1-y4(tec,n)) * M4;
 206  complementarity5a(t)..          LOAD_spot(t)        =L= y5(t) * M5;
 207  complementarity5b(t)..          mu_D_min(t)       =L= (1-y5(t)) * M5;
 208  complementarity6a(t)..          LOAD_spot(t) - sum((tec,n),GEN(t,tec,n)) =L= y6(t) * M6;
 209  complementarity6b(t)..          SPOT_PRICE(t)           =L= (1-y6(t)) * M6;
 210   
 211   
 212  Model LOCI /
 213   
 214  objective
 215  nodal_energy_balance
 216   
 217  grid_eq1
 218  grid_eq2
 219  grid_eq3
 220  grid_eq4
 221   
 222  redispatch1
 223  redispatch2
 224   
 225  gen_min
 226  gen_max
 227  cap_min
 228  cap_max
 229   
 230  demand_min
 231  energy_balance
 232   
 233  KKT_GEN
 234  KKT_CAP
 235  KKT_load
 236   
 237  complementarity1a
 238  complementarity1b
 239  complementarity2a
 240  complementarity2b
 241  complementarity3a
 242  complementarity3b
 243  complementarity4a
 244  complementarity4b
 245  complementarity5a
 246  complementarity5b
 247  complementarity6a
 248  complementarity6b
 249  /;
 250   
 251  INSTRUMENT.L = 8;
 252  INSTRUMENT.lo = -5;
 253  INSTRUMENT.up = 25;
 254   
 255  GEN.up(t,tec,n) = 100;
 256  GEN.lo(t,tec,n) = 0;
 257   
 258  DOWN.up(t,tec,n) = 30;
 259  DOWN.lo(t,tec,n) = 0;
 260   
 261  UP.up(t,tec,n) = 30;
 262  UP.lo(t,tec,n) = 0;
 263   
 264  LOCI.nodlim = 800000000;
 265  LOCI.resLim = 2000000;
 266   
 267  Option optcr = 0.0001;
 268   
 269  Option MIQCP = Cplex;
 270   
 271   
 272  Solve LOCI maximizing WF using MIQCP;
 273   
 274  price(t) = SPOT_PRICE.L(t);
 275   
 276  o_instrument = INSTRUMENT.L / sc / 1000;
 277   
 278  network_cost_1 = sum((n,m),(GRID_CAP.L(n,m) / 2 * grid_cost(n,m)));
 279  network_cost_2 = sum((t,tec,n), (UP.L(t,tec,n) - DOWN.L(t,tec,n)) * c_var(tec,n));
 280  network_cost_3 = sum((t), A_zonal(t) * LOAD_spot.L(t) + 1/2 * S_zonal(t) * LOAD_spot.L(t) * LOAD_spot.L(t))
 281                  - sum((t,n), a_nodal(t,n) * LOAD_redi.L(t,n) + 1/2 * s_nodal(t,n) * LOAD_redi.L(t,n) * LOAD_redi.L(t,n))
 282                  ;
 283   
 284  network_cost = network_cost_1 + network_cost_2 + network_cost_3;
 285   
 286  consumer_surplus = sum((t), A_zonal(t) * LOAD_spot.L(t) + 1/2 * S_zonal(t) * LOAD_spot.L(t) * LOAD_spot.L(t));
 287   
 288  generation_costs = (sum((tec,n), CAP.L(tec,n) * c_fix(tec,n) + 0.5 * CAP.L(tec,n) * CAP.L(tec,n) * capacity_slope) + sum((t,tec,n), GEN.L(t,tec,n) * c_var(tec,n)));
 289   
 290  sum_instrument = sum((tec,n), INSTRUMENT.L * CAP.L(tec,n));
 291   
 292  load_deviation(t,n) = ((SPOT_PRICE.L(t) - a_nodal(t,n)) / s_nodal(t,n)) - load_ref(t,n);
 293  load_shedding(t,n) = LOAD_spot.L(t) - LOAD_redi.L(t,n);
 294  res_share = 1 - sum((t,con,n), GEN.L(t,con,n)) / sum((t,tec,n), GEN.L(t,tec,n));
 295  o_cap(tec,n) = CAP.L(tec,n);
 296  o_gen(t,tec,n) = GEN.L(t,tec,n);
 297  real_generation(t,tec,n) = GEN.L(t,tec,n) + UP.L(t,tec,n) - DOWN.L(t,tec,n);
 298  welfare = WF.L;
 299   
 300  Display WF.L, consumer_surplus, generation_costs, network_cost, network_cost_1, network_cost_2, network_cost_3, CAP.L, GEN.L, UP.L, DOWN.L, FLOW.L, price, load_deviation, load_shedding, GRID_CAP.L, LOAD_redi.L, LOAD_spot.L, o_instrument, sum_instrument;
 301   
 302  execute_UNLOAD 'Output/without_instrument.gdx' welfare, consumer_surplus, generation_costs, network_cost, network_cost_1, network_cost_2, network_cost_3, res_share, o_instrument, sum_instrument, o_cap, o_gen, price, c_fix;

**** LIST OF STRAY NAMES - CHECK DECLARATIONS FOR SPURIOUS COMMAS
**** STRAY NAME instr_const OF TYPE EQU  
GAMS 35.2.0  r33388c4 Released Jun  2, 2021 WEX-WEI x86 64bit/MS Windows - 03/25/22 08:06:54 Page 2
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Include File Summary


   SEQ   GLOBAL TYPE      PARENT   LOCAL  FILENAME

     1        1 INPUT          0       0  C:\GitHub\Locational-investment-signals\Two node models\without_instrument.gms
     2       72 GDXIN          1      72  C:\GitHub\Locational-investment-signals\Two node models\Input/in.gdx
     3       75 GDXIN          1      75  C:\GitHub\Locational-investment-signals\Two node models\Input/load.gdx
     4       78 GDXIN          1      78  C:\GitHub\Locational-investment-signals\Two node models\Input/avail.gdx


COMPILATION TIME     =        0.000 SECONDS      3 MB  35.2.0 r33388c4 WEX-WEI
GAMS 35.2.0  r33388c4 Released Jun  2, 2021 WEX-WEI x86 64bit/MS Windows - 03/25/22 08:06:54 Page 3
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
E x e c u t i o n


----     81 PARAMETER i_cost  cost data to be loaded from sheet "cost"

         cost_fix    cost_var

base      300.000      40.000
peak      110.000      70.000
wind      100.000
solar      60.000


----     81 PARAMETER i_load  load data to be loaded from sheet "time series" in MWh

         north       south

1     5700.000   38740.000
2     3060.000   42080.000
3     2840.000   51310.000
4    22260.000   38900.000
5    16130.000   46970.000
6    29240.000   31410.000
7    28340.000   31500.000
8     6170.000   54070.000
9    21310.000   32410.000
10   10260.000   37370.000


----     81 PARAMETER i_avail  availability data

               north       south

1 .wind        0.430       0.310
2 .wind        0.240       0.160
2 .solar       0.200       0.080
3 .wind        0.210       0.120
3 .solar       0.330       0.240
4 .wind        0.160       0.130
4 .solar       0.040       0.040
5 .wind        0.080       0.100
6 .wind        0.110       0.080
6 .solar       0.020       0.020
7 .wind        0.190       0.180
7 .solar       0.230       0.350
8 .wind        0.260       0.300
8 .solar       0.240       0.410
9 .wind        0.240       0.250
9 .solar       0.010       0.050
10.wind        0.180       0.130

**** Exec Error at line 98: division by zero (0)

----    104 PARAMETER c_var  variable costs (EUR per MWh)

           north       south        east

base      40.000      40.000      40.000
peak      70.000      70.000      70.000


----    104 PARAMETER load_ref  hourly load in GWh

         north       south

1        5.700      38.740
2        3.060      42.080
3        2.840      51.310
4       22.260      38.900
5       16.130      46.970
6       29.240      31.410
7       28.340      31.500
8        6.170      54.070
9       21.310      32.410
10      10.260      37.370


----    104 PARAMETER avail  availability of wind and solar generation (1)

               north       south        east

1 .base        1.000       1.000       1.000
1 .peak        1.000       1.000       1.000
1 .wind        0.430       0.310
2 .base        1.000       1.000       1.000
2 .peak        1.000       1.000       1.000
2 .wind        0.240       0.160
2 .solar       0.200       0.080
3 .base        1.000       1.000       1.000
3 .peak        1.000       1.000       1.000
3 .wind        0.210       0.120
3 .solar       0.330       0.240
4 .base        1.000       1.000       1.000
4 .peak        1.000       1.000       1.000
4 .wind        0.160       0.130
4 .solar       0.040       0.040
5 .base        1.000       1.000       1.000
5 .peak        1.000       1.000       1.000
5 .wind        0.080       0.100
6 .base        1.000       1.000       1.000
6 .peak        1.000       1.000       1.000
6 .wind        0.110       0.080
6 .solar       0.020       0.020
7 .base        1.000       1.000       1.000
7 .peak        1.000       1.000       1.000
7 .wind        0.190       0.180
7 .solar       0.230       0.350
8 .base        1.000       1.000       1.000
8 .peak        1.000       1.000       1.000
8 .wind        0.260       0.300
8 .solar       0.240       0.410
9 .base        1.000       1.000       1.000
9 .peak        1.000       1.000       1.000
9 .wind        0.240       0.250
9 .solar       0.010       0.050
10.base        1.000       1.000       1.000
10.peak        1.000       1.000       1.000
10.wind        0.180       0.130


----    104 PARAMETER c_fix  annualized fixed costs (EUR per MW p.a.)

            north       south        east

base      342.000     342.000     342.000
peak      126.000     126.000     126.000
wind      114.000     114.000     114.000
solar      68.000      68.000      68.000


----    104 PARAMETER a_nodal  intercept of inverse nodal demand function

         north       south        east

1     1155.000    1155.000    1155.000
2     1155.000    1155.000    1155.000
3     1155.000    1155.000    1155.000
4     1155.000    1155.000    1155.000
5     1155.000    1155.000    1155.000
6     1155.000    1155.000    1155.000
7     1155.000    1155.000    1155.000
8     1155.000    1155.000    1155.000
9     1155.000    1155.000    1155.000
10    1155.000    1155.000    1155.000


----    104 PARAMETER s_nodal  slope of inverse nodal demand function

         north       south        east

1     -192.982     -28.394        UNDF
2     -359.477     -26.141        UNDF
3     -387.324     -21.438        UNDF
4      -49.416     -28.278        UNDF
5      -68.196     -23.419        UNDF
6      -37.620     -35.021        UNDF
7      -38.814     -34.921        UNDF
8     -178.282     -20.344        UNDF
9      -51.619     -33.940        UNDF
10    -107.212     -29.435        UNDF


----    104 PARAMETER A_zonal  intercept of inverse zonal demand function

1  UNDF,    2  UNDF,    3  UNDF,    4  UNDF,    5  UNDF,    6  UNDF,    7  UNDF,    8  UNDF,    9  UNDF,    10 UNDF


----    104 PARAMETER S_zonal  slope of inverse zonal demand function

1  UNDF,    2  UNDF,    3  UNDF,    4  UNDF,    5  UNDF,    6  UNDF,    7  UNDF,    8  UNDF,    9  UNDF,    10 UNDF

GAMS 35.2.0  r33388c4 Released Jun  2, 2021 WEX-WEI x86 64bit/MS Windows - 03/25/22 08:06:54 Page 4
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Setup/Generation    SOLVE LOCI Using MIQCP From line 272


**** SOLVE from line 272 ABORTED
**** EXECERROR=1


EXECUTION TIME       =        0.000 SECONDS      4 MB  35.2.0 r33388c4 WEX-WEI


USER: GAMS Community License for Anselm Eicke        G210709|0002AO-GEN
      Hertie School of Governance GmbH                           CL1515
      License for teaching and research at degree granting institutions


**** FILE SUMMARY

Input      C:\GitHub\Locational-investment-signals\Two node models\without_instrument.gms
Output     C:\GitHub\Locational-investment-signals\Two node models\without_instrument.lst

**** USER ERROR(S) ENCOUNTERED
