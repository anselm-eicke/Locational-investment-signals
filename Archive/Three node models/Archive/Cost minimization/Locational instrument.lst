GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows - 10/27/21 22:59:54 Page 1
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
C o m p i l a t i o n


   1  Sets
   2  all_t       all hours               /1*48/
   3  t(all_t)    hours                   /1*24/
   4  tec         generators              /base, peak, wind, solar/
   5  con(tec)    conventional generation /base, peak/
   6  all_n       all buses               /north, south, total/
   7  n(all_n)    selected buses          /north, south/
   8  ;
   9   
  10  alias (n,m);
  11  alias (all_n,all_m);
  12   
  13  Parameter specific_network_costs /300/;
  14  *Source for network costs: EMMA (3400 EUR/MW/km discontiert mit i = 0.07 ueber 40 Jahre)
  15   
  16  Table B(all_n,all_m)        Susceptance of transmission lines
  17           north  south   total
  18  north        1     700    250
  19  south      700       1    500
  20  total      250     500      1
  21  ;
  22   
  23  Parameters
  24  * Input Parameters
  25  i_cost(*,*)                 cost data to be loaded from sheet "cost"
  26  i_load(all_t,all_n)         load data to be loaded from sheet "time series" in MWh
  27  i_avail(all_t,tec,all_n)    availability data
  28   
  29  * Model Parameters
  30  load(t,n)                   hourly load in GWh
  31  avail(t,tec,n)              availability of wind and solar generation (1)
  32  c_var(tec,n)                variable costs (EUR per MWh)
  33  c_fix(tec,n)                annualized fixed costs (EUR per MW p.a.)
  34  capacity_slope
  35  cap_lim(tec,n)              capacity limit of generation in each node
  36  grid_cost(n,m)
  37  sc                          scaling factor
  38   
  39  * Output Parameters
  40  generation_costs
  41  total_network_cost
  42  res_share
  43   
  44  o_GC
  45  o_NC
  46  o_RES_share
  47  o_cap(tec,n)
  48  o_gen(t,tec,n)
  49   
  50  o_instrument(tec,n)
  51  sum_instrument
  52  network_cost
  53   
  54  i_instrument(tec,n)
  55  i_cap(tec,n)
  56  i_lambda(t)
  57  i_gen(t,tec,n)
  58  i_grid_cap(n,m)
  59  i_flow(t,n,m)
  60  i_up(t,tec,n)
  61  i_down(t,tec,n)
  62  i_mu_G_min(t,tec,n)
  63  i_mu_G_max(t,tec,n)
  64  i_mu_C_min(tec,n)
  65  i_mu_C_max(tec,n)
  66  ;
  67   
  68  * Load data
GDXIN   C:\Users\a.eicke\Documents\Locational-investment-signals\Three node models\Cost minimization\in.gdx
--- LOAD  i_cost = 1:i_cost
--- LOAD  i_load = 2:i_load
--- LOAD  i_avail = 3:i_avail
  71   
  72  * Data assignment
  73  sc = card(t) / 8760;
  74  load(t,n)                   = i_load(t,n) / 1000;
  75  avail(t,tec,n)              = i_avail(t,tec,n);
  76  avail(t,con,n)              = 1;
  77  c_var(tec, n)               = i_cost(tec,"cost_var");
  78  c_fix(tec, n)               = round(i_cost(tec,"cost_fix") * 1000 * sc);
  79  capacity_slope              = 0.15;
  80  cap_lim(tec,n)              = 100;
  81  grid_cost(n,m)              = round(B(n,m) * specific_network_costs * sc);
  82   
  83  display c_var, load, avail, c_fix;
  84   
  85  Binary variables y1(t,tec,n),y2(t,tec,n),y3(tec,n),y4(tec,n),y5(t);
  86   
  87  Parameter M1 / 100000/;
  88  Parameter M2 / 100000/;
  89  Parameter M3 / 100000/;
  90  Parameter M4 / 100000/;
  91  Parameter M5 / 100000/;
  92   
  93  Free Variables
  94  GEN(t,tec,n)
  95  CAP(tec,n)
  96  COSTS
  97  FLOW(t,n,m)
  98  INSTRUMENT(tec,n)
  99  THETA(t,n)
 100  LAMBDA(t)
 101  ;
 102   
 103  Positive variables
 104  mu_G_min(t,tec,n)
 105  mu_G_max(t,tec,n)
 106  mu_C_min(tec,n)
 107  mu_C_max(tec,n)
 108  mu_D_min(t,n)
 109   
 110  GRID_CAP(n,m)
 111  UP(t,tec,n)
 112  DOWN(t,tec,n)
 113  ;
 114   
 115  alias(tec, ttec);
 116  alias(n, nn);
 117   
 118   
 119  Equations
 120   
 121  objective, instr_const,
 122  nodal_energy_balance,
 123  grid_eq1, grid_eq2, grid_eq3, grid_eq4,
 124  redispatch1, redispatch2,
 125   
 126  gen_min, gen_max,
 127  cap_min, cap_max,
 128  demand_min,
 129  energy_balance,
 130   
 131  KKT_GEN, KKT_CAP, KKT_load,
 132   
 133  complementarity1a,
 134  complementarity1b,
 135  complementarity2a,
 136  complementarity2b,
 137  complementarity3a,
 138  complementarity3b,
 139  complementarity4a,
 140  complementarity4b,
 141  complementarity5a,
 142  complementarity5b,
 143  complementarity6a,
 144  complementarity6b
 145  ;
 146   
 147  objective..                     COSTS =e= sum((tec,n), CAP(tec,n) * c_fix(tec,n) + 0.5 * CAP(tec,n) * CAP(tec,n) * capacity_slope)
 148                                      + sum((t,tec,n), GEN(t,tec,n) * c_var(tec,n))
 149                                      + sum((n,m),(GRID_CAP(n,m) * grid_cost(n,m)) / 2)
 150                                      + sum((t,tec,n), UP(t,tec,n) * c_var(tec,n) - DOWN(t,tec,n) * c_var(tec,n));
 151   
 152   
 153  nodal_energy_balance(t,n)..     sum(tec,GEN(t,tec,n) - DOWN(t,tec,n) + UP(t,tec,n)) - load(t,n) =E= sum(m,FLOW(t,n,m));
 154   
 155  *network constraints
 156  grid_eq1(t,n,m)..               FLOW(t,n,m) =l= GRID_CAP(n,m);
 157  grid_eq2(n,m)..                 GRID_CAP(n,m) =e= GRID_CAP(m,n);
 158  grid_eq3(t,n,m)..               FLOW(t,n,m) =e= B(n,m) *(THETA(t,n) - THETA(t,m));
 159  grid_eq4(t,n)..                 THETA(t,'south') =e= 0;
 160   
 161  redispatch1(t,tec,n)..          DOWN(t,tec,n) =L= GEN(t,tec,n);
 162  redispatch2(t,tec,n)..          UP(t,tec,n) =L= CAP(tec,n) * avail(t,tec,n) - GEN(t,tec,n);
 163   
 164  instr_const(tec,n)..            INSTRUMENT(tec,n) =e= 0;
 165   
 166  ** INNER PROBLEM
 167  gen_min(t,tec,n)..              0 =g= -GEN(t,tec,n);
 168  gen_max(t,tec,n)..              0 =g= GEN(t,tec,n) - CAP(tec,n) * avail(t,tec,n);
 169   
 170  cap_min(tec,n)..                0 =g= -CAP(tec,n);
 171  cap_max(tec,n)..                0 =g= CAP(tec,n) - cap_lim(tec,n);
 172   
 173  energy_balance(t)..             0 =e= sum((tec,n),GEN(t,tec,n)) - sum(n,load(t,n));
 174   
 175  *KKT conditions
 176  KKT_GEN(t,tec,n)..              c_var(tec,n) + mu_G_max(t,tec,n) - mu_G_min(t,tec,n) - LAMBDA(t) =e= 0;
 177  KKT_CAP(tec,n)..                c_fix(tec,n) + INSTRUMENT(tec,n) + capacity_slope * CAP(tec,n) - sum(t,avail(t,tec,n) * mu_G_max(t,tec,n)) + mu_C_max(tec,n) - mu_C_min(tec,n) =e= 0;
 178   
 179  complementarity1a(t,tec,n)..    GEN(t,tec,n)        =L= y1(t,tec,n) * M1;
 180  complementarity1b(t,tec,n)..    mu_G_min(t,tec,n)   =L= (1-y1(t,tec,n)) * M1;
 181  complementarity2a(t,tec,n)..    CAP(tec,n) * avail(t,tec,n) - GEN(t,tec,n) =L= y2(t,tec,n) * M2;
 182  complementarity2b(t,tec,n)..    mu_G_max(t,tec,n)   =L= (1-y2(t,tec,n)) * M2;
 183  complementarity3a(tec,n)..      CAP(tec,n)          =L= y3(tec,n) * M3;
 184  complementarity3b(tec,n)..      mu_C_min(tec,n)     =L= (1-y3(tec,n)) * M3;
 185  complementarity4a(tec,n)..      cap_lim(tec,n) - CAP(tec,n) =L= y4(tec,n) * M4;
 186  complementarity4b(tec,n)..      mu_C_max(tec,n)     =L= (1-y4(tec,n)) * M4;
 187  complementarity5a(t)..          sum(n,load(t,n)) - sum((tec,n),GEN(t,tec,n)) =L= y5(t) * M5;
 188  complementarity5b(t)..          LAMBDA(t)           =L= (1-y5(t)) * M5;
 189   
 190  Model LOCI /
 191   
 192  objective
 193  nodal_energy_balance
 194   
 195  grid_eq1
 196  grid_eq2
 197  grid_eq3
 198  grid_eq4
 199   
 200  instr_const
 201   
 202  redispatch1
 203  redispatch2
 204   
 205  gen_min
 206  gen_max
 207  cap_min
 208  cap_max
 209   
 210  energy_balance
 211   
 212  KKT_GEN
 213  KKT_CAP
 214   
 215  complementarity1a
 216  complementarity1b
 217  complementarity2a
 218  complementarity2b
 219  complementarity3a
 220  complementarity3b
 221  complementarity4a
 222  complementarity4b
 223  complementarity5a
 224  complementarity5b
 225  /;
 226   
 227   
 228  GEN.up(t,tec,n) = 100;
 229  GEN.lo(t,tec,n) = 0;
 230   
 231  DOWN.up(t,tec,n) = 100;
 232  DOWN.lo(t,tec,n) = 0;
 233   
 234  UP.up(t,tec,n) = 100;
 235  UP.lo(t,tec,n) = 0;
 236   
 237  LOCI.nodlim = 25000000;
 238  LOCI.resLim = 40000;
 239   
 240  Option optcr = 0.05;
 241   
 242  Option MIQCP = Cplex;
 243   
 244   
 245  Solve LOCI minimizing COSTS using MIQCP;
 246   
 247   
 248  *price(t) = p_ref * (1-(1/elasticity) + (sum((tec,n), GEN.L(t,tec,n)) / sum(n, elasticity * load(t,n))));
 249  *load_deviation(t) = sum((tec,n), GEN.L(t,tec,n)) / sum(n,load(t,n));
 250  i_instrument(tec,n) = INSTRUMENT.L(tec,n) / sc / 1000;
 251   
 252  network_cost = (sum((n,m),(GRID_CAP.L(n,m) * grid_cost(n,m)) / 2) + sum((t,tec,n), UP.L(t,tec,n) * c_var(tec,n) - DOWN.L(t,tec,n) * c_var(tec,n))) / sc;
 253  *consumer_surplus = sum(t, p_ref * sum((n), LOAD_real.L(t,n)) * (1-1/elasticity + sum((n), LOAD_real.L(t,n)) / (2*elasticity* sum(n,load(t,n))))) / sc;
 254   
 255  generation_costs = (sum((tec,n), CAP.L(tec,n) * c_fix(tec,n) + 0.5 * CAP.L(tec,n) * CAP.L(tec,n) * capacity_slope) + sum((t,tec,n), GEN.L(t,tec,n) * c_var(tec,n))) / sc;
 256   
 257  *sum_instrument = sum((tec,n), INSTRUMENT.L(tec,n) * CAP.L(tec,n)) / sc;
 258   
 259  *load_deviation(t) = sum(n,LOAD_real.L(t,n)) / sum(n,load(t,n));
 260  res_share = 1 - sum((t,con,n), GEN.L(t,con,n)) / sum((t,tec,n), GEN.L(t,tec,n));
 261  o_cap(tec,n) = CAP.L(tec,n);
 262  o_gen(t,tec,n) = GEN.L(t,tec,n);
 263   
 264   
 265  Display GEN.L, CAP.L, network_cost, GRID_CAP.L, i_instrument;
 266   
 267  execute_UNLOAD 'test_with_instrument.gdx' generation_costs, network_cost, res_share, o_cap, o_gen, c_fix;

**** LIST OF STRAY NAMES - CHECK DECLARATIONS FOR SPURIOUS COMMAS
**** STRAY NAME demand_min OF TYPE EQU  
**** STRAY NAME KKT_load OF TYPE EQU  
**** STRAY NAME complementarity6a OF TYPE EQU  
**** STRAY NAME complementarity6b OF TYPE EQU  
GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows - 10/27/21 22:59:54 Page 2
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Include File Summary


   SEQ   GLOBAL TYPE      PARENT   LOCAL  FILENAME

     1        1 INPUT          0       0  C:\Users\a.eicke\Documents\Locational-investment-signals\Three node models\Cost minimization\Locational instrument.gms
     2       69 GDXIN          1      69  C:\Users\a.eicke\Documents\Locational-investment-signals\Three node models\Cost minimization\in.gdx


COMPILATION TIME     =        0.000 SECONDS      3 MB  30.3.0 rc5da09e WEX-WEI
GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows - 10/27/21 22:59:54 Page 3
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
E x e c u t i o n


----     83 PARAMETER c_var  variable costs (EUR per MWh)

           north       south

base      60.000      60.000
peak      80.000      80.000


----     83 PARAMETER load  hourly load in GWh

         north       south

1       15.533      36.243
2       17.065      34.647
3       15.186      41.060
4       21.224      49.522
5       21.433      52.474
6       22.448      52.378
7       20.422      52.512
8       24.444      45.396
9       24.781      48.104
10      21.190      49.444
11      20.720      42.068
12      20.172      37.461
13      16.869      29.988
14      18.546      30.260
15      20.102      39.022
16      27.601      39.719
17      23.764      44.134
18      23.438      45.498
19      21.522      45.735
20      19.314      45.067
21      21.009      42.655
22      19.848      42.178
23      17.854      39.740
24      14.759      34.437


----     83 PARAMETER avail  availability of wind and solar generation (1)

               north       south

1 .base        1.000       1.000
1 .peak        1.000       1.000
1 .wind        0.370       0.160
2 .base        1.000       1.000
2 .peak        1.000       1.000
2 .wind        0.350       0.180
3 .base        1.000       1.000
3 .peak        1.000       1.000
3 .wind        0.320       0.170
3 .solar       0.030
4 .base        1.000       1.000
4 .peak        1.000       1.000
4 .wind        0.310       0.140
4 .solar       0.120       0.020
5 .base        1.000       1.000
5 .peak        1.000       1.000
5 .wind        0.280       0.090
5 .solar       0.250       0.130
6 .base        1.000       1.000
6 .peak        1.000       1.000
6 .wind        0.270       0.100
6 .solar       0.310       0.230
7 .base        1.000       1.000
7 .peak        1.000       1.000
7 .wind        0.230       0.120
7 .solar       0.320       0.210
8 .base        1.000       1.000
8 .peak        1.000       1.000
8 .wind        0.240       0.140
8 .solar       0.260       0.120
9 .base        1.000       1.000
9 .peak        1.000       1.000
9 .wind        0.270       0.170
9 .solar       0.090       0.040
10.base        1.000       1.000
10.peak        1.000       1.000
10.wind        0.190       0.150
11.base        1.000       1.000
11.peak        1.000       1.000
11.wind        0.150       0.140
12.base        1.000       1.000
12.peak        1.000       1.000
12.wind        0.120       0.150
13.base        1.000       1.000
13.peak        1.000       1.000
13.wind        0.090       0.160
14.base        1.000       1.000
14.peak        1.000       1.000
14.wind        0.100       0.170
15.base        1.000       1.000
15.peak        1.000       1.000
15.wind        0.110       0.180
15.solar                   0.040
16.base        1.000       1.000
16.peak        1.000       1.000
16.wind        0.150       0.170
16.solar       0.010       0.180
17.base        1.000       1.000
17.peak        1.000       1.000
17.wind        0.130       0.150
17.solar       0.170       0.390
18.base        1.000       1.000
18.peak        1.000       1.000
18.wind        0.170       0.140
18.solar       0.280       0.490
19.base        1.000       1.000
19.peak        1.000       1.000
19.wind        0.210       0.150
19.solar       0.220       0.470
20.base        1.000       1.000
20.peak        1.000       1.000
20.wind        0.250       0.170
20.solar       0.030       0.380
21.base        1.000       1.000
21.peak        1.000       1.000
21.wind        0.290       0.180
21.solar                   0.150
22.base        1.000       1.000
22.peak        1.000       1.000
22.wind        0.220       0.180
22.solar                   0.010
23.base        1.000       1.000
23.peak        1.000       1.000
23.wind        0.190       0.220
24.base        1.000       1.000
24.peak        1.000       1.000
24.wind        0.210       0.250


----     83 PARAMETER c_fix  annualized fixed costs (EUR per MW p.a.)

            north       south

base      260.000     260.000
peak       88.000      88.000
wind      260.000     260.000
solar     137.000     137.000

GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows - 10/27/21 22:59:54 Page 4
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE LOCI Using MIQCP From line 245


---- objective  =E=  

objective..  - 60*GEN(1,base,north) - 60*GEN(1,base,south) - 80*GEN(1,peak,north) - 80*GEN(1,peak,south) - 60*GEN(2,base,north) - 60*GEN(2,base,south) - 80*GEN(2,peak,north) - 80*GEN(2,peak,south) - 60*GEN(3,base,north) - 60*GEN(3,base,south)
     
      - 80*GEN(3,peak,north) - 80*GEN(3,peak,south) - 60*GEN(4,base,north) - 60*GEN(4,base,south) - 80*GEN(4,peak,north) - 80*GEN(4,peak,south) - 60*GEN(5,base,north) - 60*GEN(5,base,south) - 80*GEN(5,peak,north) - 80*GEN(5,peak,south)
     
      - 60*GEN(6,base,north) - 60*GEN(6,base,south) - 80*GEN(6,peak,north) - 80*GEN(6,peak,south) - 60*GEN(7,base,north) - 60*GEN(7,base,south) - 80*GEN(7,peak,north) - 80*GEN(7,peak,south) - 60*GEN(8,base,north) - 60*GEN(8,base,south)
     
      - 80*GEN(8,peak,north) - 80*GEN(8,peak,south) - 60*GEN(9,base,north) - 60*GEN(9,base,south) - 80*GEN(9,peak,north) - 80*GEN(9,peak,south) - 60*GEN(10,base,north) - 60*GEN(10,base,south) - 80*GEN(10,peak,north) - 80*GEN(10,peak,south)
     
      - 60*GEN(11,base,north) - 60*GEN(11,base,south) - 80*GEN(11,peak,north) - 80*GEN(11,peak,south) - 60*GEN(12,base,north) - 60*GEN(12,base,south) - 80*GEN(12,peak,north) - 80*GEN(12,peak,south) - 60*GEN(13,base,north) - 60*GEN(13,base,south)
     
      - 80*GEN(13,peak,north) - 80*GEN(13,peak,south) - 60*GEN(14,base,north) - 60*GEN(14,base,south) - 80*GEN(14,peak,north) - 80*GEN(14,peak,south) - 60*GEN(15,base,north) - 60*GEN(15,base,south) - 80*GEN(15,peak,north) - 80*GEN(15,peak,south)
     
      - 60*GEN(16,base,north) - 60*GEN(16,base,south) - 80*GEN(16,peak,north) - 80*GEN(16,peak,south) - 60*GEN(17,base,north) - 60*GEN(17,base,south) - 80*GEN(17,peak,north) - 80*GEN(17,peak,south) - 60*GEN(18,base,north) - 60*GEN(18,base,south)
     
      - 80*GEN(18,peak,north) - 80*GEN(18,peak,south) - 60*GEN(19,base,north) - 60*GEN(19,base,south) - 80*GEN(19,peak,north) - 80*GEN(19,peak,south) - 60*GEN(20,base,north) - 60*GEN(20,base,south) - 80*GEN(20,peak,north) - 80*GEN(20,peak,south)
     
      - 60*GEN(21,base,north) - 60*GEN(21,base,south) - 80*GEN(21,peak,north) - 80*GEN(21,peak,south) - 60*GEN(22,base,north) - 60*GEN(22,base,south) - 80*GEN(22,peak,north) - 80*GEN(22,peak,south) - 60*GEN(23,base,north) - 60*GEN(23,base,south)
     
      - 80*GEN(23,peak,north) - 80*GEN(23,peak,south) - 60*GEN(24,base,north) - 60*GEN(24,base,south) - 80*GEN(24,peak,north) - 80*GEN(24,peak,south) - (260)*CAP(base,north) - (260)*CAP(base,south) - (88)*CAP(peak,north) - (88)*CAP(peak,south)
     
      - (260)*CAP(wind,north) - (260)*CAP(wind,south) - (137)*CAP(solar,north) - (137)*CAP(solar,south) + COSTS - 0.5*GRID_CAP(north,north) - 287.5*GRID_CAP(north,south) - 287.5*GRID_CAP(south,north) - 0.5*GRID_CAP(south,south) - 60*UP(1,base,north)
     
      - 60*UP(1,base,south) - 80*UP(1,peak,north) - 80*UP(1,peak,south) - 60*UP(2,base,north) - 60*UP(2,base,south) - 80*UP(2,peak,north) - 80*UP(2,peak,south) - 60*UP(3,base,north) - 60*UP(3,base,south) - 80*UP(3,peak,north) - 80*UP(3,peak,south)
     
      - 60*UP(4,base,north) - 60*UP(4,base,south) - 80*UP(4,peak,north) - 80*UP(4,peak,south) - 60*UP(5,base,north) - 60*UP(5,base,south) - 80*UP(5,peak,north) - 80*UP(5,peak,south) - 60*UP(6,base,north) - 60*UP(6,base,south) - 80*UP(6,peak,north)
     
      - 80*UP(6,peak,south) - 60*UP(7,base,north) - 60*UP(7,base,south) - 80*UP(7,peak,north) - 80*UP(7,peak,south) - 60*UP(8,base,north) - 60*UP(8,base,south) - 80*UP(8,peak,north) - 80*UP(8,peak,south) - 60*UP(9,base,north) - 60*UP(9,base,south)
     
      - 80*UP(9,peak,north) - 80*UP(9,peak,south) - 60*UP(10,base,north) - 60*UP(10,base,south) - 80*UP(10,peak,north) - 80*UP(10,peak,south) - 60*UP(11,base,north) - 60*UP(11,base,south) - 80*UP(11,peak,north) - 80*UP(11,peak,south)
     
      - 60*UP(12,base,north) - 60*UP(12,base,south) - 80*UP(12,peak,north) - 80*UP(12,peak,south) - 60*UP(13,base,north) - 60*UP(13,base,south) - 80*UP(13,peak,north) - 80*UP(13,peak,south) - 60*UP(14,base,north) - 60*UP(14,base,south)
     
      - 80*UP(14,peak,north) - 80*UP(14,peak,south) - 60*UP(15,base,north) - 60*UP(15,base,south) - 80*UP(15,peak,north) - 80*UP(15,peak,south) - 60*UP(16,base,north) - 60*UP(16,base,south) - 80*UP(16,peak,north) - 80*UP(16,peak,south)
     
      - 60*UP(17,base,north) - 60*UP(17,base,south) - 80*UP(17,peak,north) - 80*UP(17,peak,south) - 60*UP(18,base,north) - 60*UP(18,base,south) - 80*UP(18,peak,north) - 80*UP(18,peak,south) - 60*UP(19,base,north) - 60*UP(19,base,south)
     
      - 80*UP(19,peak,north) - 80*UP(19,peak,south) - 60*UP(20,base,north) - 60*UP(20,base,south) - 80*UP(20,peak,north) - 80*UP(20,peak,south) - 60*UP(21,base,north) - 60*UP(21,base,south) - 80*UP(21,peak,north) - 80*UP(21,peak,south)
     
      - 60*UP(22,base,north) - 60*UP(22,base,south) - 80*UP(22,peak,north) - 80*UP(22,peak,south) - 60*UP(23,base,north) - 60*UP(23,base,south) - 80*UP(23,peak,north) - 80*UP(23,peak,south) - 60*UP(24,base,north) - 60*UP(24,base,south)
     
      - 80*UP(24,peak,north) - 80*UP(24,peak,south) + 60*DOWN(1,base,north) + 60*DOWN(1,base,south) + 80*DOWN(1,peak,north) + 80*DOWN(1,peak,south) + 60*DOWN(2,base,north) + 60*DOWN(2,base,south) + 80*DOWN(2,peak,north) + 80*DOWN(2,peak,south)
     
      + 60*DOWN(3,base,north) + 60*DOWN(3,base,south) + 80*DOWN(3,peak,north) + 80*DOWN(3,peak,south) + 60*DOWN(4,base,north) + 60*DOWN(4,base,south) + 80*DOWN(4,peak,north) + 80*DOWN(4,peak,south) + 60*DOWN(5,base,north) + 60*DOWN(5,base,south)
     
      + 80*DOWN(5,peak,north) + 80*DOWN(5,peak,south) + 60*DOWN(6,base,north) + 60*DOWN(6,base,south) + 80*DOWN(6,peak,north) + 80*DOWN(6,peak,south) + 60*DOWN(7,base,north) + 60*DOWN(7,base,south) + 80*DOWN(7,peak,north) + 80*DOWN(7,peak,south)
     
      + 60*DOWN(8,base,north) + 60*DOWN(8,base,south) + 80*DOWN(8,peak,north) + 80*DOWN(8,peak,south) + 60*DOWN(9,base,north) + 60*DOWN(9,base,south) + 80*DOWN(9,peak,north) + 80*DOWN(9,peak,south) + 60*DOWN(10,base,north) + 60*DOWN(10,base,south)
     
      + 80*DOWN(10,peak,north) + 80*DOWN(10,peak,south) + 60*DOWN(11,base,north) + 60*DOWN(11,base,south) + 80*DOWN(11,peak,north) + 80*DOWN(11,peak,south) + 60*DOWN(12,base,north) + 60*DOWN(12,base,south) + 80*DOWN(12,peak,north) + 80*DOWN(12,peak,south)
     
      + 60*DOWN(13,base,north) + 60*DOWN(13,base,south) + 80*DOWN(13,peak,north) + 80*DOWN(13,peak,south) + 60*DOWN(14,base,north) + 60*DOWN(14,base,south) + 80*DOWN(14,peak,north) + 80*DOWN(14,peak,south) + 60*DOWN(15,base,north) + 60*DOWN(15,base,south)
     
      + 80*DOWN(15,peak,north) + 80*DOWN(15,peak,south) + 60*DOWN(16,base,north) + 60*DOWN(16,base,south) + 80*DOWN(16,peak,north) + 80*DOWN(16,peak,south) + 60*DOWN(17,base,north) + 60*DOWN(17,base,south) + 80*DOWN(17,peak,north) + 80*DOWN(17,peak,south)
     
      + 60*DOWN(18,base,north) + 60*DOWN(18,base,south) + 80*DOWN(18,peak,north) + 80*DOWN(18,peak,south) + 60*DOWN(19,base,north) + 60*DOWN(19,base,south) + 80*DOWN(19,peak,north) + 80*DOWN(19,peak,south) + 60*DOWN(20,base,north) + 60*DOWN(20,base,south)
     
      + 80*DOWN(20,peak,north) + 80*DOWN(20,peak,south) + 60*DOWN(21,base,north) + 60*DOWN(21,base,south) + 80*DOWN(21,peak,north) + 80*DOWN(21,peak,south) + 60*DOWN(22,base,north) + 60*DOWN(22,base,south) + 80*DOWN(22,peak,north) + 80*DOWN(22,peak,south)
     
      + 60*DOWN(23,base,north) + 60*DOWN(23,base,south) + 80*DOWN(23,peak,north) + 80*DOWN(23,peak,south) + 60*DOWN(24,base,north) + 60*DOWN(24,base,south) + 80*DOWN(24,peak,north) + 80*DOWN(24,peak,south) =E= 0 ; (LHS = 0)
     

---- nodal_energy_balance  =E=  

nodal_energy_balance(1,north)..  GEN(1,base,north) + GEN(1,peak,north) + GEN(1,wind,north) + GEN(1,solar,north) - FLOW(1,north,north) - FLOW(1,north,south) + UP(1,base,north) + UP(1,peak,north) + UP(1,wind,north) + UP(1,solar,north) - DOWN(1,base,north)
     
      - DOWN(1,peak,north) - DOWN(1,wind,north) - DOWN(1,solar,north) =E= 15.5328 ; (LHS = 0, INFES = 15.5328 ****)
     
nodal_energy_balance(1,south)..  GEN(1,base,south) + GEN(1,peak,south) + GEN(1,wind,south) + GEN(1,solar,south) - FLOW(1,south,north) - FLOW(1,south,south) + UP(1,base,south) + UP(1,peak,south) + UP(1,wind,south) + UP(1,solar,south) - DOWN(1,base,south)
     
      - DOWN(1,peak,south) - DOWN(1,wind,south) - DOWN(1,solar,south) =E= 36.2432 ; (LHS = 0, INFES = 36.2432 ****)
     
nodal_energy_balance(2,north)..  GEN(2,base,north) + GEN(2,peak,north) + GEN(2,wind,north) + GEN(2,solar,north) - FLOW(2,north,north) - FLOW(2,north,south) + UP(2,base,north) + UP(2,peak,north) + UP(2,wind,north) + UP(2,solar,north) - DOWN(2,base,north)
     
      - DOWN(2,peak,north) - DOWN(2,wind,north) - DOWN(2,solar,north) =E= 17.06496 ; (LHS = 0, INFES = 17.06496 ****)
     
REMAINING 45 ENTRIES SKIPPED


---- grid_eq1  =L=  

grid_eq1(1,north,north)..  FLOW(1,north,north) - GRID_CAP(north,north) =L= 0 ; (LHS = 0)
     
grid_eq1(1,north,south)..  FLOW(1,north,south) - GRID_CAP(north,south) =L= 0 ; (LHS = 0)
     
grid_eq1(1,south,north)..  FLOW(1,south,north) - GRID_CAP(south,north) =L= 0 ; (LHS = 0)
     
REMAINING 93 ENTRIES SKIPPED


---- grid_eq2  =E=  

grid_eq2(north,south)..  GRID_CAP(north,south) - GRID_CAP(south,north) =E= 0 ; (LHS = 0)
     
grid_eq2(south,north)..  - GRID_CAP(north,south) + GRID_CAP(south,north) =E= 0 ; (LHS = 0)
     

---- grid_eq3  =E=  

grid_eq3(1,north,north)..  FLOW(1,north,north) =E= 0 ; (LHS = 0)
     
grid_eq3(1,north,south)..  FLOW(1,north,south) - 700*THETA(1,north) + 700*THETA(1,south) =E= 0 ; (LHS = 0)
     
grid_eq3(1,south,north)..  FLOW(1,south,north) + 700*THETA(1,north) - 700*THETA(1,south) =E= 0 ; (LHS = 0)
     
REMAINING 93 ENTRIES SKIPPED


---- grid_eq4  =E=  

grid_eq4(1,north)..  THETA(1,south) =E= 0 ; (LHS = 0)
     
grid_eq4(1,south)..  THETA(1,south) =E= 0 ; (LHS = 0)
     
grid_eq4(2,north)..  THETA(2,south) =E= 0 ; (LHS = 0)
     
REMAINING 45 ENTRIES SKIPPED


---- instr_const  =E=  

instr_const(base,north)..  INSTRUMENT(base,north) =E= 0 ; (LHS = 0)
     
instr_const(base,south)..  INSTRUMENT(base,south) =E= 0 ; (LHS = 0)
     
instr_const(peak,north)..  INSTRUMENT(peak,north) =E= 0 ; (LHS = 0)
     
REMAINING 5 ENTRIES SKIPPED


---- redispatch1  =L=  

redispatch1(1,base,north)..  - GEN(1,base,north) + DOWN(1,base,north) =L= 0 ; (LHS = 0)
     
redispatch1(1,base,south)..  - GEN(1,base,south) + DOWN(1,base,south) =L= 0 ; (LHS = 0)
     
redispatch1(1,peak,north)..  - GEN(1,peak,north) + DOWN(1,peak,north) =L= 0 ; (LHS = 0)
     
REMAINING 189 ENTRIES SKIPPED


---- redispatch2  =L=  

redispatch2(1,base,north)..  GEN(1,base,north) - CAP(base,north) + UP(1,base,north) =L= 0 ; (LHS = 0)
     
redispatch2(1,base,south)..  GEN(1,base,south) - CAP(base,south) + UP(1,base,south) =L= 0 ; (LHS = 0)
     
redispatch2(1,peak,north)..  GEN(1,peak,north) - CAP(peak,north) + UP(1,peak,north) =L= 0 ; (LHS = 0)
     
REMAINING 189 ENTRIES SKIPPED


---- gen_min  =G=  

gen_min(1,base,north)..  GEN(1,base,north) =G= 0 ; (LHS = 0)
     
gen_min(1,base,south)..  GEN(1,base,south) =G= 0 ; (LHS = 0)
     
gen_min(1,peak,north)..  GEN(1,peak,north) =G= 0 ; (LHS = 0)
     
REMAINING 189 ENTRIES SKIPPED


---- gen_max  =G=  

gen_max(1,base,north)..  - GEN(1,base,north) + CAP(base,north) =G= 0 ; (LHS = 0)
     
gen_max(1,base,south)..  - GEN(1,base,south) + CAP(base,south) =G= 0 ; (LHS = 0)
     
gen_max(1,peak,north)..  - GEN(1,peak,north) + CAP(peak,north) =G= 0 ; (LHS = 0)
     
REMAINING 189 ENTRIES SKIPPED


---- cap_min  =G=  

cap_min(base,north)..  CAP(base,north) =G= 0 ; (LHS = 0)
     
cap_min(base,south)..  CAP(base,south) =G= 0 ; (LHS = 0)
     
cap_min(peak,north)..  CAP(peak,north) =G= 0 ; (LHS = 0)
     
REMAINING 5 ENTRIES SKIPPED


---- cap_max  =G=  

cap_max(base,north)..  - CAP(base,north) =G= -100 ; (LHS = 0)
     
cap_max(base,south)..  - CAP(base,south) =G= -100 ; (LHS = 0)
     
cap_max(peak,north)..  - CAP(peak,north) =G= -100 ; (LHS = 0)
     
REMAINING 5 ENTRIES SKIPPED


---- energy_balance  =E=  

energy_balance(1)..  - GEN(1,base,north) - GEN(1,base,south) - GEN(1,peak,north) - GEN(1,peak,south) - GEN(1,wind,north) - GEN(1,wind,south) - GEN(1,solar,north) - GEN(1,solar,south) =E= -51.776 ; (LHS = 0, INFES = 51.776 ****)
     
energy_balance(2)..  - GEN(2,base,north) - GEN(2,base,south) - GEN(2,peak,north) - GEN(2,peak,south) - GEN(2,wind,north) - GEN(2,wind,south) - GEN(2,solar,north) - GEN(2,solar,south) =E= -51.712 ; (LHS = 0, INFES = 51.712 ****)
     
energy_balance(3)..  - GEN(3,base,north) - GEN(3,base,south) - GEN(3,peak,north) - GEN(3,peak,south) - GEN(3,wind,north) - GEN(3,wind,south) - GEN(3,solar,north) - GEN(3,solar,south) =E= -56.246 ; (LHS = 0, INFES = 56.246 ****)
     
REMAINING 21 ENTRIES SKIPPED


---- KKT_GEN  =E=  

KKT_GEN(1,base,north)..  - LAMBDA(1) - mu_G_min(1,base,north) + mu_G_max(1,base,north) =E= -60 ; (LHS = 0, INFES = 60 ****)
     
KKT_GEN(1,base,south)..  - LAMBDA(1) - mu_G_min(1,base,south) + mu_G_max(1,base,south) =E= -60 ; (LHS = 0, INFES = 60 ****)
     
KKT_GEN(1,peak,north)..  - LAMBDA(1) - mu_G_min(1,peak,north) + mu_G_max(1,peak,north) =E= -80 ; (LHS = 0, INFES = 80 ****)
     
REMAINING 189 ENTRIES SKIPPED


---- KKT_CAP  =E=  

KKT_CAP(base,north)..  0.15*CAP(base,north) + INSTRUMENT(base,north) - mu_G_max(1,base,north) - mu_G_max(2,base,north) - mu_G_max(3,base,north) - mu_G_max(4,base,north) - mu_G_max(5,base,north) - mu_G_max(6,base,north) - mu_G_max(7,base,north)
     
      - mu_G_max(8,base,north) - mu_G_max(9,base,north) - mu_G_max(10,base,north) - mu_G_max(11,base,north) - mu_G_max(12,base,north) - mu_G_max(13,base,north) - mu_G_max(14,base,north) - mu_G_max(15,base,north) - mu_G_max(16,base,north)
     
      - mu_G_max(17,base,north) - mu_G_max(18,base,north) - mu_G_max(19,base,north) - mu_G_max(20,base,north) - mu_G_max(21,base,north) - mu_G_max(22,base,north) - mu_G_max(23,base,north) - mu_G_max(24,base,north) - mu_C_min(base,north)
     
      + mu_C_max(base,north) =E= -260 ; (LHS = 0, INFES = 260 ****)
     
KKT_CAP(base,south)..  0.15*CAP(base,south) + INSTRUMENT(base,south) - mu_G_max(1,base,south) - mu_G_max(2,base,south) - mu_G_max(3,base,south) - mu_G_max(4,base,south) - mu_G_max(5,base,south) - mu_G_max(6,base,south) - mu_G_max(7,base,south)
     
      - mu_G_max(8,base,south) - mu_G_max(9,base,south) - mu_G_max(10,base,south) - mu_G_max(11,base,south) - mu_G_max(12,base,south) - mu_G_max(13,base,south) - mu_G_max(14,base,south) - mu_G_max(15,base,south) - mu_G_max(16,base,south)
     
      - mu_G_max(17,base,south) - mu_G_max(18,base,south) - mu_G_max(19,base,south) - mu_G_max(20,base,south) - mu_G_max(21,base,south) - mu_G_max(22,base,south) - mu_G_max(23,base,south) - mu_G_max(24,base,south) - mu_C_min(base,south)
     
      + mu_C_max(base,south) =E= -260 ; (LHS = 0, INFES = 260 ****)
     
KKT_CAP(peak,north)..  0.15*CAP(peak,north) + INSTRUMENT(peak,north) - mu_G_max(1,peak,north) - mu_G_max(2,peak,north) - mu_G_max(3,peak,north) - mu_G_max(4,peak,north) - mu_G_max(5,peak,north) - mu_G_max(6,peak,north) - mu_G_max(7,peak,north)
     
      - mu_G_max(8,peak,north) - mu_G_max(9,peak,north) - mu_G_max(10,peak,north) - mu_G_max(11,peak,north) - mu_G_max(12,peak,north) - mu_G_max(13,peak,north) - mu_G_max(14,peak,north) - mu_G_max(15,peak,north) - mu_G_max(16,peak,north)
     
      - mu_G_max(17,peak,north) - mu_G_max(18,peak,north) - mu_G_max(19,peak,north) - mu_G_max(20,peak,north) - mu_G_max(21,peak,north) - mu_G_max(22,peak,north) - mu_G_max(23,peak,north) - mu_G_max(24,peak,north) - mu_C_min(peak,north)
     
      + mu_C_max(peak,north) =E= -88 ; (LHS = 0, INFES = 88 ****)
     
REMAINING 5 ENTRIES SKIPPED


---- complementarity1a  =L=  

complementarity1a(1,base,north)..  - 100000*y1(1,base,north) + GEN(1,base,north) =L= 0 ; (LHS = 0)
     
complementarity1a(1,base,south)..  - 100000*y1(1,base,south) + GEN(1,base,south) =L= 0 ; (LHS = 0)
     
complementarity1a(1,peak,north)..  - 100000*y1(1,peak,north) + GEN(1,peak,north) =L= 0 ; (LHS = 0)
     
REMAINING 189 ENTRIES SKIPPED


---- complementarity1b  =L=  

complementarity1b(1,base,north)..  100000*y1(1,base,north) + mu_G_min(1,base,north) =L= 100000 ; (LHS = 0)
     
complementarity1b(1,base,south)..  100000*y1(1,base,south) + mu_G_min(1,base,south) =L= 100000 ; (LHS = 0)
     
complementarity1b(1,peak,north)..  100000*y1(1,peak,north) + mu_G_min(1,peak,north) =L= 100000 ; (LHS = 0)
     
REMAINING 189 ENTRIES SKIPPED


---- complementarity2a  =L=  

complementarity2a(1,base,north)..  - 100000*y2(1,base,north) - GEN(1,base,north) + CAP(base,north) =L= 0 ; (LHS = 0)
     
complementarity2a(1,base,south)..  - 100000*y2(1,base,south) - GEN(1,base,south) + CAP(base,south) =L= 0 ; (LHS = 0)
     
complementarity2a(1,peak,north)..  - 100000*y2(1,peak,north) - GEN(1,peak,north) + CAP(peak,north) =L= 0 ; (LHS = 0)
     
REMAINING 189 ENTRIES SKIPPED


---- complementarity2b  =L=  

complementarity2b(1,base,north)..  100000*y2(1,base,north) + mu_G_max(1,base,north) =L= 100000 ; (LHS = 0)
     
complementarity2b(1,base,south)..  100000*y2(1,base,south) + mu_G_max(1,base,south) =L= 100000 ; (LHS = 0)
     
complementarity2b(1,peak,north)..  100000*y2(1,peak,north) + mu_G_max(1,peak,north) =L= 100000 ; (LHS = 0)
     
REMAINING 189 ENTRIES SKIPPED


---- complementarity3a  =L=  

complementarity3a(base,north)..  - 100000*y3(base,north) + CAP(base,north) =L= 0 ; (LHS = 0)
     
complementarity3a(base,south)..  - 100000*y3(base,south) + CAP(base,south) =L= 0 ; (LHS = 0)
     
complementarity3a(peak,north)..  - 100000*y3(peak,north) + CAP(peak,north) =L= 0 ; (LHS = 0)
     
REMAINING 5 ENTRIES SKIPPED


---- complementarity3b  =L=  

complementarity3b(base,north)..  100000*y3(base,north) + mu_C_min(base,north) =L= 100000 ; (LHS = 0)
     
complementarity3b(base,south)..  100000*y3(base,south) + mu_C_min(base,south) =L= 100000 ; (LHS = 0)
     
complementarity3b(peak,north)..  100000*y3(peak,north) + mu_C_min(peak,north) =L= 100000 ; (LHS = 0)
     
REMAINING 5 ENTRIES SKIPPED


---- complementarity4a  =L=  

complementarity4a(base,north)..  - 100000*y4(base,north) - CAP(base,north) =L= -100 ; (LHS = 0, INFES = 100 ****)
     
complementarity4a(base,south)..  - 100000*y4(base,south) - CAP(base,south) =L= -100 ; (LHS = 0, INFES = 100 ****)
     
complementarity4a(peak,north)..  - 100000*y4(peak,north) - CAP(peak,north) =L= -100 ; (LHS = 0, INFES = 100 ****)
     
REMAINING 5 ENTRIES SKIPPED


---- complementarity4b  =L=  

complementarity4b(base,north)..  100000*y4(base,north) + mu_C_max(base,north) =L= 100000 ; (LHS = 0)
     
complementarity4b(base,south)..  100000*y4(base,south) + mu_C_max(base,south) =L= 100000 ; (LHS = 0)
     
complementarity4b(peak,north)..  100000*y4(peak,north) + mu_C_max(peak,north) =L= 100000 ; (LHS = 0)
     
REMAINING 5 ENTRIES SKIPPED


---- complementarity5a  =L=  

complementarity5a(1)..  - 100000*y5(1) - GEN(1,base,north) - GEN(1,base,south) - GEN(1,peak,north) - GEN(1,peak,south) - GEN(1,wind,north) - GEN(1,wind,south) - GEN(1,solar,north) - GEN(1,solar,south) =L= -51.776 ; (LHS = 0, INFES = 51.776 ****)
     
complementarity5a(2)..  - 100000*y5(2) - GEN(2,base,north) - GEN(2,base,south) - GEN(2,peak,north) - GEN(2,peak,south) - GEN(2,wind,north) - GEN(2,wind,south) - GEN(2,solar,north) - GEN(2,solar,south) =L= -51.712 ; (LHS = 0, INFES = 51.712 ****)
     
complementarity5a(3)..  - 100000*y5(3) - GEN(3,base,north) - GEN(3,base,south) - GEN(3,peak,north) - GEN(3,peak,south) - GEN(3,wind,north) - GEN(3,wind,south) - GEN(3,solar,north) - GEN(3,solar,south) =L= -56.246 ; (LHS = 0, INFES = 56.246 ****)
     
REMAINING 21 ENTRIES SKIPPED


---- complementarity5b  =L=  

complementarity5b(1)..  100000*y5(1) + LAMBDA(1) =L= 100000 ; (LHS = 0)
     
complementarity5b(2)..  100000*y5(2) + LAMBDA(2) =L= 100000 ; (LHS = 0)
     
complementarity5b(3)..  100000*y5(3) + LAMBDA(3) =L= 100000 ; (LHS = 0)
     
REMAINING 21 ENTRIES SKIPPED

GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows - 10/27/21 22:59:54 Page 5
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE LOCI Using MIQCP From line 245


---- y1  

y1(1,base,north)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
  -100000       complementarity1a(1,base,north)
   100000       complementarity1b(1,base,north)

y1(1,base,south)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
  -100000       complementarity1a(1,base,south)
   100000       complementarity1b(1,base,south)

y1(1,peak,north)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
  -100000       complementarity1a(1,peak,north)
   100000       complementarity1b(1,peak,north)

REMAINING 189 ENTRIES SKIPPED

---- y2  

y2(1,base,north)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
  -100000       complementarity2a(1,base,north)
   100000       complementarity2b(1,base,north)

y2(1,base,south)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
  -100000       complementarity2a(1,base,south)
   100000       complementarity2b(1,base,south)

y2(1,peak,north)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
  -100000       complementarity2a(1,peak,north)
   100000       complementarity2b(1,peak,north)

REMAINING 189 ENTRIES SKIPPED

---- y3  

y3(base,north)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
  -100000       complementarity3a(base,north)
   100000       complementarity3b(base,north)

y3(base,south)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
  -100000       complementarity3a(base,south)
   100000       complementarity3b(base,south)

y3(peak,north)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
  -100000       complementarity3a(peak,north)
   100000       complementarity3b(peak,north)

REMAINING 5 ENTRIES SKIPPED

---- y4  

y4(base,north)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
  -100000       complementarity4a(base,north)
   100000       complementarity4b(base,north)

y4(base,south)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
  -100000       complementarity4a(base,south)
   100000       complementarity4b(base,south)

y4(peak,north)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
  -100000       complementarity4a(peak,north)
   100000       complementarity4b(peak,north)

REMAINING 5 ENTRIES SKIPPED

---- y5  

y5(1)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
  -100000       complementarity5a(1)
   100000       complementarity5b(1)

y5(2)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
  -100000       complementarity5a(2)
   100000       complementarity5b(2)

y5(3)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
  -100000       complementarity5a(3)
   100000       complementarity5b(3)

REMAINING 21 ENTRIES SKIPPED

---- GEN  

GEN(1,base,north)
                (.LO, .L, .UP, .M = 0, 0, 100, 0)
      -60       objective
        1       nodal_energy_balance(1,north)
       -1       redispatch1(1,base,north)
        1       redispatch2(1,base,north)
        1       gen_min(1,base,north)
       -1       gen_max(1,base,north)
       -1       energy_balance(1)
        1       complementarity1a(1,base,north)
       -1       complementarity2a(1,base,north)
       -1       complementarity5a(1)

GEN(1,base,south)
                (.LO, .L, .UP, .M = 0, 0, 100, 0)
      -60       objective
        1       nodal_energy_balance(1,south)
       -1       redispatch1(1,base,south)
        1       redispatch2(1,base,south)
        1       gen_min(1,base,south)
       -1       gen_max(1,base,south)
       -1       energy_balance(1)
        1       complementarity1a(1,base,south)
       -1       complementarity2a(1,base,south)
       -1       complementarity5a(1)

GEN(1,peak,north)
                (.LO, .L, .UP, .M = 0, 0, 100, 0)
      -80       objective
        1       nodal_energy_balance(1,north)
       -1       redispatch1(1,peak,north)
        1       redispatch2(1,peak,north)
        1       gen_min(1,peak,north)
       -1       gen_max(1,peak,north)
       -1       energy_balance(1)
        1       complementarity1a(1,peak,north)
       -1       complementarity2a(1,peak,north)
       -1       complementarity5a(1)

REMAINING 189 ENTRIES SKIPPED

---- CAP  

CAP(base,north)
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
    (-260)      objective
       -1       redispatch2(1,base,north)
       -1       redispatch2(2,base,north)
       -1       redispatch2(3,base,north)
       -1       redispatch2(4,base,north)
       -1       redispatch2(5,base,north)
       -1       redispatch2(6,base,north)
       -1       redispatch2(7,base,north)
       -1       redispatch2(8,base,north)
       -1       redispatch2(9,base,north)
       -1       redispatch2(10,base,north)
       -1       redispatch2(11,base,north)
       -1       redispatch2(12,base,north)
       -1       redispatch2(13,base,north)
       -1       redispatch2(14,base,north)
       -1       redispatch2(15,base,north)
       -1       redispatch2(16,base,north)
       -1       redispatch2(17,base,north)
       -1       redispatch2(18,base,north)
       -1       redispatch2(19,base,north)
       -1       redispatch2(20,base,north)
       -1       redispatch2(21,base,north)
       -1       redispatch2(22,base,north)
       -1       redispatch2(23,base,north)
       -1       redispatch2(24,base,north)
        1       gen_max(1,base,north)
        1       gen_max(2,base,north)
        1       gen_max(3,base,north)
        1       gen_max(4,base,north)
        1       gen_max(5,base,north)
        1       gen_max(6,base,north)
        1       gen_max(7,base,north)
        1       gen_max(8,base,north)
        1       gen_max(9,base,north)
        1       gen_max(10,base,north)
        1       gen_max(11,base,north)
        1       gen_max(12,base,north)
        1       gen_max(13,base,north)
        1       gen_max(14,base,north)
        1       gen_max(15,base,north)
        1       gen_max(16,base,north)
        1       gen_max(17,base,north)
        1       gen_max(18,base,north)
        1       gen_max(19,base,north)
        1       gen_max(20,base,north)
        1       gen_max(21,base,north)
        1       gen_max(22,base,north)
        1       gen_max(23,base,north)
        1       gen_max(24,base,north)
        1       cap_min(base,north)
       -1       cap_max(base,north)
        0.15    KKT_CAP(base,north)
        1       complementarity2a(1,base,north)
        1       complementarity2a(2,base,north)
        1       complementarity2a(3,base,north)
        1       complementarity2a(4,base,north)
        1       complementarity2a(5,base,north)
        1       complementarity2a(6,base,north)
        1       complementarity2a(7,base,north)
        1       complementarity2a(8,base,north)
        1       complementarity2a(9,base,north)
        1       complementarity2a(10,base,north)
        1       complementarity2a(11,base,north)
        1       complementarity2a(12,base,north)
        1       complementarity2a(13,base,north)
        1       complementarity2a(14,base,north)
        1       complementarity2a(15,base,north)
        1       complementarity2a(16,base,north)
        1       complementarity2a(17,base,north)
        1       complementarity2a(18,base,north)
        1       complementarity2a(19,base,north)
        1       complementarity2a(20,base,north)
        1       complementarity2a(21,base,north)
        1       complementarity2a(22,base,north)
        1       complementarity2a(23,base,north)
        1       complementarity2a(24,base,north)
        1       complementarity3a(base,north)
       -1       complementarity4a(base,north)

CAP(base,south)
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
    (-260)      objective
       -1       redispatch2(1,base,south)
       -1       redispatch2(2,base,south)
       -1       redispatch2(3,base,south)
       -1       redispatch2(4,base,south)
       -1       redispatch2(5,base,south)
       -1       redispatch2(6,base,south)
       -1       redispatch2(7,base,south)
       -1       redispatch2(8,base,south)
       -1       redispatch2(9,base,south)
       -1       redispatch2(10,base,south)
       -1       redispatch2(11,base,south)
       -1       redispatch2(12,base,south)
       -1       redispatch2(13,base,south)
       -1       redispatch2(14,base,south)
       -1       redispatch2(15,base,south)
       -1       redispatch2(16,base,south)
       -1       redispatch2(17,base,south)
       -1       redispatch2(18,base,south)
       -1       redispatch2(19,base,south)
       -1       redispatch2(20,base,south)
       -1       redispatch2(21,base,south)
       -1       redispatch2(22,base,south)
       -1       redispatch2(23,base,south)
       -1       redispatch2(24,base,south)
        1       gen_max(1,base,south)
        1       gen_max(2,base,south)
        1       gen_max(3,base,south)
        1       gen_max(4,base,south)
        1       gen_max(5,base,south)
        1       gen_max(6,base,south)
        1       gen_max(7,base,south)
        1       gen_max(8,base,south)
        1       gen_max(9,base,south)
        1       gen_max(10,base,south)
        1       gen_max(11,base,south)
        1       gen_max(12,base,south)
        1       gen_max(13,base,south)
        1       gen_max(14,base,south)
        1       gen_max(15,base,south)
        1       gen_max(16,base,south)
        1       gen_max(17,base,south)
        1       gen_max(18,base,south)
        1       gen_max(19,base,south)
        1       gen_max(20,base,south)
        1       gen_max(21,base,south)
        1       gen_max(22,base,south)
        1       gen_max(23,base,south)
        1       gen_max(24,base,south)
        1       cap_min(base,south)
       -1       cap_max(base,south)
        0.15    KKT_CAP(base,south)
        1       complementarity2a(1,base,south)
        1       complementarity2a(2,base,south)
        1       complementarity2a(3,base,south)
        1       complementarity2a(4,base,south)
        1       complementarity2a(5,base,south)
        1       complementarity2a(6,base,south)
        1       complementarity2a(7,base,south)
        1       complementarity2a(8,base,south)
        1       complementarity2a(9,base,south)
        1       complementarity2a(10,base,south)
        1       complementarity2a(11,base,south)
        1       complementarity2a(12,base,south)
        1       complementarity2a(13,base,south)
        1       complementarity2a(14,base,south)
        1       complementarity2a(15,base,south)
        1       complementarity2a(16,base,south)
        1       complementarity2a(17,base,south)
        1       complementarity2a(18,base,south)
        1       complementarity2a(19,base,south)
        1       complementarity2a(20,base,south)
        1       complementarity2a(21,base,south)
        1       complementarity2a(22,base,south)
        1       complementarity2a(23,base,south)
        1       complementarity2a(24,base,south)
        1       complementarity3a(base,south)
       -1       complementarity4a(base,south)

CAP(peak,north)
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
     (-88)      objective
       -1       redispatch2(1,peak,north)
       -1       redispatch2(2,peak,north)
       -1       redispatch2(3,peak,north)
       -1       redispatch2(4,peak,north)
       -1       redispatch2(5,peak,north)
       -1       redispatch2(6,peak,north)
       -1       redispatch2(7,peak,north)
       -1       redispatch2(8,peak,north)
       -1       redispatch2(9,peak,north)
       -1       redispatch2(10,peak,north)
       -1       redispatch2(11,peak,north)
       -1       redispatch2(12,peak,north)
       -1       redispatch2(13,peak,north)
       -1       redispatch2(14,peak,north)
       -1       redispatch2(15,peak,north)
       -1       redispatch2(16,peak,north)
       -1       redispatch2(17,peak,north)
       -1       redispatch2(18,peak,north)
       -1       redispatch2(19,peak,north)
       -1       redispatch2(20,peak,north)
       -1       redispatch2(21,peak,north)
       -1       redispatch2(22,peak,north)
       -1       redispatch2(23,peak,north)
       -1       redispatch2(24,peak,north)
        1       gen_max(1,peak,north)
        1       gen_max(2,peak,north)
        1       gen_max(3,peak,north)
        1       gen_max(4,peak,north)
        1       gen_max(5,peak,north)
        1       gen_max(6,peak,north)
        1       gen_max(7,peak,north)
        1       gen_max(8,peak,north)
        1       gen_max(9,peak,north)
        1       gen_max(10,peak,north)
        1       gen_max(11,peak,north)
        1       gen_max(12,peak,north)
        1       gen_max(13,peak,north)
        1       gen_max(14,peak,north)
        1       gen_max(15,peak,north)
        1       gen_max(16,peak,north)
        1       gen_max(17,peak,north)
        1       gen_max(18,peak,north)
        1       gen_max(19,peak,north)
        1       gen_max(20,peak,north)
        1       gen_max(21,peak,north)
        1       gen_max(22,peak,north)
        1       gen_max(23,peak,north)
        1       gen_max(24,peak,north)
        1       cap_min(peak,north)
       -1       cap_max(peak,north)
        0.15    KKT_CAP(peak,north)
        1       complementarity2a(1,peak,north)
        1       complementarity2a(2,peak,north)
        1       complementarity2a(3,peak,north)
        1       complementarity2a(4,peak,north)
        1       complementarity2a(5,peak,north)
        1       complementarity2a(6,peak,north)
        1       complementarity2a(7,peak,north)
        1       complementarity2a(8,peak,north)
        1       complementarity2a(9,peak,north)
        1       complementarity2a(10,peak,north)
        1       complementarity2a(11,peak,north)
        1       complementarity2a(12,peak,north)
        1       complementarity2a(13,peak,north)
        1       complementarity2a(14,peak,north)
        1       complementarity2a(15,peak,north)
        1       complementarity2a(16,peak,north)
        1       complementarity2a(17,peak,north)
        1       complementarity2a(18,peak,north)
        1       complementarity2a(19,peak,north)
        1       complementarity2a(20,peak,north)
        1       complementarity2a(21,peak,north)
        1       complementarity2a(22,peak,north)
        1       complementarity2a(23,peak,north)
        1       complementarity2a(24,peak,north)
        1       complementarity3a(peak,north)
       -1       complementarity4a(peak,north)

REMAINING 5 ENTRIES SKIPPED

---- COSTS  

COSTS
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
        1       objective


---- FLOW  

FLOW(1,north,north)
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
       -1       nodal_energy_balance(1,north)
        1       grid_eq1(1,north,north)
        1       grid_eq3(1,north,north)

FLOW(1,north,south)
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
       -1       nodal_energy_balance(1,north)
        1       grid_eq1(1,north,south)
        1       grid_eq3(1,north,south)

FLOW(1,south,north)
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
       -1       nodal_energy_balance(1,south)
        1       grid_eq1(1,south,north)
        1       grid_eq3(1,south,north)

REMAINING 93 ENTRIES SKIPPED

---- INSTRUMENT  

INSTRUMENT(base,north)
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
        1       instr_const(base,north)
        1       KKT_CAP(base,north)

INSTRUMENT(base,south)
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
        1       instr_const(base,south)
        1       KKT_CAP(base,south)

INSTRUMENT(peak,north)
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
        1       instr_const(peak,north)
        1       KKT_CAP(peak,north)

REMAINING 5 ENTRIES SKIPPED

---- THETA  

THETA(1,north)
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
     -700       grid_eq3(1,north,south)
      700       grid_eq3(1,south,north)

THETA(1,south)
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
      700       grid_eq3(1,north,south)
     -700       grid_eq3(1,south,north)
        1       grid_eq4(1,north)
        1       grid_eq4(1,south)

THETA(2,north)
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
     -700       grid_eq3(2,north,south)
      700       grid_eq3(2,south,north)

REMAINING 45 ENTRIES SKIPPED

---- LAMBDA  

LAMBDA(1)
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
       -1       KKT_GEN(1,base,north)
       -1       KKT_GEN(1,base,south)
       -1       KKT_GEN(1,peak,north)
       -1       KKT_GEN(1,peak,south)
       -1       KKT_GEN(1,wind,north)
       -1       KKT_GEN(1,wind,south)
       -1       KKT_GEN(1,solar,north)
       -1       KKT_GEN(1,solar,south)
        1       complementarity5b(1)

LAMBDA(2)
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
       -1       KKT_GEN(2,base,north)
       -1       KKT_GEN(2,base,south)
       -1       KKT_GEN(2,peak,north)
       -1       KKT_GEN(2,peak,south)
       -1       KKT_GEN(2,wind,north)
       -1       KKT_GEN(2,wind,south)
       -1       KKT_GEN(2,solar,north)
       -1       KKT_GEN(2,solar,south)
        1       complementarity5b(2)

LAMBDA(3)
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
       -1       KKT_GEN(3,base,north)
       -1       KKT_GEN(3,base,south)
       -1       KKT_GEN(3,peak,north)
       -1       KKT_GEN(3,peak,south)
       -1       KKT_GEN(3,wind,north)
       -1       KKT_GEN(3,wind,south)
       -1       KKT_GEN(3,solar,north)
       -1       KKT_GEN(3,solar,south)
        1       complementarity5b(3)

REMAINING 21 ENTRIES SKIPPED

---- mu_G_min  

mu_G_min(1,base,north)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
       -1       KKT_GEN(1,base,north)
        1       complementarity1b(1,base,north)

mu_G_min(1,base,south)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
       -1       KKT_GEN(1,base,south)
        1       complementarity1b(1,base,south)

mu_G_min(1,peak,north)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
       -1       KKT_GEN(1,peak,north)
        1       complementarity1b(1,peak,north)

REMAINING 189 ENTRIES SKIPPED

---- mu_G_max  

mu_G_max(1,base,north)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
        1       KKT_GEN(1,base,north)
       -1       KKT_CAP(base,north)
        1       complementarity2b(1,base,north)

mu_G_max(1,base,south)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
        1       KKT_GEN(1,base,south)
       -1       KKT_CAP(base,south)
        1       complementarity2b(1,base,south)

mu_G_max(1,peak,north)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
        1       KKT_GEN(1,peak,north)
       -1       KKT_CAP(peak,north)
        1       complementarity2b(1,peak,north)

REMAINING 189 ENTRIES SKIPPED

---- mu_C_min  

mu_C_min(base,north)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
       -1       KKT_CAP(base,north)
        1       complementarity3b(base,north)

mu_C_min(base,south)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
       -1       KKT_CAP(base,south)
        1       complementarity3b(base,south)

mu_C_min(peak,north)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
       -1       KKT_CAP(peak,north)
        1       complementarity3b(peak,north)

REMAINING 5 ENTRIES SKIPPED

---- mu_C_max  

mu_C_max(base,north)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
        1       KKT_CAP(base,north)
        1       complementarity4b(base,north)

mu_C_max(base,south)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
        1       KKT_CAP(base,south)
        1       complementarity4b(base,south)

mu_C_max(peak,north)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
        1       KKT_CAP(peak,north)
        1       complementarity4b(peak,north)

REMAINING 5 ENTRIES SKIPPED

---- GRID_CAP  

GRID_CAP(north,north)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
       -0.5     objective
       -1       grid_eq1(1,north,north)
       -1       grid_eq1(2,north,north)
       -1       grid_eq1(3,north,north)
       -1       grid_eq1(4,north,north)
       -1       grid_eq1(5,north,north)
       -1       grid_eq1(6,north,north)
       -1       grid_eq1(7,north,north)
       -1       grid_eq1(8,north,north)
       -1       grid_eq1(9,north,north)
       -1       grid_eq1(10,north,north)
       -1       grid_eq1(11,north,north)
       -1       grid_eq1(12,north,north)
       -1       grid_eq1(13,north,north)
       -1       grid_eq1(14,north,north)
       -1       grid_eq1(15,north,north)
       -1       grid_eq1(16,north,north)
       -1       grid_eq1(17,north,north)
       -1       grid_eq1(18,north,north)
       -1       grid_eq1(19,north,north)
       -1       grid_eq1(20,north,north)
       -1       grid_eq1(21,north,north)
       -1       grid_eq1(22,north,north)
       -1       grid_eq1(23,north,north)
       -1       grid_eq1(24,north,north)

GRID_CAP(north,south)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
     -287.5     objective
       -1       grid_eq1(1,north,south)
       -1       grid_eq1(2,north,south)
       -1       grid_eq1(3,north,south)
       -1       grid_eq1(4,north,south)
       -1       grid_eq1(5,north,south)
       -1       grid_eq1(6,north,south)
       -1       grid_eq1(7,north,south)
       -1       grid_eq1(8,north,south)
       -1       grid_eq1(9,north,south)
       -1       grid_eq1(10,north,south)
       -1       grid_eq1(11,north,south)
       -1       grid_eq1(12,north,south)
       -1       grid_eq1(13,north,south)
       -1       grid_eq1(14,north,south)
       -1       grid_eq1(15,north,south)
       -1       grid_eq1(16,north,south)
       -1       grid_eq1(17,north,south)
       -1       grid_eq1(18,north,south)
       -1       grid_eq1(19,north,south)
       -1       grid_eq1(20,north,south)
       -1       grid_eq1(21,north,south)
       -1       grid_eq1(22,north,south)
       -1       grid_eq1(23,north,south)
       -1       grid_eq1(24,north,south)
        1       grid_eq2(north,south)
       -1       grid_eq2(south,north)

GRID_CAP(south,north)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
     -287.5     objective
       -1       grid_eq1(1,south,north)
       -1       grid_eq1(2,south,north)
       -1       grid_eq1(3,south,north)
       -1       grid_eq1(4,south,north)
       -1       grid_eq1(5,south,north)
       -1       grid_eq1(6,south,north)
       -1       grid_eq1(7,south,north)
       -1       grid_eq1(8,south,north)
       -1       grid_eq1(9,south,north)
       -1       grid_eq1(10,south,north)
       -1       grid_eq1(11,south,north)
       -1       grid_eq1(12,south,north)
       -1       grid_eq1(13,south,north)
       -1       grid_eq1(14,south,north)
       -1       grid_eq1(15,south,north)
       -1       grid_eq1(16,south,north)
       -1       grid_eq1(17,south,north)
       -1       grid_eq1(18,south,north)
       -1       grid_eq1(19,south,north)
       -1       grid_eq1(20,south,north)
       -1       grid_eq1(21,south,north)
       -1       grid_eq1(22,south,north)
       -1       grid_eq1(23,south,north)
       -1       grid_eq1(24,south,north)
       -1       grid_eq2(north,south)
        1       grid_eq2(south,north)

REMAINING ENTRY SKIPPED

---- UP  

UP(1,base,north)
                (.LO, .L, .UP, .M = 0, 0, 100, 0)
      -60       objective
        1       nodal_energy_balance(1,north)
        1       redispatch2(1,base,north)

UP(1,base,south)
                (.LO, .L, .UP, .M = 0, 0, 100, 0)
      -60       objective
        1       nodal_energy_balance(1,south)
        1       redispatch2(1,base,south)

UP(1,peak,north)
                (.LO, .L, .UP, .M = 0, 0, 100, 0)
      -80       objective
        1       nodal_energy_balance(1,north)
        1       redispatch2(1,peak,north)

REMAINING 189 ENTRIES SKIPPED

---- DOWN  

DOWN(1,base,north)
                (.LO, .L, .UP, .M = 0, 0, 100, 0)
       60       objective
       -1       nodal_energy_balance(1,north)
        1       redispatch1(1,base,north)

DOWN(1,base,south)
                (.LO, .L, .UP, .M = 0, 0, 100, 0)
       60       objective
       -1       nodal_energy_balance(1,south)
        1       redispatch1(1,base,south)

DOWN(1,peak,north)
                (.LO, .L, .UP, .M = 0, 0, 100, 0)
       80       objective
       -1       nodal_energy_balance(1,north)
        1       redispatch1(1,peak,north)

REMAINING 189 ENTRIES SKIPPED
GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows - 10/27/21 22:59:54 Page 6
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Model Statistics    SOLVE LOCI Using MIQCP From line 245


MODEL STATISTICS

BLOCKS OF EQUATIONS          26     SINGLE EQUATIONS        2,155
BLOCKS OF VARIABLES          19     SINGLE VARIABLES        1,589
NON ZERO ELEMENTS         5,929     NON LINEAR N-Z              8
DERIVATIVE POOL              20     CONSTANT POOL              20
CODE LENGTH                  58     DISCRETE VARIABLES        424


GENERATION TIME      =        0.016 SECONDS      5 MB  30.3.0 rc5da09e WEX-WEI


EXECUTION TIME       =        0.016 SECONDS      5 MB  30.3.0 rc5da09e WEX-WEI
GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows - 10/27/21 22:59:54 Page 7
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE LOCI Using MIQCP From line 245


               S O L V E      S U M M A R Y

     MODEL   LOCI                OBJECTIVE  COSTS
     TYPE    MIQCP               DIRECTION  MINIMIZE
     SOLVER  CPLEX               FROM LINE  245

**** SOLVER STATUS     8 User Interrupt            
**** MODEL STATUS      14 No Solution Returned     
**** OBJECTIVE VALUE               NA

 RESOURCE USAGE, LIMIT       3318.468     40000.000
 ITERATION COUNT, LIMIT  46756336    2000000000
 EVALUATION ERRORS             NA             0

IBM ILOG CPLEX   30.3.0 rc5da09e Released Mar 06, 2020 WEI x86 64bit/MS Window
--- GAMS/Cplex licensed for continuous and discrete problems.
Cplex 12.10.0.0

The search will stop after 25000000 nodes.
Space for names approximately 0.11 Mb
Use option 'names no' to turn use of names off
MIQP status(114): aborted, no integer solution
Cplex Time: 3318.45sec (det. 2055984.13 ticks)
Problem aborted, no integer solution found.

No solution returned
GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows - 10/27/21 22:59:54 Page 8
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
E x e c u t i o n


**** Exec Error at line 260: division by zero (0)

----    265 VARIABLE GEN.L  

                      ( ALL       0.000 )


----    265 VARIABLE CAP.L  

                      ( ALL       0.000 )


----    265 PARAMETER network_cost         =        0.000  

----    265 VARIABLE GRID_CAP.L  

                      ( ALL       0.000 )


----    265 PARAMETER i_instrument  

                      ( ALL       0.000 )



EXECUTION TIME       =        0.015 SECONDS      3 MB  30.3.0 rc5da09e WEX-WEI


USER: Small MUD - 5 User License                     S190305:0326AO-WIN
      Hertie School of Governance GmbH, Governance of DigitalizaDC14808
      License for teaching and research at degree granting institutions


**** FILE SUMMARY

Input      C:\Users\a.eicke\Documents\Locational-investment-signals\Three node models\Cost minimization\Locational instrument.gms
Output     C:\Users\a.eicke\Documents\Locational-investment-signals\Three node models\Cost minimization\Locational instrument.lst

**** USER ERROR(S) ENCOUNTERED
